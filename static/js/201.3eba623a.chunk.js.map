{"version":3,"file":"static/js/201.3eba623a.chunk.js","mappings":"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","sources":["components/Header/Header.styled.jsx","components/UserMenu/UserMenu.styled.jsx","components/UserMenu/UserMenu.jsx","components/Header/Header.jsx","components/Modal/Modal.styled.jsx","components/Button/Button.styled.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const HeaderBox = styled.header`\ndisplay: flex;\njustify-content: space-between;\n// width: 100vw;\n  padding: 13px 20px 12px;\n\n  @media screen and (min-width: 768px) {padding: 13px 32px 12px;}\n    \n  @media screen and (min-width: 1200px) {padding: 12px 16px 13px;}  \n`;\n","import styled from 'styled-components';\nimport COLORS from 'variables/colors/colors';\n\nexport const UserContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Email = styled.p`\n  padding-right: 20px;\n  padding-left: 24px;\n  font-family: 'Roboto';\n  font-weight: 400;\n  font-size: 12px;\n  line-height: calc(14 / 12);\n  letter-spacing: 0.04;\n  border-right: 1px solid ${COLORS.borderColor};\n  color: ${COLORS.textColor};\n`;\n\nexport const ExitBtn = styled.button`\n  margin-left: 20px;\n  text-decoration: underline;\n  font-family: 'Roboto';\n  font-weight: 400;\n  font-size: 12px;\n  line-height: calc(14 / 12);\n  letter-spacing: 0.04;\n  border: none;\n  background-color: transparent;\n  color: ${COLORS.textColor};\n  cursor: pointer;\n\n  :hover,\n  :focus {\n    color: ${COLORS.activeColor};\n  }\n\n  @media screen { max-width: 767px;}\n  margin-left: 16px;\n`;\n","import { ModalWindow } from 'components/Modal';\nimport { useAuth } from 'hooks/useAuth';\nimport { useMedia } from 'hooks/useMedia';\nimport { useState } from 'react';\nimport Avatar from 'react-avatar';\nimport { useDispatch } from 'react-redux';\nimport { logOut } from 'redux/auth/authOperations';\nimport { Email, ExitBtn, UserContainer } from './UserMenu.styled';\nimport { RxExit } from 'react-icons/rx';\nimport { clearTransaction } from 'redux/transactions/transactionsSlice';\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const { userEmail } = useAuth();\n  const [modalOpen, setModalOpen] = useState(false);\n  const { isTabletAndDesktop } = useMedia();\n\n  const handleModalOpen = () => {\n    setModalOpen(true);\n  };\n\n  const handleModalClose = () => {\n    setModalOpen(false);\n  };\n\n  const handleClick = () => {\n    dispatch(logOut());\n    dispatch(clearTransaction());\n  };\n\n  return (\n    <UserContainer>\n      <Avatar\n        size=\"32\"\n        color=\"#F5F6FA\"\n        fgColor=\"#52555F\"\n        round={true}\n        name={userEmail}\n      />\n      {isTabletAndDesktop && <Email>{userEmail}</Email>}\n      <ExitBtn type=\"button\" onClick={handleModalOpen}>\n        {!isTabletAndDesktop ? <RxExit size={16} color=\"#CBCCD0\" /> : 'Exit'}\n      </ExitBtn>\n      {modalOpen && (\n        <ModalWindow closeModal={handleModalClose} dispatch={handleClick}>\n          Do you really want to leave?\n        </ModalWindow>\n      )}\n    </UserContainer>\n  );\n}\n","import { Link, Outlet } from 'react-router-dom';\nimport { HeaderBox } from './Header.styled';\nimport { useAuth } from 'hooks/useAuth';\nimport UserMenu from 'components/UserMenu';\n\nexport default function Header() {\n  const { isLoggedIn } = useAuth();\n\n  return (\n    <>\n      <HeaderBox>\n        <Link to=\"/main\">\n          <picture>\n            <source\n              srcSet={process.env.PUBLIC_URL + '/images/logo/logo.webp 1x'}\n              type=\"image/webp\"\n            />\n\n            <img\n              src={process.env.PUBLIC_URL + '/images/logo/logo.png'}\n              alt=\"logo\"\n            />\n          </picture>\n        </Link>\n\n        {isLoggedIn && <UserMenu />}\n      </HeaderBox>\n\n      <Outlet />\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Modal = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  z-index: 100;\n  transform: translate(-50%, -50%);\n  color: #52555f;\n  background-color: #fff;\n  border-radius: 30px;\n  box-shadow: 10px 10px 30px rgba(82, 85, 95, 0.4);\n`;\n\nexport const Wrapper = styled.div`\n  padding: 50px 20px 60px;\n  @media screen and (min-width: 768px) {\n    padding: 50px 58px 60px;\n  }\n`;\n\nexport const Text = styled.p`\n  margin-bottom: 20px;\n  text-align: center;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 1.14;\n  letter-spacing: 0.02em;\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  gap: 15px;\n`;\n\nexport const CloseButton = styled.button`\n  border: none;\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  background: transparent;\n  cursor: pointer;\n`;\n\nexport const Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  z-index: 100;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  background-color: rgba(0, 0, 0, 0.2);\n`;\n","import styled from 'styled-components';\nimport COLORS from 'variables/colors/colors';\n\nexport const Button = styled.button`\n  width: 125px;\n  height: 44px;\n  background: ${COLORS.whiteColor};\n  border-radius: 16px;\n  font-size: 12px;\n  line-height: 14px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  letter-spacing: 0.02em;\n  text-transform: uppercase;\n  color: ${COLORS.textColor};\n  border: 2px solid #f6f7fc;\n  text-align: center;\n  transition: background 400ms ease-in-out, color 400ms ease-in-out;\n\n  &:not(:last-child) {\n    margin-right: 15px;\n  }\n\n  :hover,\n  :focus {\n    background: ${COLORS.activeColor};\n    color: ${COLORS.whiteColor};\n  }\n`;\n","import { Button } from './Button.styled';\n\nexport const BtnLogOut = ({ children, dispatch, closeModal }) => {\n  const handleClick = () => {\n    if (children === 'Yes') {\n      dispatch();\n      closeModal();\n    }\n  };\n\n  return <Button onClick={handleClick}>{children}</Button>;\n};\n\nexport const BtnDismiss = ({ children, closeModal }) => {\n  return <Button onClick={closeModal}>{children}</Button>;\n};\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport {\n  Modal,\n  Wrapper,\n  Text,\n  ButtonWrapper,\n  CloseButton,\n  Backdrop,\n} from './Modal.styled';\nimport { FiX } from 'react-icons/fi';\nimport { BtnDismiss, BtnLogOut } from 'components/Button/Button';\n\nconst modalRoot = document.getElementById('modal-root');\nconst body = document.querySelector('body');\n\nexport const ModalWindow = ({ children, closeModal, dispatch }) => {\n  useEffect(() => {\n    window.addEventListener('keydown', handleEscapeClose);\n    return () => {\n      window.removeEventListener('keydown', handleEscapeClose);\n      body.classList.toggle('no-scroll');\n    };\n  });\n\n  const handleEscapeClose = event => {\n    if (event.code === 'Escape') {\n      closeModal();\n    }\n  };\n\n  const handleBackdropClose = event => {\n    if (event.target === event.currentTarget) {\n      closeModal();\n    }\n  };\n\n  return createPortal(\n    <Backdrop className=\"modal-backdrop\" onClick={handleBackdropClose}>\n      <Modal>\n        <CloseButton onClick={closeModal}>\n          <FiX size={20} />\n        </CloseButton>\n\n        <Wrapper>\n          <Text>{children}</Text>\n          <ButtonWrapper>\n            <BtnLogOut\n              type=\"button\"\n              dispatch={dispatch}\n              closeModal={closeModal}\n            >\n              Yes\n            </BtnLogOut>\n            <BtnDismiss type=\"button\" closeModal={closeModal}>\n              No\n            </BtnDismiss>\n          </ButtonWrapper>\n        </Wrapper>\n      </Modal>\n    </Backdrop>,\n    modalRoot\n  );\n};\n"],"names":["HeaderBox","styled","UserContainer","Email","COLORS","ExitBtn","UserMenu","dispatch","useDispatch","userEmail","useAuth","useState","modalOpen","setModalOpen","isTabletAndDesktop","useMedia","size","color","fgColor","round","name","type","onClick","Modal","closeModal","logOut","clearTransaction","Header","isLoggedIn","to","srcSet","src","alt","Wrapper","Text","ButtonWrapper","CloseButton","Backdrop","Button","BtnLogOut","children","BtnDismiss","modalRoot","document","getElementById","body","querySelector","ModalWindow","useEffect","window","addEventListener","handleEscapeClose","removeEventListener","classList","toggle","event","code","createPortal","className","target","currentTarget"],"sourceRoot":""}