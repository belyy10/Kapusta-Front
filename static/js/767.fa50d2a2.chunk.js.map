{"version":3,"file":"static/js/767.fa50d2a2.chunk.js","mappings":"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","sources":["components/BackgroundPrivateContainer/BackgroundPrivateContainer.styled.jsx","components/BackgroundPrivateContainer/BackgroundPrivateContainer.jsx","components/Balance/Balance.styled.jsx","components/Balance/Balance.jsx","components/Container/Container.styled.jsx","components/Container/Container.jsx","hooks/useMedia.js","pages/Main/Main.styled.jsx","components/TransactionsContainer/TransactionsContainer.styled.jsx","components/TableBody/TableBody.styled.jsx","components/TableBody/TableBody.jsx","components/Table/Table.styled.jsx","components/Table/Table.jsx","components/TransactionListMobile/TransactionListMobile.styled.jsx","components/TransactionListMobile/TransactionListMobile.jsx","components/TransactionsContainer/TransactionsContainer.jsx","pages/Main/Main.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport COLORS from 'variables/colors/colors';\n\nexport const Container = styled.div`\n  padding-bottom: 514px;\n  background-color: ${COLORS.whiteColor};\n\n  @media screen and (min-width: 768px) {\n    padding-bottom: 442px;\n\n    background-image: url(${props => props.groupImg});\n    background-repeat: no-repeat;\n    background-position: bottom 59px right calc(((100% - 678px)));\n  }\n\n  @media screen and (min-width: 1200px) {\n    background-image: url(${props => props.img});\n    padding-bottom: 268px;\n    background-position: bottom right;\n  }\n`;\n\nexport const ContainerTop = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n\n  height: 320px;\n  background-color: #f5f6fb;\n\n  border-bottom-left-radius: 100px 100px;\n\n  @media screen and (min-width: 768px) {\n    height: 582px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    height: 583px;\n  }\n`;\n\nexport const ContainerUnder = styled.div``;\n","import { Container, ContainerTop } from './BackgroundPrivateContainer.styled';\n\nexport default function BackgroundPrivateContainer({ children }) {\n  return (\n    <Container\n      groupImg={process.env.PUBLIC_URL + '/images/groupCabbage.png'}\n      img={process.env.PUBLIC_URL + '/images/background.png'}\n    >\n      <ContainerTop>{children}</ContainerTop>\n    </Container>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  flex-direction: column;\n  justify-content: center;\n  margin: 0 auto;\n\n  @media (min-width: 768px) {\n    display: flex;\n    align-items: center;\n    justify-content: space-around;\n    position: relative;\n    width: fit-content;\n    margin: 0 auto;\n    flex-direction: row;\n    align-self: center;\n    margin-bottom: 60px;\n  }\n  @media (min-width: 1200px) {\n    margin-bottom: 48px;\n    padding-top: 40px;\n  }\n`;\nexport const Title = styled.p`\n  font-size: 12px;\n  line-height: 14px;\n  font-weight: 500;\n  text-align: center;\n  letter-spacing: 0.02em;\n  color: rgba(82, 85, 95, 0.7);\n  margin-right: 20px;\n  margin-bottom: 8px;\n  @media screen and (min-width: 768px) and (max-width: 1280px) {\n    margin-right: 21px;\n    margin-bottom: 0px;\n  }\n`;\nexport const Section = styled.form`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;\nexport const Input = styled.input`\n  border: 2px solid #ffffff;\n  border-radius: 16px;\n  background-color: transparent;\n  font-weight: 700;\n  text-align: center;\n  color: black;\n  width: 140px;\n  height: 44px;\n  border-radius: 22px 0px 0px 22px;\n\n  @media screen and (min-width: 768px) {\n    margin-right: 15px;\n    border-radius: 16px;\n  }\n  @media (min-width: 1200px) {\n    margin-right: 0;\n    border-radius: 16px;\n    margin-right: 15px;\n    border-right: 1px solid #ffffff;\n  }\n`;\nexport const Button = styled.button`\n  background-color: transparent;\n  border: 2px solid #ffffff;\n  color: rgba(82, 85, 95, 0.7);\n  font-weight: 400;\n  border-radius: 0px 22px 22px 0px;\n  display: inline-block;\n  height: 50px;\n  width: 156px;\n\n  font-size: 12px;\n  line-height: 1.17;\n  letter-spacing: 0.02em;\n\n  text-transform: uppercase;\n  text-align: center;\n\n  @media screen and (min-width: 768px) {\n    border-radius: 16px;\n  }\n\n  :hover {\n    background-color: #ff751d;\n  }\n\n  ::placeholder {\n    font-weight: 700;\n    font-size: 12px;\n    line-height: 14px;\n    display: flex;\n    align-items: center;\n    letter-spacing: 0.02em;\n    text-transform: uppercase;\n    color: #000000;\n  }\n`;\nexport const Wrapper2 = styled.div`\n  position: absolute;\n  bottom: 0;\n  transform: translateY(calc(100% + 18px)) translateX(16%);\n  width: 292px;\n  background: linear-gradient(117.84deg, #1d346a 2.84%, #031634 67.28%);\n  box-shadow: 0px 10px 60px rgba(170, 178, 197, 0.2);\n  padding: 30px;\n  border-radius: 30px;\n  z-index: 10;\n\n  ::before {\n    content: '';\n    position: absolute;\n    left: 16%;\n    top: -11px;\n    width: 0;\n    height: 0;\n    border-left: 11px solid transparent;\n    border-right: 11px solid transparent;\n    border-bottom: 11px solid #172d5d;\n  }\n`;\n\nexport const Text = styled.p`\n  font-size: 14px;\n  line-height: 20px;\n  color: #ffffff;\n  margin: 0px 0px 20px 0px;\n`;\nexport const Styled = styled.p`\n  font-size: 12px;\n  line-height: 16px;\n  color: #ffffff;\n  margin: 0;\n`;\n","import Container from 'components/Container';\nimport React from 'react';\n// import React, { useState, useEffect } from 'react';\n// import { useSelector, useDispatch } from 'react-redux';\n// import { selectUserBalance } from 'redux/auth/authSelectors';\n// import { getDate } from 'redux/transactions/transactionsSelectors';\n// import { updateBalance } from 'redux/auth/authOperations';\n// import {\n//   fetchUserTransactions,\n//   fetchSummaryExpenses,\n//   fetchSummaryIncomes,\n// } from 'redux/transactions/transactionsOperations';\nimport {\n  Wrapper,\n  Button,\n  Title,\n  Section,\n  Input,\n  Wrapper2,\n  Text,\n  Styled,\n} from './Balance.styled';\n\nexport default function Balance() {\n  // const dispatch = useDispatch();\n  // const balance = useSelector(selectUserBalance);\n  // const token = useSelector(state => state.auth.user.accessToken);\n\n  // const [value, setValue] = useState(balance ?? 0);\n  // const [tooltipOpen, setTooltipOpen] = useState(true);\n  // const [isSent, setIsSent] = useState(false);\n\n  // const onBlur = e => {\n  //   const data = e.target.value.split(' ').join('');\n  //   setValue(data);\n  //   setIsSent(false);\n  // };\n\n  // const onClick = () => {\n  //   dispatch(updateBalance({ value, token }));\n  //   setIsSent(true);\n  // };\n\n  return (\n    <Container>\n      <Wrapper>\n        <Title>Balance:</Title>\n        <Section autoComplete=\"off\">\n          <Input\n          // type=\"number\"\n          // placeholder=\"00.00 UAH\"\n          // value={value}\n          // onBlur={onBlur}\n          />\n\n          {/* <Button type=\"button\" onClick={onClick}> */}\n          <Button type=\"button\">Confirm</Button>\n        </Section>\n        {/* {!balance > 0 && ( */}\n        <Wrapper2>\n          {/* <Wrapper2 setTooltipOpen={setTooltipOpen}> */}\n          <Text>\n            Hello! To get started, enter the current balance of your account!\n          </Text>\n          <Styled>You can't spend money until you have it :{' ) '}</Styled>\n        </Wrapper2>\n        {/* )} */}\n      </Wrapper>\n    </Container>\n  );\n}\n","import styled from 'styled-components';\n\nexport const ContainerBox = styled.div`\n  position: relative;\n  margin-left: auto;\n  margin-right: auto;\n  width: 320px;\n  background: #f2f5fc;\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    min-width: 1200px;\n  }\n`;\n","import { ContainerBox } from './Container.styled';\n\nexport default function Container({ children }) {\n  return <ContainerBox>{children}</ContainerBox>;\n}\n","import { useMediaQuery } from 'react-responsive';\n\nexport const useMedia = () => {\n  const isDesktop = useMediaQuery({\n    query: '(min-width: 1200px)',\n  });\n  const isTabletAndDesktop = useMediaQuery({\n    query: '(min-width: 768px)',\n  });\n  const isMobile = useMediaQuery({ minWidth: 320, maxWidth: 767 });\n  const isTablet = useMediaQuery({ minWidth: 768, maxWidth: 1199 });\n\n  return {\n    isTablet,\n    isMobile,\n    isDesktop,\n    isTabletAndDesktop,\n  };\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { RiBarChartFill } from 'react-icons/ri';\n\nexport const LinkReport = styled(Link)`\n  display: flex;\n  align-items: center;\n\n  text-decoration: none;\n  font-family: 'Roboto';\n\n  font-weight: 400;\n  font-size: 12px;\n  line-height: calc(14 / 12);\n\n  letter-spacing: 0.04;\n\n  color: rgba(82, 85, 95, 0.7);\n\n  @media screen and (min-width: 678px) {\n    position: absolute;\n    top: 57px;\n    right: 0;\n    z-index: 20;\n  }\n`;\n\nexport const IconLink = styled(RiBarChartFill)`\n  margin-left: 20px;\n`;\n","import styled from 'styled-components';\nimport COLORS from 'variables/colors/colors';\n\nexport const TransactionsWrapper = styled.section`\n  @media screen and (min-width: 768px) {\n    margin-top: 60px;\n    width: 704px;\n    padding: 24px 40px 42px 40px;\n    display: flex;\n    flex-direction: column;\n    position: relative;\n    background-color: ${COLORS.whiteColor};\n    box-shadow: 0px 10px 60px rgba(170, 178, W197, 0.2);\n    border-top-right-radius: 30px;\n    border-bottom-right-radius: 30px;\n    border-bottom-left-radius: 30px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    width: 1098px;\n    padding: 32px 32px;\n  }\n`;\n\nexport const Expenses = styled.button`\n  @media screen and (max-width: 767px) {\n    display: none;\n  }\n  @media screen and (min-width: 768px) {\n    width: 138px;\n    higth: 40px;\n    display: inline-block;\n    position: absolute;\n    top: -38px;\n    left: 0px;\n    padding: 10px 20px;\n    background-color: #fefefe;\n    color: ${props =>\n      props.isActive ? COLORS.activeColor : COLORS.blackColor};\n    font-weight: bold;\n    text-align: center;\n    border-top-left-radius: 16px;\n    border-top-right-radius: 16px;\n    border: transparent;\n    text-decoration: none;\n    transition: all 0.2s ease-in-out;\n    cursor: pointer;\n    outline: none;\n  }\n`;\n\nexport const Incomes = styled.button`\n  @media screen and (max-width: 767px) {\n    display: none;\n  }\n  @media screen and (min-width: 768px) {\n    width: 138px;\n    higth: 40px;\n    display: inline-block;\n    position: absolute;\n    top: -38px;\n    left: 138px;\n    padding: 10px 20px;\n    background-color: #fefefe;\n    color: ${props =>\n      props.isActive ? COLORS.activeColor : COLORS.blackColor};\n    font-weight: bold;\n    text-align: center;\n    border-top-left-radius: 16px;\n    border-top-right-radius: 16px;\n    text-decoration: none;\n    transition: all 0.2s ease-in-out;\n    cursor: pointer;\n    outline: none;\n    border: transparent;\n  }\n`;\n","import styled from 'styled-components';\nimport COLORS from 'variables/colors/colors';\n\nexport const TableBodyList = styled.tr`\n  height: 40px;\n  border: 2px solid ${COLORS.bgTableTitle};\n`;\n\nexport const TableBodyItem = styled.td`\n  height: 100%;\n  width: calc(746px / 5);\n\n  text-align: center;\n\n  font-family: 'Roboto';\n  font-weight: 400;\n  font-size: 12px;\n  line-height: calc(14 / 12);\n  letter-spacing: 0.04em;\n\n  color: ${COLORS.textColor};\n\n  :nth-child(4) {\n    font-weight: 700;\n    color: ${COLORS.greenColor};\n  }\n  :nth-child(5) {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nexport const DeleteBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 32px;\n  height: 32px;\n\n  border: none;\n  border-radius: 50%;\n\n  background-color: ${COLORS.bgTableTitle};\n  cursor: pointer;\n\n  :hover,\n  :focus {\n    background-color: ${COLORS.activeColor};\n  }\n`;\n","import { BsTrash } from 'react-icons/bs';\nimport { DeleteBtn, TableBodyItem, TableBodyList } from './TableBody.styled';\n\nexport default function TableBody({ transaction }) {\n  return (\n    <TableBodyList>\n      <TableBodyItem>{transaction.date}</TableBodyItem>\n      <TableBodyItem>{transaction.description}</TableBodyItem>\n      <TableBodyItem>{transaction.category}</TableBodyItem>\n      <TableBodyItem>{transaction.sum} UAH.</TableBodyItem>\n      <TableBodyItem>\n        <DeleteBtn>\n          <BsTrash />\n        </DeleteBtn>\n      </TableBodyItem>\n    </TableBodyList>\n  );\n}\n","import styled from 'styled-components';\nimport COLORS from 'variables/colors/colors';\n\nexport const TransactionBox = styled.div`\n  overflow: hidden;\n\n  border-top-left-radius: 16px;\n  border-top-right-radius: 16px;\n\n  @media screen and (min-width: 1200px) {\n    width: 624px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    width: 746px;\n    height: 400px;\n  }\n`;\n\nexport const TableBox = styled.table`\n  width: 100%;\n\n  border: none;\n\n  border-spacing: 0;\n  border-collapse: collapse;\n\n  table-layout: fixed;\n\n  background-color: ${COLORS.whiteColor};\n\n  @media screen and (min-width: 1200px) {\n    width: 746px;\n    height: 400px;\n  }\n`;\n\nexport const TableTitle = styled.tr``;\n\nexport const TableTitleItem = styled.th`\n  width: calc(100% / 5);\n  height: 40px;\n\n  border-spacing: 0;\n\n  background-color: ${COLORS.bgTableTitle};\n  text-transform: uppercase;\n`;\n\nexport const TableBodys = styled.tbody`\n  display: block;\n  overflow-y: auto;\n  width: 746px;\n  max-height: 400px;\n\n  ::-webkit-scrollbar {\n    width: 6px;\n    background-color: ${COLORS.bgTableTitle};\n  }\n\n  ::-webkit-scrollbar-thumb {\n    border-radius: 2px;\n\n    background-color: ${COLORS.activeColor};\n  }\n`;\n","import TableBody from 'components/TableBody';\n// import { useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\nimport {\n  TableBox,\n  TableTitle,\n  TableTitleItem,\n  TransactionBox,\n  TableBodys,\n} from './Table.styled';\n\n// import {\n//   getDate,\n//   getTransactions,\n//   getType,\n// } from 'redux/transactions/transactionsSelectors';\n\n// import { fetchUserTransactions } from 'redux/transactions/transactionsOperations';\n\nconst monthTransaction = [\n  {\n    id: 1,\n    date: '21.09.2019',\n    description: 'salary',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: 12,\n    date: '21.09.2019',\n    description: 'salary',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: 13321,\n    date: '21.09.2019',\n    description: 'salary',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: 14,\n    date: '21.09.2019',\n    description: 'salary',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: 41,\n    date: '21.09.2019',\n    description: 'salary',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: 13,\n    date: '21.09.2019',\n    description: 'salary',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: 133,\n    date: '21.09.2019',\n    description: 'salary',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: 132,\n    date: '21.09.2019',\n    description: 'salary',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: 1432423,\n    date: '21.09.2019',\n    description: 'salary',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: 142,\n    date: '21.09.2019',\n    description: 'salary',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: Math.random(),\n    date: '21.09.2019',\n    description: 'salary',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: Math.random(),\n    date: '21.09.2019',\n    description: 'salary',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: Math.random(),\n    date: '21.09.2019',\n    description: 'salary',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: Math.random(),\n    date: '21.09.2019',\n    description: 'salary',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: Math.random(),\n    date: '21.09.2019',\n    description: 'salary',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: Math.random(),\n    date: '21.09.2019',\n    description: 'salary',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: Math.random(),\n    date: '21.09.2019',\n    description: 'salary',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: Math.random(),\n    date: '21.09.2019',\n    description: 'salary',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: Math.random(),\n    date: '21.09.2019',\n    description: 'salary',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: Math.random(),\n    date: '21.09.2019',\n    description: 'salary',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: Math.random(),\n    date: '21.09.2019',\n    description: 'salary',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: Math.random(),\n    date: '21.09.2019',\n    description: 'salary',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: Math.random(),\n    date: '21.09.2019',\n    description: 'salary',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: Math.random(),\n    date: '21.09.2019',\n    description: 'salary',\n    category: 'car',\n    sum: 2000,\n  },\n];\n\nexport default function Table() {\n  // const dispatch = useDispatch();\n  // const date = useSelector(getDate);\n  // const type = useSelector(getType);\n  // useEffect(() => {\n  //   dispatch(fetchUserTransactions(date));\n  // }, [dispatch, date]);\n\n  // const transactions = useSelector(getTransactions);\n  // const filtredTransactions = transactions.filter(tr => tr.type === type);\n\n  return (\n    <TransactionBox>\n      <TableBox>\n        <thead>\n          <TableTitle>\n            <TableTitleItem>DATE</TableTitleItem>\n            <TableTitleItem>DESCRIPTION</TableTitleItem>\n            <TableTitleItem>category</TableTitleItem>\n            <TableTitleItem>sum</TableTitleItem>\n            <TableTitleItem></TableTitleItem>\n          </TableTitle>\n        </thead>\n        <TableBodys>\n          {monthTransaction &&\n            monthTransaction.map(transaction => (\n              <TableBody key={transaction.id} transaction={transaction} />\n            ))}\n        </TableBodys>\n      </TableBox>\n    </TransactionBox>\n  );\n}\n","import styled from 'styled-components';\nimport COLORS from '../../variables/colors/colors';\n\nexport const TransactionItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  padding: 8px 0;\n  border-bottom: 1px solid ${COLORS.bgTableTitle};\n`;\n\nexport const TransactionDescription = styled.p`\n  font-family: 'Roboto';\n  font-weight: 700;\n  font-size: 12px;\n  line-height: calc(14 / 12);\n  letter-spacing: 0.04em;\n\n  color: ${COLORS.textColor};\n`;\n\nexport const TransactionInfoBox = styled.div`\n  display: flex;\n  gap: 20px;\n  margin-top: 4px;\n`;\n\nexport const TransactionInfo = styled.p`\n  font-family: 'Roboto';\n  font-weight: 400;\n  font-size: 8px;\n  line-height: calc(9 / 8);\n  letter-spacing: 0.04em;\n\n  color: ${COLORS.textColor};\n`;\n\nexport const TransactionBox = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const TransactionSum = styled.p`\n  font-family: 'Roboto';\n\n  font-weight: 700;\n  font-size: 12px;\n  line-height: calc(14 / 12);\n  letter-spacing: 0.04em;\n\n  color: ${COLORS.greenColor};\n`;\n\nexport const TransactionDeleteBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  border: none;\n  background-color: transparent;\n\n  cursor: pointer;\n`;\n","import { BsTrash } from 'react-icons/bs';\nimport {\n  TransactionBox,\n  TransactionDeleteBtn,\n  TransactionDescription,\n  TransactionInfo,\n  TransactionInfoBox,\n  TransactionItem,\n  TransactionSum,\n} from './TransactionListMobile.styled';\n\nconst monthTransaction = [\n  {\n    id: 1,\n    date: '21.09.2019',\n    description: 'salary',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: 12,\n    date: '21.09.2019',\n    description: 'salary',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: 13321,\n    date: '21.09.2019',\n    description: 'salary',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: 14,\n    date: '21.09.2019',\n    description: 'salary',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: 41,\n    date: '21.09.2019',\n    description: 'salary',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: 13,\n    date: '21.09.2019',\n    description: 'salary',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: 133,\n    date: '21.09.2019',\n    description: 'salary',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: 132,\n    date: '21.09.2019',\n    description: 'salary',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: 1432423,\n    date: '21.09.2019',\n    description: 'salary',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: 142,\n    date: '21.09.2019',\n    description: 'salary',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: Math.random(),\n    date: '21.09.2019',\n    description: 'salary',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: Math.random(),\n    date: '21.09.2019',\n    description: 'salary',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: Math.random(),\n    date: '21.09.2019',\n    description: 'salary',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: Math.random(),\n    date: '21.09.2019',\n    description: 'salary',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: Math.random(),\n    date: '21.09.2019',\n    description: 'salary',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: Math.random(),\n    date: '21.09.2019',\n    description: 'salary',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: Math.random(),\n    date: '21.09.2019',\n    description: 'salary',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: Math.random(),\n    date: '21.09.2019',\n    description: 'salary',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: Math.random(),\n    date: '21.09.2019',\n    description: 'salary',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: Math.random(),\n    date: '21.09.2019',\n    description: 'salary',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: Math.random(),\n    date: '21.09.2019',\n    description: 'salary',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: Math.random(),\n    date: '21.09.2019',\n    description: 'salary',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: Math.random(),\n    date: '21.09.2019',\n    description: 'salary',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: Math.random(),\n    date: '21.09.2019',\n    description: 'salary',\n    category: 'car',\n    sum: 2000,\n  },\n];\n\nexport default function TransactionListMobile() {\n  return (\n    <ul>\n      {monthTransaction.map(({ id, date, description, category, sum }) => {\n        return (\n          <TransactionItem key={id}>\n            <div>\n              <TransactionDescription>{description}</TransactionDescription>\n              <TransactionInfoBox>\n                <TransactionInfo>{date}</TransactionInfo>\n                <TransactionInfo>{category}</TransactionInfo>\n              </TransactionInfoBox>\n            </div>\n            <TransactionBox>\n              <TransactionSum>{sum}</TransactionSum>\n              <TransactionDeleteBtn>\n                <BsTrash width={15} height={18} />\n              </TransactionDeleteBtn>\n            </TransactionBox>\n          </TransactionItem>\n        );\n      })}\n    </ul>\n  );\n}\n","import { useState } from 'react';\n\nimport CreateExpenses from 'components/CreateTransaction/CreateTransaction';\nimport {\n  TransactionsWrapper,\n  Incomes,\n  Expenses,\n} from './TransactionsContainer.styled';\nimport { useMedia } from 'hooks/useMedia';\nimport Table from 'components/Table';\nimport TransactionListMobile from 'components/TransactionListMobile';\n\nexport default function TransactionsContainer() {\n  const { isTabletAndDesktop, isMobile } = useMedia();\n  const [transactions, setTransactions] = useState('incomes');\n  const [isActive, setIsActive] = useState({\n    incomes: true,\n    expenses: false,\n  });\n\n  function changeTransaction(state) {\n    setTransactions(state);\n\n    if (state === 'incomes') {\n      setIsActive({\n        incomes: true,\n        expenses: false,\n      });\n      return;\n    }\n    setIsActive({\n      incomes: false,\n      expenses: true,\n    });\n    return;\n  }\n\n  return (\n    <TransactionsWrapper>\n      <Incomes\n        isActive={isActive.incomes}\n        onClick={() => changeTransaction('incomes')}\n      >\n        Incomes\n      </Incomes>\n      <Expenses\n        isActive={isActive.expenses}\n        onClick={() => changeTransaction('expenses')}\n      >\n        Expenses\n      </Expenses>\n      <CreateExpenses transactions={transactions} />\n      {isTabletAndDesktop && <Table transactions={transactions} />}\n      {isMobile && <TransactionListMobile transactions={transactions} />}\n    </TransactionsWrapper>\n  );\n}\n","import BackgroundPrivateContainer from 'components/BackgroundPrivateContainer';\nimport Balance from 'components/Balance';\nimport Container from 'components/Container';\nimport { IconLink, LinkReport } from './Main.styled';\n// import CreateExpenses from 'components/Expenses/Expenses';\nimport TransactionsContainer from 'components/TransactionsContainer/TransactionsContainer';\n\nexport default function Main() {\n  return (\n    <BackgroundPrivateContainer>\n      <Container>\n        <LinkReport to=\"/reports\">\n          reports\n          <IconLink size={14} color=\" #52555F\" />\n        </LinkReport>\n        <Balance />\n        <TransactionsContainer />\n      </Container>\n    </BackgroundPrivateContainer>\n  );\n}\n"],"names":["Container","styled","COLORS","props","groupImg","img","ContainerTop","BackgroundPrivateContainer","children","process","Wrapper","Title","Section","Input","Button","Wrapper2","Text","Styled","Balance","autoComplete","type","ContainerBox","useMedia","isDesktop","useMediaQuery","query","isTabletAndDesktop","isMobile","minWidth","maxWidth","isTablet","LinkReport","Link","IconLink","RiBarChartFill","TransactionsWrapper","Expenses","isActive","Incomes","TableBodyList","TableBodyItem","DeleteBtn","TableBody","transaction","date","description","category","sum","TransactionBox","TableBox","TableTitle","TableTitleItem","TableBodys","monthTransaction","id","Math","random","Table","map","TransactionItem","TransactionDescription","TransactionInfoBox","TransactionInfo","TransactionSum","TransactionDeleteBtn","TransactionListMobile","width","height","TransactionsContainer","useState","transactions","setTransactions","incomes","expenses","setIsActive","changeTransaction","state","onClick","Main","to","size","color"],"sourceRoot":""}