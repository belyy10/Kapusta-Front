{"version":3,"file":"static/js/140.bab0e17b.chunk.js","mappings":"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","sources":["components/BackgroundPrivateContainer/BackgroundPrivateContainer.styled.jsx","components/BackgroundPrivateContainer/BackgroundPrivateContainer.jsx","components/Balance/Balance.styled.jsx","components/Balance/Balance.jsx","pages/Main/Main.styled.jsx","components/TransactionsContainer/TransactionsContainer.styled.jsx","components/TableBody/TableBody.styled.jsx","components/TableBody/TableBody.jsx","components/Table/Table.styled.jsx","components/Table/Table.jsx","components/TransactionsContainer/TransactionsContainer.jsx","pages/Main/Main.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport COLORS from 'variables/colors/colors';\n\nexport const Container = styled.div`\n  padding-bottom: 514px;\n  background-color: ${COLORS.whiteColor};\n\n  @media screen and (min-width: 768px) {\n    padding-bottom: 442px;\n\n    background-image: url(${props => props.groupImg});\n    background-repeat: no-repeat;\n    background-position: bottom 59px right calc(((100% - 678px)));\n  }\n\n  @media screen and (min-width: 1200px) {\n    background-image: url(${props => props.img});\n    padding-bottom: 268px;\n    background-position: bottom right;\n  }\n`;\n\nexport const ContainerTop = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n\n  height: 320px;\n  background-color: #f5f6fb;\n\n  border-bottom-left-radius: 100px 100px;\n\n  @media screen and (min-width: 768px) {\n    height: 582px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    height: 583px;\n  }\n`;\n\nexport const ContainerUnder = styled.div``;\n","import { Container, ContainerTop } from './BackgroundPrivateContainer.styled';\n\nexport default function BackgroundPrivateContainer({ children }) {\n  return (\n    <Container\n      groupImg={process.env.PUBLIC_URL + '/images/groupCabbage.png'}\n      img={process.env.PUBLIC_URL + '/images/background.png'}\n    >\n      <ContainerTop>{children}</ContainerTop>\n    </Container>\n  );\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin: 0 auto 40px auto;\n  // padding-top: 104px;\n\n  @media (min-width: 768px) {\n    display: flex;\n    align-items: center;\n    justify-content: space-around;\n    position: relative;\n    width: fit-content;\n    margin: 0 auto;\n    flex-direction: row;\n    align-self: center;\n    padding-bottom: 40px;\n    padding-top: 40px;\n  }\n  @media (min-width: 1200px) {\n    margin-bottom: 48px;\n    padding-top: 40px;\n  }\n`;\nexport const Title = styled.p`\n  font-size: 12px;\n  line-height: 14px;\n  font-weight: 500;\n  text-align: center;\n  letter-spacing: 0.02em;\n  color: rgba(82, 85, 95, 0.7);\n  margin-right: 20px;\n  margin-bottom: 8px;\n  @media screen and (min-width: 768px) and (max-width: 1280px) {\n    margin-right: 21px;\n    margin-bottom: 0px;\n  }\n`;\nexport const Section = styled.form`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;\n\nexport const InputContainer = styled.div`\n  display: flex;\n  align-items: baseline;\n  justify-content: center;\n  position: relative;\n`;\n\nexport const Input = styled.input`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  align-content: center;\n  border: 2px solid #ffffff;\n  border-radius: 16px;\n  background-color: transparent;\n  font-weight: 700;\n  text-align: center;\n  color: black;\n  width: 140px;\n  height: 44px;\n  border-radius: 22px 0px 0px 22px;\n\n  @media screen and (min-width: 768px) {\n    margin-right: 15px;\n    border-radius: 16px;\n  }\n  @media (min-width: 1200px) {\n    margin-right: 0;\n    border-radius: 16px;\n    margin-right: 15px;\n    border-right: 1px solid #ffffff;\n  }\n`;\nexport const Label = styled.label`\n  position: absolute;\n  top: 21px;\n  right: 5px;\n  font-weight: 600;\n  color: black;\n  font-size: 12px;\n  @media screen and (min-width: 768px) {\n    top: 19px;\n    right: 22px;\n  }\n`;\n\nexport const Button = styled.button`\n  background-color: transparent;\n  border: 2px solid #ffffff;\n  color: rgba(82, 85, 95, 0.7);\n  font-weight: 400;\n  border-radius: 0px 22px 22px 0px;\n  display: inline-block;\n  height: 50px;\n  width: 156px;\n\n  font-size: 12px;\n  line-height: 1.17;\n  letter-spacing: 0.02em;\n\n  text-transform: uppercase;\n  text-align: center;\n\n  @media screen and (min-width: 768px) {\n    border-radius: 16px;\n  }\n\n  :hover {\n    background-color: #ff751d;\n  }\n\n  ::placeholder {\n    font-weight: 700;\n    font-size: 12px;\n    line-height: 14px;\n    display: flex;\n    align-items: center;\n    letter-spacing: 0.02em;\n    text-transform: uppercase;\n    color: #000000;\n  }\n`;\nexport const Wrapper2 = styled.div`\n  position: absolute;\n  bottom: 42px;\n  transform: translateY(calc(100% + 18px)) translateX(16%);\n  width: 292px;\n  background: linear-gradient(117.84deg, #1d346a 2.84%, #031634 67.28%);\n  box-shadow: 0px 10px 60px rgba(170, 178, 197, 0.2);\n  padding: 30px;\n  border-radius: 30px;\n  z-index: 10;\n\n  ::before {\n    content: '';\n    position: absolute;\n    left: 16%;\n    top: -11px;\n    width: 0;\n    height: 0;\n    border-left: 11px solid transparent;\n    border-right: 11px solid transparent;\n    border-bottom: 11px solid #172d5d;\n  }\n`;\n\nexport const Text = styled.p`\n  font-size: 14px;\n  line-height: 20px;\n  color: #ffffff;\n  margin: 0px 0px 20px 0px;\n`;\nexport const Styled = styled.p`\n  font-size: 12px;\n  line-height: 16px;\n  color: #ffffff;\n  margin: 0;\n`;\n\nexport const LinkReport = styled(Link)`\n  display: flex;\n  align-items: center;\n\n  text-decoration: none;\n  font-family: 'Roboto';\n\n  font-weight: 400;\n  font-size: 12px;\n  line-height: calc(14 / 12);\n\n  letter-spacing: 0.04;\n\n  color: rgba(82, 85, 95, 0.7);\n\n  @media screen and (min-width: 678px) {\n    position: absolute;\n    top: 57px;\n    right: 0;\n    z-index: 20;\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { updateBalance } from 'redux/auth/authOperations';\n\nimport {\n  Wrapper,\n  Button,\n  Title,\n  Section,\n  Input,\n  Wrapper2,\n  Text,\n  Styled,\n  InputContainer,\n  Label,\n} from './Balance.styled';\nimport { useAuth } from 'hooks/useAuth';\n\nexport default function Balance() {\n  const dispatch = useDispatch();\n  const { balance } = useAuth();\n\n  const [value, setValue] = useState({ balance } ?? 0);\n  const [tooltipOpen, setTooltipOpen] = useState(true);\n\n  useEffect(() => {\n    setValue(balance);\n  }, [balance]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    dispatch(updateBalance({ balance: e.target.elements.balance.value }));\n  };\n\n  const onChange = e => {\n    if (e.target.value < 0) {\n      return;\n    }\n    setValue(e.target.value);\n  };\n\n  return (\n    <Wrapper>\n      <Title>Balance:</Title>\n      <Section autoComplete=\"off\" onSubmit={onSubmit}>\n        <InputContainer>\n          <Input\n            type=\"number\"\n            placeholder={`0.00`}\n            name=\"balance\"\n            value={value}\n            readOnly={balance}\n            pattern=\"[0-9, UAH]\"\n            disabled={balance > 0 ? true : false}\n            onChange={onChange}\n          />\n          <Label>UAH</Label>\n        </InputContainer>\n        <Button type=\"submit\" disabled={balance > 0 ? true : false}>\n          Confirm\n        </Button>\n      </Section>\n      {!balance > 0 && (\n        <Wrapper2 active={tooltipOpen} setActive={setTooltipOpen}>\n          <Text>\n            Hello! To get started, enter the current balance of your account!\n          </Text>\n          <Styled>You can't spend money until you have it :{' ) '}</Styled>\n        </Wrapper2>\n      )}\n    </Wrapper>\n  );\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { RiBarChartFill } from 'react-icons/ri';\nimport { HiArrowNarrowLeft } from 'react-icons/hi';\nimport COLORS from 'variables/colors/colors';\n\nexport const LinkReport = styled(Link)`\n  display: flex;\n  align-items: center;\n  padding-top: 10px;\n  padding-left: 10px;\n\n  text-decoration: none;\n  font-family: 'Roboto';\n\n  font-weight: 400;\n  font-size: 12px;\n  line-height: calc(14 / 12);\n\n  letter-spacing: 0.04;\n\n  color: rgba(82, 85, 95, 0.7);\n\n  @media screen and (min-width: 768px) {\n    position: absolute;\n    top: 103px;\n    right: 34px;\n    z-index: 20;\n  }\n`;\n\nexport const IconLink = styled(RiBarChartFill)`\n  margin-left: 20px;\n`;\n\nexport const LinkToMain = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const IconLinkMain = styled(HiArrowNarrowLeft)`\n  margin-left: 22px;\n  margin-bottom: 22px;\n  margin-top: 22px;\n\n  color: ${COLORS.activeColor};\n`;\n","import styled from 'styled-components';\nimport COLORS from 'variables/colors/colors';\n\nexport const TransactionsWrapper = styled.section`\n  padding: 0 20px;\n  @media screen and (min-width: 768px) {\n    margin-top: 60px;\n    width: 640px;\n    padding: 24px 40px 42px 40px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    margin-left: auto;\n    margin-right: auto;\n    position: relative;\n    background-color: ${COLORS.whiteColor};\n    box-shadow: 0px 10px 60px rgba(170, 178, W197, 0.2);\n    border-top-right-radius: 30px;\n    border-bottom-right-radius: 30px;\n    border-bottom-left-radius: 30px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    width: 1098px;\n    padding: 32px 32px;\n  }\n`;\n\nexport const Expenses = styled.button`\n  @media screen and (max-width: 767px) {\n    display: none;\n  }\n  @media screen and (min-width: 768px) {\n    width: 138px;\n    higth: 40px;\n    display: inline-block;\n    position: absolute;\n    top: -38px;\n    left: 0px;\n    padding: 10px 20px;\n    background-color: #fefefe;\n    color: ${props =>\n      props.isActive ? COLORS.activeColor : COLORS.blackColor};\n    font-weight: bold;\n    text-align: center;\n    border-top-left-radius: 16px;\n    border-top-right-radius: 16px;\n    border: transparent;\n    text-decoration: none;\n    transition: all 0.2s ease-in-out;\n    cursor: pointer;\n    outline: none;\n  }\n`;\n\nexport const Incomes = styled.button`\n  @media screen and (max-width: 767px) {\n    display: none;\n  }\n  @media screen and (min-width: 768px) {\n    width: 138px;\n    higth: 40px;\n    display: inline-block;\n    position: absolute;\n    top: -38px;\n    left: 138px;\n    padding: 10px 20px;\n    background-color: #fefefe;\n    color: ${props =>\n      props.isActive ? COLORS.activeColor : COLORS.blackColor};\n    font-weight: bold;\n    text-align: center;\n    border-top-left-radius: 16px;\n    border-top-right-radius: 16px;\n    text-decoration: none;\n    transition: all 0.2s ease-in-out;\n    cursor: pointer;\n    outline: none;\n    border: transparent;\n  }\n`;\n","import styled from 'styled-components';\nimport COLORS from 'variables/colors/colors';\n\nexport const TableBodyList = styled.tr`\n  height: 40px;\n  border: 2px solid ${COLORS.bgTableTitle};\n`;\n\nexport const TableBodyItem = styled.td`\n  height: 100%;\n  width: calc(746px / 5);\n\n  text-align: center;\n\n  font-family: 'Roboto';\n  font-weight: 400;\n  font-size: 12px;\n  line-height: calc(14 / 12);\n  letter-spacing: 0.04em;\n\n  color: ${COLORS.textColor};\n\n  :nth-child(4) {\n    font-weight: 700;\n    color: ${props =>\n      props.isExpenses ? COLORS.redColorExpenses : COLORS.greenColor};\n  }\n  :nth-child(5) {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nexport const DeleteBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 32px;\n  height: 32px;\n\n  border: none;\n  border-radius: 50%;\n\n  background-color: ${COLORS.bgTableTitle};\n  cursor: pointer;\n\n  :hover,\n  :focus {\n    background-color: ${COLORS.activeColor};\n  }\n`;\n","import { BsTrash } from 'react-icons/bs';\nimport { useDispatch } from 'react-redux';\nimport { removeTransaction } from 'redux/transactions/transactionsOperations';\nimport { DeleteBtn, TableBodyItem, TableBodyList } from './TableBody.styled';\nimport Moment from 'react-moment';\n\nexport default function TableBody({ transaction }) {\n  const dispatch = useDispatch();\n\n  return (\n    <TableBodyList>\n      <TableBodyItem>\n        <Moment format=\"DD.MM.YYYY\">{transaction.date}</Moment>\n      </TableBodyItem>\n      <TableBodyItem>{transaction.description}</TableBodyItem>\n      <TableBodyItem>{transaction.category}</TableBodyItem>\n      <TableBodyItem isExpenses={transaction.type.toLowerCase() === 'expenses'}>\n        {transaction.sum} UAH.\n      </TableBodyItem>\n      <TableBodyItem>\n        <DeleteBtn onClick={() => dispatch(removeTransaction(transaction._id))}>\n          <BsTrash />\n        </DeleteBtn>\n      </TableBodyItem>\n    </TableBodyList>\n  );\n}\n","import styled from 'styled-components';\nimport COLORS from 'variables/colors/colors';\n\nexport const TransactionBox = styled.div`\n  overflow: hidden;\n  border-top-left-radius: 16px;\n  border-top-right-radius: 16px;\n\n  @media screen and (min-width: 1200px) {\n    width: 624px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    width: 746px;\n    height: 400px;\n  }\n`;\n\nexport const TableBox = styled.table`\n  width: 100%;\n\n  border: none;\n\n  border-spacing: 0;\n  border-collapse: collapse;\n\n  table-layout: fixed;\n\n  background-color: ${COLORS.whiteColor};\n\n  @media screen and (min-width: 1200px) {\n    width: 746px;\n    height: 400px;\n  }\n`;\n\nexport const TableTitle = styled.tr``;\n\nexport const TableTitleItem = styled.th`\n  width: calc(100% / 5);\n  height: 40px;\n\n  border-spacing: 0;\n\n  background-color: ${COLORS.bgTableTitle};\n  text-transform: uppercase;\n`;\n\nexport const TableBodys = styled.tbody`\n  display: block;\n  overflow-y: auto;\n  width: 746px;\n  max-height: 400px;\n\n  ::-webkit-scrollbar {\n    width: 6px;\n    background-color: ${COLORS.bgTableTitle};\n  }\n\n  ::-webkit-scrollbar-thumb {\n    border-radius: 2px;\n\n    background-color: ${COLORS.activeColor};\n  }\n`;\n","import TableBody from 'components/TableBody';\nimport { useSelector } from 'react-redux';\nimport { selectTransactionsByType } from 'redux/transactions/transactionsSelectors';\nimport {\n  TableBox,\n  TableTitle,\n  TableTitleItem,\n  TransactionBox,\n  TableBodys,\n} from './Table.styled';\n\nexport default function Table() {\n  const filteredTransactions = useSelector(selectTransactionsByType);\n\n  return (\n    <TransactionBox>\n      <TableBox>\n        <thead>\n          <TableTitle>\n            <TableTitleItem>DATE</TableTitleItem>\n            <TableTitleItem>DESCRIPTION</TableTitleItem>\n            <TableTitleItem>category</TableTitleItem>\n            <TableTitleItem>sum</TableTitleItem>\n            <TableTitleItem></TableTitleItem>\n          </TableTitle>\n        </thead>\n        <TableBodys>\n          {filteredTransactions &&\n            filteredTransactions.map(transaction => (\n              <TableBody key={transaction._id} transaction={transaction} />\n            ))}\n        </TableBodys>\n      </TableBox>\n    </TransactionBox>\n  );\n}\n","import CreateExpenses from 'components/CreateTransaction/CreateTransaction';\nimport {\n  TransactionsWrapper,\n  Incomes,\n  Expenses,\n} from './TransactionsContainer.styled';\nimport { useMedia } from 'hooks/useMedia';\nimport Table from 'components/Table';\n// import TransactionListMobile from 'components/TransactionListMobile';\n\n// import Summary from 'components/Summary';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toggleTransaction } from 'redux/transactions/transactionsSlice';\nimport { selectTypeTransactionMain } from 'redux/transactions/transactionsSelectors';\n\nexport default function TransactionsContainer() {\n  const dispatch = useDispatch();\n  const transactions = useSelector(selectTypeTransactionMain);\n  const { isTabletAndDesktop } = useMedia();\n  return (\n    <TransactionsWrapper>\n      <Incomes\n        isActive={transactions === 'incomes'}\n        onClick={() => dispatch(toggleTransaction('incomes'))}\n      >\n        Incomes\n      </Incomes>\n      <Expenses\n        isActive={transactions === 'expenses'}\n        onClick={() => dispatch(toggleTransaction('expenses'))}\n      >\n        Expenses\n      </Expenses>\n      <CreateExpenses transactions={transactions} />\n\n      {isTabletAndDesktop && <Table />}\n      {/* {isMobile && <TransactionListMobile />} */}\n      {/* {!isMobile && <Summary/>} */}\n    </TransactionsWrapper>\n  );\n}\n","import BackgroundPrivateContainer from 'components/BackgroundPrivateContainer';\nimport Balance from 'components/Balance';\n// import Container from 'components/Container';\nimport { IconLink, LinkReport, LinkToMain, IconLinkMain } from './Main.styled';\nimport TransactionsContainer from 'components/TransactionsContainer/TransactionsContainer';\nimport { useMedia } from 'hooks/useMedia';\n\nexport default function Main() {\n  const { isMobile } = useMedia();\n\n  return (\n    <BackgroundPrivateContainer>\n      {/* <Container> */}\n      {isMobile ? (\n        <>\n          <LinkToMain to=\"/main\">\n            <IconLinkMain size={18} />\n          </LinkToMain>\n        </>\n      ) : null}\n\n      {!isMobile && (\n        <>\n          <LinkReport to=\"/reports\">\n            Reports\n            <IconLink size={14} color=\" #52555F\" />\n          </LinkReport>\n          <Balance />\n        </>\n      )}\n      {/* <LinkReport to=\"/reports\">\n        reports\n        <IconLink size={14} color=\" #52555F\" />\n      </LinkReport>\n      <Balance /> */}\n      <TransactionsContainer />\n\n      {/* </Container> */}\n    </BackgroundPrivateContainer>\n  );\n}\n"],"names":["Container","styled","COLORS","props","groupImg","img","ContainerTop","BackgroundPrivateContainer","children","Wrapper","Title","Section","InputContainer","Input","Label","Button","Wrapper2","Text","Styled","Link","Balance","dispatch","useDispatch","balance","useAuth","useState","value","setValue","tooltipOpen","setTooltipOpen","useEffect","autoComplete","onSubmit","e","preventDefault","updateBalance","target","elements","type","placeholder","name","readOnly","pattern","disabled","onChange","active","setActive","LinkReport","IconLink","RiBarChartFill","LinkToMain","IconLinkMain","HiArrowNarrowLeft","TransactionsWrapper","Expenses","isActive","Incomes","TableBodyList","TableBodyItem","isExpenses","DeleteBtn","TableBody","transaction","format","date","description","category","toLowerCase","sum","onClick","removeTransaction","_id","TransactionBox","TableBox","TableTitle","TableTitleItem","TableBodys","Table","filteredTransactions","useSelector","selectTransactionsByType","map","TransactionsContainer","transactions","selectTypeTransactionMain","isTabletAndDesktop","useMedia","toggleTransaction","Main","isMobile","to","size","color"],"sourceRoot":""}