{"version":3,"file":"static/js/859.c4a187f5.chunk.js","mappings":"yRAIaA,EAAUC,EAAAA,GAAAA,IAAH,kdAsBPC,EAAQD,EAAAA,GAAAA,EAAH,kWAMPE,EAAAA,EAAAA,kBAYEC,EAAUH,EAAAA,GAAAA,KAAH,sFAMPI,EAAiBJ,EAAAA,GAAAA,IAAH,uHAOdK,EAAQL,EAAAA,GAAAA,MAAH,gpBAKIE,EAAAA,EAAAA,WAOXA,EAAAA,EAAAA,WAamBA,EAAAA,EAAAA,WAIjBA,EAAAA,EAAAA,YAGAI,EAAQN,EAAAA,GAAAA,MAAH,gPAcLO,EAASP,EAAAA,GAAAA,OAAH,ktBAoCNQ,EAAWR,EAAAA,GAAAA,IAAH,qpBA6BRS,EAAOT,EAAAA,GAAAA,EAAH,6GAGNE,EAAAA,EAAAA,YAGEQ,EAASV,EAAAA,GAAAA,EAAH,8FAGRE,EAAAA,EAAAA,Y,IAIeF,EAAAA,EAAAA,IAAOW,EAAAA,GAAPX,CAAH,2X,qBCpKR,SAASY,IAAW,IAAD,EAC1BC,GAAWC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,KAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAQ,UAAC,CAAEF,QAAAA,UAAH,QAAgB,GAAlD,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAsCF,EAAAA,EAAAA,WAAS,GAA/C,eAAOG,EAAP,KAAoBC,EAApB,MAEAC,EAAAA,EAAAA,YAAU,WACRH,EAASJ,EACV,GAAE,CAACA,IAcJ,OACE,UAAChB,EAAD,YACE,SAACE,EAAD,wBACA,UAACE,EAAD,CAASoB,aAAa,MAAMC,SAff,SAAAC,GACfA,EAAEC,iBACFb,GAASc,EAAAA,EAAAA,IAAc,CAAEZ,QAASU,EAAEG,OAAOC,SAASd,QAAQG,QAC7D,EAYG,WACE,UAACd,EAAD,YACE,SAACC,EAAD,CACEyB,KAAK,SACLC,YAAW,WACXC,KAAK,UACLd,MAAOA,EACPe,SAAUlB,EACVmB,QAAQ,aACRC,SAAUpB,EAAU,EACpBqB,SApBO,SAAAX,GACXA,EAAEG,OAAOV,MAAQ,GAGrBC,EAASM,EAAEG,OAAOV,MACnB,KAiBO,SAACZ,EAAD,sBAEF,SAACC,EAAD,CAAQuB,KAAK,SAASK,SAAUpB,EAAU,EAA1C,yBAIAA,EAAU,IACV,UAACP,EAAD,CAAU6B,OAAQjB,EAAakB,UAAWjB,EAA1C,WACE,SAACZ,EAAD,iFAGA,UAACC,EAAD,uDAAkD,cAK3D,C,sKCnEY6B,EAAgBvC,EAAAA,GAAAA,GAAH,gDAIbwC,EAAkBxC,EAAAA,GAAAA,GAAH,wJAKCE,EAAAA,EAAAA,cAGhBuC,EAAyBzC,EAAAA,GAAAA,EAAH,yIAKxBE,EAAAA,EAAAA,WAGEwC,EAAqB1C,EAAAA,GAAAA,IAAH,4EAMlB2C,EAAkB3C,EAAAA,GAAAA,EAAH,sIAKjBE,EAAAA,EAAAA,WAGE0C,EAAiB5C,EAAAA,GAAAA,IAAH,wDAKd6C,EAAiB7C,EAAAA,GAAAA,EAAH,oKAMhB,SAAA8C,GAAK,OAAKA,EAAMC,WAAa7C,EAAAA,EAAAA,SAAkBA,EAAAA,EAAAA,UAA1C,IAGH8C,EAAuBhD,EAAAA,GAAAA,OAAH,qK,gECnClB,SAASiD,IACtB,IAAMC,GAAuBC,EAAAA,EAAAA,IAAYC,EAAAA,IACnCvC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACyB,EAAD,UACGW,EAAqBG,KACpB,YAAsD,IAAnDC,EAAkD,EAAlDA,IAAKC,EAA6C,EAA7CA,KAAMC,EAAuC,EAAvCA,YAAaC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,IAAK5B,EAAW,EAAXA,KACxC,OACE,UAACU,EAAD,YACE,4BACE,SAACC,EAAD,UAAyBe,KACzB,UAACd,EAAD,YACE,SAACC,EAAD,WACE,SAAC,IAAD,CAAQgB,OAAO,aAAf,SAA6BJ,OAE/B,SAACZ,EAAD,UAAkBc,WAGtB,UAACb,EAAD,YACE,SAACC,EAAD,CAAgBE,WAAqB,aAATjB,EAA5B,SACG4B,KAEH,SAACV,EAAD,CACEY,QAAS,kBAAM/C,GAASgD,EAAAA,EAAAA,IAAkBP,GAAjC,EADX,UAGE,SAAC,MAAD,CAASQ,MAAO,GAAIC,OAAQ,YAjBZT,EAsBzB,KAIR,C,mBChDYU,EAAYhE,EAAAA,GAAAA,IAAH,sGAOTiE,EAAMjE,EAAAA,GAAAA,OAAH,2XAOM,SAAA8C,GAAK,OACvBA,EAAMoB,SAAWhE,EAAAA,EAAAA,YAAqBA,EAAAA,EAAAA,YADf,IAEhB,SAAA4C,GAAK,OAAKA,EAAMoB,SAAWhE,EAAAA,EAAAA,WAAoBA,EAAAA,EAAAA,UAA1C,GAUHA,EAAAA,EAAAA,WACWA,EAAAA,EAAAA,aCzBT,SAASiE,IACtB,IAAMC,GAAejB,EAAAA,EAAAA,IAAYkB,EAAAA,IAC3BxD,GAAWC,EAAAA,EAAAA,MAEjB,OACE,UAACkD,EAAD,YACE,SAACC,EAAD,CACEC,SAA2B,aAAjBE,EACVR,QAAS,kBAAM/C,GAASyD,EAAAA,EAAAA,IAAkB,YAAjC,EACTtC,KAAK,WACLF,KAAK,SAJP,uBAQA,SAACmC,EAAD,CACEC,SAA2B,YAAjBE,EACVR,QAAS,kBAAM/C,GAASyD,EAAAA,EAAAA,IAAkB,WAAjC,EACTtC,KAAK,UACLF,KAAK,SAJP,uBAUL,C,mDCtBYyC,EAAkBvE,EAAAA,GAAAA,IAAH,sPAQNE,EAAAA,EAAAA,cAITsE,EAAaxE,EAAAA,GAAAA,IAAH,oHAOVyE,GAAoBzE,EAAAA,EAAAA,IAAOW,EAAAA,GAAPX,CAAH,4RAWnBE,EAAAA,EAAAA,YAGEwE,GAAe1E,EAAAA,EAAAA,IAAOW,EAAAA,GAAPX,CAAH,iUAWdE,EAAAA,EAAAA,iBAIEA,EAAAA,EAAAA,aAIAyE,GAAW3E,EAAAA,EAAAA,IAAO4E,EAAAA,IAAP5E,CAAH,4DAEVE,EAAAA,EAAAA,aAGE2E,IAAiB7E,EAAAA,EAAAA,IAAO8E,EAAAA,IAAP9E,CAAH,8C,IAIFA,EAAAA,GAAAA,MAAH,+N,UCrDP,SAAS+E,KACtB,OAAwB9D,EAAAA,EAAAA,UAAS,IAAjC,eAAOsC,EAAP,KAAayB,EAAb,KAMA,OACE,iCACE,SAACT,EAAD,WACE,UAACC,EAAD,YACE,UAACC,EAAD,CAAmBQ,GAAG,eAAeC,MAAO,CAAE3B,KAAMA,GAApD,WACE,SAACoB,EAAD,CAAUQ,KAAM,KADlB,qBAIA,UAACT,EAAD,CAAcO,GAAG,WAAjB,qBAEE,SAACJ,GAAD,CAAgBM,KAAM,GAAIC,MAAM,iBAElC,SAACxE,EAAA,EAAD,KACA,SAACyE,GAAA,EAAD,CAAYnE,MAAOqC,EAAM+B,iBAjBR,SAAA7D,GACvBuD,EAAQvD,EAAEG,OAAOV,MAClB,KAgBO,SAAC+B,EAAD,UAGJ,SAAC,EAAD,MAGL,C","sources":["components/Balance/Balance.styled.jsx","components/Balance/Balance.jsx","components/TransactionListMobile/TransactionListMobile.styled.jsx","components/TransactionListMobile/TransactionListMobile.jsx","components/MobileTypeBtn/MobileTypeBtn.styled.jsx","components/MobileTypeBtn/MobileTypeBtn.jsx","pages/Mobile/Mobile.styled.jsx","pages/Mobile/Mobile.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport COLORS from 'variables/colors/colors';\n\nexport const Wrapper = styled.div`\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin: 0 auto 32px auto;\n\n  @media (min-width: 768px) {\n    display: flex;\n    align-items: center;\n    justify-content: space-evenly;\n    width: fit-content;\n    margin: 0px auto;\n    padding-top: 52px; \n    flex-direction: row;\n    align-self: center;\n   \n  }\n  @media (min-width: 1200px) {\n    margin-left: auto;\n    margin-right:auto;\n  }\n`;\nexport const Title = styled.p`\n  font-size: 12px;\n  line-height: 14px;\n  font-weight: 500;\n  text-align: center;\n  letter-spacing: 0.02em;\n  color: ${COLORS.textColorOpacity};\n\n  @media screen and (max-width: 767px) {\n      padding-top: 15px;\n      padding-bottom: 8px;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-right: 21px;\n    padding-bottom: 0px;\n  }\n`;\nexport const Section = styled.form`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;\n\nexport const InputContainer = styled.div`\n  display: flex;\n  align-items: baseline;\n  justify-content: center;\n  position: relative;\n`;\n\nexport const Input = styled.input`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  align-content: center;\n  border: 2px solid ${COLORS.whiteColor};\n  border-radius: 16px;\n  background-color: transparent;\n  font: inherit;\n  font-weight: 700;\n  font-size: 12px;\n  text-align: center;\n  color: ${COLORS.blackColor};\n  width: 140px;\n  height: 44px;\n  border-radius: 22px 0px 0px 22px;\n\n  @media screen and (min-width: 768px) {\n    margin-right: 15px;\n    border-radius: 16px;\n  }\n  @media (min-width: 1200px) {\n    margin-right: 0;\n    border-radius: 16px;\n    margin-right: 15px;\n    border-right: 1px solid ${COLORS.whiteColor};\n  }\n\n   &::placeholder {\n    color: ${COLORS.blackColor};\n  }\n`;\nexport const Label = styled.label`\n  position: absolute;\n  top: 19px;\n  right: 14px;\n  font-weight: 700;\n  color: black;\n  /* font: inherit; */\n  font-size: 12px;\n  @media screen and (min-width: 768px) {\n    top: 19px;\n    right: 27px;\n  }\n`;\n\nexport const Button = styled.button`\n  background-color: transparent;\n  border: 2px solid #ffffff;\n  color: rgba(82, 85, 95, 0.7);\n  font-weight: 400;\n  border-radius: 0px 22px 22px 0px;\n  display: inline-block;\n  height: 50px;\n  width: 156px;\n\n  font-size: 12px;\n  line-height: 1.17;\n  letter-spacing: 0.02em;\n\n  text-transform: uppercase;\n  text-align: center;\n\n  @media screen and (min-width: 768px) {\n    border-radius: 16px;\n  }\n\n  :hover:enabled {\n    background-color: #ff751d;\n  }\n\n  ::placeholder {\n    font-weight: 700;\n    font-size: 12px;\n    line-height: 14px;\n    display: flex;\n    align-items: center;\n    letter-spacing: 0.02em;\n    text-transform: uppercase;\n    color: #000000;\n  }\n`;\nexport const Wrapper2 = styled.div`\n  position: absolute;\n  top:54px;\n  transform: translateY(calc(100% + 18px)) translateX(16%);\n  width: 200px;\n  background: linear-gradient(117.84deg, #1d346a 2.84%, #031634 67.28%);\n  box-shadow: 0px 10px 60px rgba(170, 178, 197, 0.2);\n  padding: 30px;\n  border-radius: 30px;\n  z-index: 10;\n\n  ::before {\n    content: '';\n    position: absolute;\n    left: 16%;\n    top: -11px;\n    width: 0;\n    height: 0;\n    border-left: 11px solid transparent;\n    border-right: 11px solid transparent;\n    border-bottom: 11px solid #172d5d;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 292px;\n    top: 2px;\n  }\n`;\n\nexport const Text = styled.p`\n  font-size: 14px;\n  line-height: 20px;\n  color: ${COLORS.whiteColor};\n  margin: 0px 0px 20px 0px;\n`;\nexport const Styled = styled.p`\n  font-size: 12px;\n  line-height: 16px;\n  color: ${COLORS.whiteColor};\n  margin: 0;\n`;\n\nexport const LinkReport = styled(Link)`\n  display: flex;\n  align-items: center;\n\n  text-decoration: none;\n  font-family: 'Roboto';\n\n  font-weight: 400;\n  font-size: 12px;\n  line-height: calc(14 / 12);\n\n  letter-spacing: 0.04;\n\n  color: rgba(82, 85, 95, 0.7);\n\n  @media screen and (min-width: 768px) {\n    position: absolute;\n    top: 57px;\n    right: 0;\n    z-index: 20;\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { updateBalance } from 'redux/auth/authOperations';\nimport {\n  Wrapper,\n  Button,\n  Title,\n  Section,\n  Input,\n  Wrapper2,\n  Text,\n  Styled,\n  InputContainer,\n  Label,\n} from './Balance.styled';\nimport { useAuth } from 'hooks/useAuth';\n\nexport default function Balance() {\n  const dispatch = useDispatch();\n  const { balance } = useAuth();\n  const [value, setValue] = useState({ balance } ?? 0);\n  const [tooltipOpen, setTooltipOpen] = useState(true);\n\n  useEffect(() => {\n    setValue(balance);\n  }, [balance]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    dispatch(updateBalance({ balance: e.target.elements.balance.value }));\n  };\n\n  const onChange = e => {\n    if (e.target.value < 0) {\n      return;\n    }\n    setValue(e.target.value);\n  };\n\n  return (\n    <Wrapper>\n      <Title>Balance:</Title>\n      <Section autoComplete=\"off\" onSubmit={onSubmit}>\n        <InputContainer>\n          <Input\n            type=\"number\"\n            placeholder={`0.00 UAH`}\n            name=\"balance\"\n            value={value}\n            readOnly={balance}\n            pattern=\"[0-9, UAH]\"\n            disabled={balance > 0 ? true : false}\n            onChange={onChange}\n          />\n          <Label>UAH</Label>\n        </InputContainer>\n        <Button type=\"submit\" disabled={balance > 0 ? true : false}>\n          Confirm\n        </Button>\n      </Section>\n      {!balance > 0 && (\n        <Wrapper2 active={tooltipOpen} setActive={setTooltipOpen}>\n          <Text>\n            Hello! To get started, enter the current balance of your account!\n          </Text>\n          <Styled>You can't spend money until you have it :{' ) '}</Styled>\n        </Wrapper2>\n      )}\n    </Wrapper>\n  );\n}\n","import styled from 'styled-components';\nimport COLORS from '../../variables/colors/colors';\n\nexport const TransactionUl = styled.ul`\n  margin-bottom: 55px;\n`;\n\nexport const TransactionItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 8px 0;\n  border-bottom: 1px solid ${COLORS.bgTableTitle};\n`;\n\nexport const TransactionDescription = styled.p`\n  font-weight: 700;\n  font-size: 12px;\n  line-height: calc(14 / 12);\n  letter-spacing: 0.04em;\n  color: ${COLORS.textColor};\n`;\n\nexport const TransactionInfoBox = styled.div`\n  display: flex;\n  gap: 20px;\n  margin-top: 4px;\n`;\n\nexport const TransactionInfo = styled.p`\n  font-weight: 400;\n  font-size: 8px;\n  line-height: calc(9 / 8);\n  letter-spacing: 0.04em;\n  color: ${COLORS.textColor};\n`;\n\nexport const TransactionBox = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const TransactionSum = styled.p`\n  font-family: 'Roboto';\n  font-weight: 700;\n  font-size: 12px;\n  line-height: calc(14 / 12);\n  letter-spacing: 0.04em;\n  color: ${props => (props.isExpenses ? COLORS.redColor : COLORS.greenColor)};\n`;\n\nexport const TransactionDeleteBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: none;\n  background-color: transparent;\n  cursor: pointer;\n`;\n","import { BsTrash } from 'react-icons/bs';\nimport {\n  TransactionUl,\n  TransactionBox,\n  TransactionDeleteBtn,\n  TransactionDescription,\n  TransactionInfo,\n  TransactionInfoBox,\n  TransactionItem,\n  TransactionSum,\n} from './TransactionListMobile.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectTransactionsByTypeAndDate } from 'redux/transactions/transactionsSelectors';\nimport Moment from 'react-moment';\nimport { removeTransaction } from 'redux/transactions/transactionsOperations';\n\nexport default function TransactionListMobile() {\n  const filteredTransactions = useSelector(selectTransactionsByTypeAndDate);\n  const dispatch = useDispatch();\n\n  return (\n    <TransactionUl>\n      {filteredTransactions.map(\n        ({ _id, date, description, category, sum, type }) => {\n          return (\n            <TransactionItem key={_id}>\n              <div>\n                <TransactionDescription>{description}</TransactionDescription>\n                <TransactionInfoBox>\n                  <TransactionInfo>\n                    <Moment format=\"DD.MM.YYYY\">{date}</Moment>\n                  </TransactionInfo>\n                  <TransactionInfo>{category}</TransactionInfo>\n                </TransactionInfoBox>\n              </div>\n              <TransactionBox>\n                <TransactionSum isExpenses={type === 'expenses'}>\n                  {sum}\n                </TransactionSum>\n                <TransactionDeleteBtn\n                  onClick={() => dispatch(removeTransaction(_id))}\n                >\n                  <BsTrash width={15} height={18} />\n                </TransactionDeleteBtn>\n              </TransactionBox>\n            </TransactionItem>\n          );\n        }\n      )}\n    </TransactionUl>\n  );\n}\n","import COLORS from 'variables/colors/colors.js';\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  position: fixed;\n  flex-direction: row;\n  bottom: 0px;\n`;\n\nexport const Btn = styled.button`\n  width: calc(calc(100vw / 2) - 1px);\n  height: 53px;\n  border: none;\n  font-weight: 700;\n  font-size: 12px;\n  text-transform: uppercase;\n  background-color: ${props =>\n    props.isActive ? COLORS.activeColor : COLORS.bgTableTitle};\n  color: ${props => (props.isActive ? COLORS.whiteColor : COLORS.blackColor)};\n  transition: 0.2s ease-out;\n\n  &:first-child {\n    margin-right: 4px;\n  }\n\n  &:hover,\n  &:focus,\n  &:active {\n    color: ${COLORS.whiteColor};\n    background-color: ${COLORS.activeColor};\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { toggleTransaction } from 'redux/transactions/transactionsSlice.js';\nimport { selectTypeTransactionMain } from 'redux/transactions/transactionsSelectors';\nimport { Btn, Container } from './MobileTypeBtn.styled.jsx';\n\nexport default function MobileTypesBtn() {\n  const transactions = useSelector(selectTypeTransactionMain);\n  const dispatch = useDispatch();\n\n  return (\n    <Container>\n      <Btn\n        isActive={transactions === 'expenses'}\n        onClick={() => dispatch(toggleTransaction('expenses'))}\n        name=\"expenses\"\n        type=\"submit\"\n      >\n        Expenses\n      </Btn>\n      <Btn\n        isActive={transactions === 'incomes'}\n        onClick={() => dispatch(toggleTransaction('incomes'))}\n        name=\"incomes\"\n        type=\"submit\"\n      >\n        Incomes\n      </Btn>\n    </Container>\n  );\n}\n","import COLORS from 'variables/colors/colors';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nimport { HiArrowNarrowLeft } from 'react-icons/hi';\nimport { RiBarChartFill } from 'react-icons/ri';\n\nexport const MobileContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  padding-top: 19px;\n  height: 296px;\n  background-color: ${COLORS.bgTableTitle};\n  border-bottom-left-radius: 100px 100px;\n`;\n\nexport const MobileInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding-left: 20px;\n  padding-right: 20px;\n`;\n\nexport const LinkToTransaction = styled(Link)`\n  display: flex;\n  align-items: center;\n  padding-bottom: 24px;\n  text-decoration: none;\n  font-family: 'Roboto';\n  text-transform: uppercase;\n  font-weight: 700;\n  font-size: 10px;\n  line-height: calc(14 / 12);\n  letter-spacing: 0.02;\n  color: ${COLORS.blackColor};\n`;\n\nexport const LinkToReport = styled(Link)`\n  display: flex;\n  align-items: center;\n  padding-bottom: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  text-decoration: none;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: calc(14 / 12);\n  letter-spacing: 0.02;\n  color: ${COLORS.textColorOpacity};\n\n  &:hover,\n  :focus {\n    color: ${COLORS.activeColor};\n  }\n`;\n\nexport const IconLink = styled(HiArrowNarrowLeft)`\n  margin-right: 6px;\n  color: ${COLORS.activeColor};\n`;\n\nexport const IconLinkReport = styled(RiBarChartFill)`\n  margin-left: 20px;\n`;\n\nexport const InputDate = styled.input`\n  margin-right: auto;\n  margin-left: auto;\n  margin-bottom: 60px;\n  height: 44px;\n  border: none;\n  outline: none;\n\n  background-color: transparent;\n  color: #52555f;\n  text-align: center;\n`;\n","import { useState } from 'react';\nimport Balance from 'components/Balance';\nimport TransactionListMobile from 'components/TransactionListMobile';\nimport MobileTypeBtn from 'components/MobileTypeBtn';\n\nimport {\n  MobileContainer,\n  MobileInfo,\n  LinkToTransaction,\n  IconLink,\n  IconLinkReport,\n  LinkToReport,\n} from './Mobile.styled.jsx';\nimport SelectDate from 'components/SelectDate/SelectDate.jsx';\n\nexport default function Mobile() {\n  const [date, setDate] = useState('');\n\n  const handleDateChange = e => {\n    setDate(e.target.value);\n  };\n\n  return (\n    <>\n      <MobileContainer>\n        <MobileInfo>\n          <LinkToTransaction to=\"/transaction\" state={{ date: date }}>\n            <IconLink size={18} />\n            TO TRANSACTION\n          </LinkToTransaction>\n          <LinkToReport to=\"/reports\">\n            Reports\n            <IconLinkReport size={14} color=\" #52555F\" />\n          </LinkToReport>\n          <Balance />\n          <SelectDate value={date} handleDateChange={handleDateChange} />\n          <TransactionListMobile />\n        </MobileInfo>\n      </MobileContainer>\n      <MobileTypeBtn />\n    </>\n  );\n}\n"],"names":["Wrapper","styled","Title","COLORS","Section","InputContainer","Input","Label","Button","Wrapper2","Text","Styled","Link","Balance","dispatch","useDispatch","balance","useAuth","useState","value","setValue","tooltipOpen","setTooltipOpen","useEffect","autoComplete","onSubmit","e","preventDefault","updateBalance","target","elements","type","placeholder","name","readOnly","pattern","disabled","onChange","active","setActive","TransactionUl","TransactionItem","TransactionDescription","TransactionInfoBox","TransactionInfo","TransactionBox","TransactionSum","props","isExpenses","TransactionDeleteBtn","TransactionListMobile","filteredTransactions","useSelector","selectTransactionsByTypeAndDate","map","_id","date","description","category","sum","format","onClick","removeTransaction","width","height","Container","Btn","isActive","MobileTypesBtn","transactions","selectTypeTransactionMain","toggleTransaction","MobileContainer","MobileInfo","LinkToTransaction","LinkToReport","IconLink","HiArrowNarrowLeft","IconLinkReport","RiBarChartFill","Mobile","setDate","to","state","size","color","SelectDate","handleDateChange"],"sourceRoot":""}