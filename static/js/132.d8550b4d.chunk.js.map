{"version":3,"file":"static/js/132.d8550b4d.chunk.js","mappings":"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","sources":["components/LoginForm/LoginForm.styled.jsx","schema/shemaRegister.js","components/LoginForm/LoginForm.jsx","pages/Login/Login.styled.jsx","components/BackgroundLogInContainer/BackgroundLogInContainer.styled.jsx","components/BackgroundLogInContainer/BackgroundLogInContainer.jsx","components/LoginTitle/LoginTitle.styled.jsx","components/LoginTitle/LoginTitle.jsx","pages/Login/Login.jsx"],"sourcesContent":["import styled, { keyframes } from 'styled-components';\nimport COLORS from 'variables/colors/colors';\nimport { Field } from 'formik';\nimport { fadeInLeft, fadeInRight } from 'react-animations';\n\nconst animation2 = keyframes`${fadeInLeft}`;\nconst animation3 = keyframes`${fadeInRight}`;\n\nexport const FormBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 240px;\n  padding: 40px 20px;\n  background-color: ${COLORS.whiteColor};\n  box-shadow: 5px 10px 20px rgba(170, 178, 197, 0.4);\n  border-radius: 30px;\n\n  @media screen and (min-width: 768px) {\n    width: 260px;\n    padding: 56px 83px;\n  }\n`;\n\nexport const Google = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 9px;\n  animation: 1s ${animation2};\n`;\n\nexport const TitleGoogle = styled.p`\n  font-weight: 400;\n  margin-bottom: 16px;\n  font-size: 12px;\n  line-height: 1.17;\n  text-align: center;\n  letter-spacing: 0.04em;\n  color: ${COLORS.textColor};\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 25px;\n  }\n`;\n\nexport const ButtonGoogle = styled.a`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 122px;\n  height: 40px;\n  margin-bottom: 32px;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 1.14x;\n  letter-spacing: 0.02em;\n  color: ${COLORS.blackColor};\n  background-color: ${COLORS.backgroungColor};\n  border-radius: 26px;\n  border: none;\n  box-shadow: 1px 3px 7px rgba(170, 178, 197, 0.4);\n  transition: box-shadow 400ms ease-in-out;\n  text-decoration: none;\n\n  :hover,\n  :focus {\n    box-shadow: 1px 3px 7px rgba(119, 125, 138, 0.466);\n  }\n`;\n\nexport const Title = styled.p`\n  font-weight: 400;\n  margin-bottom: 16px;\n  font-size: 12px;\n  line-height: 1.17;\n  letter-spacing: 0.04em;\n  color: ${COLORS.textColor};\n  animation: 1s ${animation3};\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 25px;\n  }\n`;\n\nexport const TextGoogle = styled.p`\n  margin-left: 10px;\n  text-decoration: none;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  animation: 1s ${animation3};\n`;\n\nexport const LabelText = styled.label`\n  margin-bottom: 16px;\n  font-size: 10px;\n  line-height: 1.2;\n  letter-spacing: 0.04em;\n  color: ${COLORS.blackColor};\n\n  @media screen and (min-width: 768px) {\n    font-size: 12px;\n  }\n`;\n\nexport const Input = styled(Field)`\n  padding: 17px 19px;\n  border: none;\n  outline: none;\n  border-radius: 30px;\n  background-color: ${COLORS.backgroungColor};\n`;\n\nexport const ButtonGroup = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: row;\n  margin-top: 20px;\n`;\n\nexport const Button = styled.button`\n  width: 116px;\n  height: 44px;\n  border: none;\n  border-radius: 16px;\n  box-shadow: 1px 3px 7px rgba(170, 178, 197, 0.4);\n  background-color: ${COLORS.backgroungColor};\n  color: ${COLORS.textColor};\n  font-weight: 700;\n  font-size: 12px;\n  line-height: 1.17;\n  letter-spacing: 0.02em;\n  text-transform: uppercase;\n  cursor: pointer;\n  transition: background-color 400ms ease-in-out, color 400ms ease-in-out,\n    box-shadow 400ms ease-in-out;\n  animation: 1s ${animation2};\n\n  :hover,\n  :focus,\n  :active:first-child {\n    background-color: ${COLORS.activeColor};\n    color: ${COLORS.whiteColor};\n    box-shadow: 1px 3px 7px rgba(255, 119, 8, 0.4);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 122px;\n  }\n`;\nexport const Error = styled.div`\n  position: relative;\n  margin-top: -15px;\n  margin-bottom: 16px;\n  margin-left: 20px;\n  font-size: 10px;\n  letter-spacing: 0.04em;\n  color: ${COLORS.redColorText};\n\n  ::before {\n    position: absolute;\n    top: -81px;\n    left: -25px;\n    content: '*';\n  }\n`;\n","import * as yup from 'yup';\n\nconst schemaRegister = yup.object().shape({\n  email: yup.string().required('This is a required field'),\n  password: yup\n    .string()\n    .required('This is a required field')\n    .min(6, 'min 6 symbols'),\n});\n\nexport default schemaRegister;\n","import { Formik, ErrorMessage, Form } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport {\n  ButtonGoogle,\n  ButtonGroup,\n  Button,\n  FormBox,\n  Google,\n  Input,\n  Label,\n  LabelText,\n  TextGoogle,\n  Title,\n  TitleGoogle,\n  Error,\n} from './LoginForm.styled';\nimport { FcGoogle } from 'react-icons/fc';\nimport { logIn, register } from 'redux/auth/authOperations';\nimport schemaRegister from 'schema/shemaRegister';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { googleUser } from 'redux/auth/authOperations';\nimport { refreshUser } from 'redux/auth/authOperations';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const [button, setButton] = useState(null);\n  const initialValues = { email: '', password: '' };\n  const [searchParams] = useSearchParams();\n\n  useEffect(() => {\n    const accessToken = searchParams.get('accessToken');\n\n    if (accessToken) {\n      dispatch(googleUser(accessToken));\n      dispatch(refreshUser());\n    }\n  }, [dispatch, searchParams]);\n\n  const handleClick = e => {\n    switch (e.target.name) {\n      case 'login':\n        return setButton(true);\n      case 'register':\n        return setButton(false);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (initialValues, { resetForm }) => {\n    if (!button) {\n      dispatch(register(initialValues));\n      return;\n    }\n    dispatch(logIn(initialValues));\n    resetForm();\n  };\n\n  return (\n    <>\n      <FormBox>\n        <Google>\n          <TitleGoogle>You can log in with your Google Account:</TitleGoogle>\n          <ButtonGoogle href=\"https://kapusta-deployment.onrender.com/api/users/google\">\n            <FcGoogle size={18} />\n            <TextGoogle>Google</TextGoogle>\n          </ButtonGoogle>\n        </Google>\n        <Formik\n          onSubmit={handleSubmit}\n          validationSchema={schemaRegister}\n          initialValues={initialValues}\n        >\n          <Form>\n            <Title>\n              Or log in using an email and password, after registering:\n            </Title>\n            <Label>\n              <LabelText>Email:</LabelText>\n              <Input type=\"email\" name=\"email\" placeholder=\"your@email.com\" />\n            </Label>\n            <ErrorMessage name=\"email\" render={msg => <Error>{msg}</Error>} />\n            <Label>\n              <LabelText>Password:</LabelText>\n              <Input type=\"password\" name=\"password\" placeholder=\"Password\" />\n            </Label>\n            <ErrorMessage\n              name=\"password\"\n              render={msg => <Error>{msg}</Error>}\n            />\n            <ButtonGroup>\n              <Button type=\"login\" name=\"login\" onClick={handleClick}>\n                Log in\n              </Button>\n              <Button type=\"register\" name=\"register\" onClick={handleClick}>\n                Registration\n              </Button>\n            </ButtonGroup>\n          </Form>\n        </Formik>\n      </FormBox>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Box = styled.div`\n  display: flex;\n  justify-content: center;\n\n  @media screen and (min-width: 320px) {\n    margin-top: 50px;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-top: 80px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    margin-top: 0;\n    margin-right: 91px;\n    padding-top: 117px;\n    justify-content: flex-end;\n  }\n`;\n","import styled from 'styled-components';\nimport COLORS from 'variables/colors/colors';\n\nexport const Container = styled.div`\n  padding-bottom: 514px;\n  background-color: ${COLORS.whiteColor};\n  background-repeat: no-repeat;\n\n  @media screen and (max-width: 767px) {\n    background-image: url(${props => props.img});\n    background-position: bottom left calc((100% - 320px) / 2 + 40px);\n  }\n\n  @media screen and (min-width: 768px) {\n    padding-bottom: 442px;\n\n    background-image: url(${props => props.groupImg});\n\n    background-position: bottom 90px left calc(((100% - 678px) / 2) - 30px);\n  }\n\n  @media screen and (min-width: 1200px) {\n    padding-bottom: 268px;\n    background-position: bottom 50px left calc((((1200px - 100%) / 2)) + 189px);\n  }\n`;\n\nexport const ContainerTop = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n\n  height: 320px;\n  background-color: #f5f6fb;\n\n  border-bottom-left-radius: 100px 100px;\n\n  @media screen and (max-width: 767px) {\n    background-image: url(${props => props.cabbage});\n    background-position: top 104px right calc((100% - 320px) / 4);\n    background-repeat: no-repeat;\n  }\n\n  @media screen and (min-width: 768px) {\n    height: 582px;\n    background-image: url(${props => props.img});\n    background-size: cover;\n    background-repeat: no-repeat;\n    background-position: top 28px left 10px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    height: 583px;\n    background-size: contain;\n  }\n`;\n\nexport const ContainerUnder = styled.div``;\n","import { ContainerTop, Container } from './BackgroundLogInContainer.styled';\n\nexport default function BackgroundLogInContainer({ children }) {\n  return (\n    <Container\n      groupImg={process.env.PUBLIC_URL + '/images/groupCabbage.png'}\n      img={process.env.PUBLIC_URL + '/images/cabbage.png'}\n    >\n      <ContainerTop\n        img={process.env.PUBLIC_URL + '/images/background.png'}\n        cabbage={process.env.PUBLIC_URL + '/images/cabbage.png'}\n      >\n        {children}\n      </ContainerTop>\n    </Container>\n  );\n}\n","import styled from 'styled-components';\nimport COLORS from 'variables/colors/colors';\n\nexport const TitleBox = styled.div`\n  @media screen and (min-width: 320px) {\n    width: 183px;\n    padding-top: 86px;\n    margin-right: auto;\n    margin-left: auto;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 306px;\n    padding-top: 80px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    width: 377px;\n    position: absolute;\n    top: 308px;\n    left: 189px;\n  }\n`;\n\nexport const Title = styled.h1`\n  display: flex;\n\n  color: ${COLORS.blackColor};\n\n  font-weight: 900;\n  font-size: 102px;\n  line-height: calc(120 / 102);\n  letter-spacing: 0.18;\n`;\n\nexport const SpanTitle = styled.span`\n  position: relative;\n\n  ::before {\n    content: '';\n    width: 8px;\n    height: 13px;\n    position: absolute;\n    right: calc((100% - 8px) / 2);\n    top: 33px;\n    background-color: ${COLORS.blackColor};\n  }\n\n  ::after {\n    content: '';\n    width: 8px;\n    height: 13px;\n    position: absolute;\n    bottom: 0;\n    right: calc((100% - 8px) / 2);\n    bottom: 8px;\n    background-color: ${COLORS.blackColor};\n  }\n`;\n\nexport const SubTitle = styled.p`\n  font-family: 'Roboto';\n  font-weight: 700;\n  font-size: 16px;\n  line-height: calc(19 / 16);\n  letter-spacing: 0.18;\n  text-align: center;\n  text-transform: uppercase;\n  color: ${COLORS.textColor};\n\n  @media screen and (min-width: 767px) {\n    font-size: 13px;\n    letter-spacing: 0.15;\n  }\n`;\n","import { useMedia } from 'hooks/useMedia';\nimport { SpanTitle, SubTitle, Title, TitleBox } from './LoginTitle.styled';\n\nexport default function LoginTitle() {\n  const { isMobile, isTablet, isDesktop } = useMedia();\n\n  return (\n    <TitleBox>\n      {isDesktop && (\n        <Title>\n          Kapu<SpanTitle>s</SpanTitle>ta\n        </Title>\n      )}\n      {isTablet && (\n        <img\n          src={process.env.PUBLIC_URL + '/images/title/KapustaTablet.png'}\n          alt=\"title Kapusta\"\n        />\n      )}\n      {isMobile && (\n        <img\n          src={process.env.PUBLIC_URL + '/images/title/KapustaMobile.png'}\n          alt=\"title Kapusta\"\n        />\n      )}\n      <SubTitle>Smart Finance</SubTitle>\n    </TitleBox>\n  );\n}\n","// import { useState } from 'react';\n// import Container from 'components/Container';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\n// import { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { Box } from './Login.styled';\nimport BackgroundLogInContainer from 'components/BackgroundLogInContainer/BackgroundLogInContainer';\nimport LoginTitle from 'components/LoginTitle';\n\nexport default function Login() {\n\n\n  // const [loginFormNeeded, setLoginFormNeeded] = useState(true);\n  // const onRegistrationClick = () => {\n  //   setLoginFormNeeded(false);\n  // };\n\n  // const onBackToLogin = () => {\n  //   setLoginFormNeeded(true);\n  // };\n  return (\n    <BackgroundLogInContainer>\n      {/* <Container> */}\n      <LoginTitle />\n      <Box>\n        <LoginForm />\n        {/* {loginFormNeeded ? (\n          <LoginForm onRegistrationClick={onRegistrationClick} />\n        ) : (\n          <RegisterForm onBackToLogin={onBackToLogin} />\n        )} */}\n      </Box>\n      {/* </Container> */}\n    </BackgroundLogInContainer>\n  );\n}\n"],"names":["animation2","keyframes","fadeInLeft","animation3","fadeInRight","FormBox","styled","COLORS","Google","TitleGoogle","ButtonGoogle","Title","TextGoogle","Label","LabelText","Input","Field","ButtonGroup","Button","Error","yup","shape","email","required","password","min","LoginForm","dispatch","useDispatch","useState","button","setButton","useSearchParams","searchParams","useEffect","accessToken","get","googleUser","refreshUser","handleClick","e","target","name","href","size","onSubmit","initialValues","resetForm","logIn","register","validationSchema","schemaRegister","type","placeholder","render","msg","onClick","Box","Container","props","img","groupImg","ContainerTop","cabbage","BackgroundLogInContainer","children","TitleBox","SpanTitle","SubTitle","LoginTitle","useMedia","isMobile","isTablet","isDesktop","src","alt","Login"],"sourceRoot":""}