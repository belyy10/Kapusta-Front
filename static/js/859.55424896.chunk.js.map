{"version":3,"file":"static/js/859.55424896.chunk.js","mappings":"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","sources":["components/Balance/Balance.styled.jsx","components/Balance/Balance.jsx","components/TransactionListMobile/TransactionListMobile.styled.jsx","components/TransactionListMobile/TransactionListMobile.jsx","components/MobileTypeBtn/MobileTypeBtn.styled.jsx","components/MobileTypeBtn/MobileTypeBtn.jsx","pages/Mobile/Mobile.styled.jsx","pages/Mobile/Mobile.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin: 0 auto 40px auto;\n  // padding-top: 104px;\n\n  @media (min-width: 768px) {\n    display: flex;\n    align-items: center;\n    justify-content: space-around;\n    position: relative;\n    width: fit-content;\n    margin: 0 auto;\n    flex-direction: row;\n    align-self: center;\n    padding-bottom: 40px;\n    padding-top: 40px;\n  }\n  @media (min-width: 1200px) {\n    margin-bottom: 48px;\n    padding-top: 40px;\n  }\n`;\nexport const Title = styled.p`\n  font-size: 12px;\n  line-height: 14px;\n  font-weight: 500;\n  text-align: center;\n  letter-spacing: 0.02em;\n  color: rgba(82, 85, 95, 0.7);\n  margin-right: 20px;\n  margin-bottom: 8px;\n  @media screen and (min-width: 768px) and (max-width: 1280px) {\n    margin-right: 21px;\n    margin-bottom: 0px;\n  }\n`;\nexport const Section = styled.form`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;\n\nexport const InputContainer = styled.div`\n  display: flex;\n  align-items: baseline;\n  justify-content: center;\n  position: relative;\n`;\n\nexport const Input = styled.input`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  align-content: center;\n  border: 2px solid #ffffff;\n  border-radius: 16px;\n  background-color: transparent;\n  font: inherit;\n  font-weight: 700;\n  text-align: center;\n  color: black;\n  width: 140px;\n  height: 44px;\n  border-radius: 22px 0px 0px 22px;\n\n  @media screen and (min-width: 768px) {\n    margin-right: 15px;\n    border-radius: 16px;\n  }\n  @media (min-width: 1200px) {\n    margin-right: 0;\n    border-radius: 16px;\n    margin-right: 15px;\n    border-right: 1px solid #ffffff;\n  }\n`;\nexport const Label = styled.label`\n  position: absolute;\n  top: 21px;\n  right: 5px;\n  font-weight: 700;\n  color: black;\n  font: inherit;\n  font-size: 12px;\n  @media screen and (min-width: 768px) {\n    top: 19px;\n    right: 22px;\n  }\n`;\n\nexport const Button = styled.button`\n  background-color: transparent;\n  border: 2px solid #ffffff;\n  color: rgba(82, 85, 95, 0.7);\n  font-weight: 400;\n  border-radius: 0px 22px 22px 0px;\n  display: inline-block;\n  height: 50px;\n  width: 156px;\n\n  font-size: 12px;\n  line-height: 1.17;\n  letter-spacing: 0.02em;\n\n  text-transform: uppercase;\n  text-align: center;\n\n  @media screen and (min-width: 768px) {\n    border-radius: 16px;\n  }\n\n  :hover:enabled {\n    background-color: #ff751d;\n  }\n\n  ::placeholder {\n    font-weight: 700;\n    font-size: 12px;\n    line-height: 14px;\n    display: flex;\n    align-items: center;\n    letter-spacing: 0.02em;\n    text-transform: uppercase;\n    color: #000000;\n  }\n`;\nexport const Wrapper2 = styled.div`\n  position: absolute;\n  bottom: 42px;\n  transform: translateY(calc(100% + 18px)) translateX(16%);\n  width: 200px;\n  background: linear-gradient(117.84deg, #1d346a 2.84%, #031634 67.28%);\n  box-shadow: 0px 10px 60px rgba(170, 178, 197, 0.2);\n  padding: 30px;\n  border-radius: 30px;\n  z-index: 10;\n\n  ::before {\n    content: '';\n    position: absolute;\n    left: 16%;\n    top: -11px;\n    width: 0;\n    height: 0;\n    border-left: 11px solid transparent;\n    border-right: 11px solid transparent;\n    border-bottom: 11px solid #172d5d;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 292px;\n  }\n`;\n\nexport const Text = styled.p`\n  font-size: 14px;\n  line-height: 20px;\n  color: #ffffff;\n  margin: 0px 0px 20px 0px;\n`;\nexport const Styled = styled.p`\n  font-size: 12px;\n  line-height: 16px;\n  color: #ffffff;\n  margin: 0;\n`;\n\nexport const LinkReport = styled(Link)`\n  display: flex;\n  align-items: center;\n\n  text-decoration: none;\n  font-family: 'Roboto';\n\n  font-weight: 400;\n  font-size: 12px;\n  line-height: calc(14 / 12);\n\n  letter-spacing: 0.04;\n\n  color: rgba(82, 85, 95, 0.7);\n\n  @media screen and (min-width: 678px) {\n    position: absolute;\n    top: 57px;\n    right: 0;\n    z-index: 20;\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { updateBalance } from 'redux/auth/authOperations';\nimport {\n  Wrapper,\n  Button,\n  Title,\n  Section,\n  Input,\n  Wrapper2,\n  Text,\n  Styled,\n  InputContainer,\n  Label,\n} from './Balance.styled';\nimport { useAuth } from 'hooks/useAuth';\n// import Container from 'components/Container';\n\nexport default function Balance() {\n  const dispatch = useDispatch();\n  const { balance } = useAuth();\n\n  const [value, setValue] = useState({ balance } ?? 0);\n  const [tooltipOpen, setTooltipOpen] = useState(true);\n\n  useEffect(() => {\n    setValue(balance);\n  }, [balance]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    dispatch(updateBalance({ balance: e.target.elements.balance.value }));\n  };\n\n  const onChange = e => {\n    if (e.target.value < 0) {\n      return;\n    }\n    setValue(e.target.value);\n  };\n\n  return (\n    // <Container>\n    <Wrapper>\n      <Title>Balance:</Title>\n      <Section autoComplete=\"off\" onSubmit={onSubmit}>\n        <InputContainer>\n          <Input\n            type=\"number\"\n            placeholder={`0.00`}\n            name=\"balance\"\n            value={value}\n            readOnly={balance}\n            pattern=\"[0-9, UAH]\"\n            disabled={balance > 0 ? true : false}\n            onChange={onChange}\n          />\n          <Label>UAH</Label>\n        </InputContainer>\n        <Button type=\"submit\" disabled={balance > 0 ? true : false}>\n          Confirm\n        </Button>\n      </Section>\n      {!balance > 0 && (\n        <Wrapper2 active={tooltipOpen} setActive={setTooltipOpen}>\n          <Text>\n            Hello! To get started, enter the current balance of your account!\n          </Text>\n          <Styled>You can't spend money until you have it :{' ) '}</Styled>\n        </Wrapper2>\n      )}\n    </Wrapper>\n    // </Container>\n  );\n}\n","import styled from 'styled-components';\nimport COLORS from '../../variables/colors/colors';\n\nexport const TransactionItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  /* width: 280px; */\n\n  padding: 8px 0;\n  border-bottom: 1px solid ${COLORS.bgTableTitle};\n`;\n\nexport const TransactionDescription = styled.p`\n  font-family: 'Roboto';\n  font-weight: 700;\n  font-size: 12px;\n  line-height: calc(14 / 12);\n  letter-spacing: 0.04em;\n\n  color: ${COLORS.textColor};\n`;\n\nexport const TransactionInfoBox = styled.div`\n  display: flex;\n  gap: 20px;\n  margin-top: 4px;\n`;\n\nexport const TransactionInfo = styled.p`\n  font-family: 'Roboto';\n  font-weight: 400;\n  font-size: 8px;\n  line-height: calc(9 / 8);\n  letter-spacing: 0.04em;\n\n  color: ${COLORS.textColor};\n`;\n\nexport const TransactionBox = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const TransactionSum = styled.p`\n  font-family: 'Roboto';\n\n  font-weight: 700;\n  font-size: 12px;\n  line-height: calc(14 / 12);\n  letter-spacing: 0.04em;\n\n  color: ${props => (props.isExpenses ? COLORS.redColor : COLORS.greenColor)};\n`;\n\nexport const TransactionDeleteBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  border: none;\n  background-color: transparent;\n\n  cursor: pointer;\n`;\n","import { BsTrash } from 'react-icons/bs';\nimport {\n  TransactionBox,\n  TransactionDeleteBtn,\n  TransactionDescription,\n  TransactionInfo,\n  TransactionInfoBox,\n  TransactionItem,\n  TransactionSum,\n} from './TransactionListMobile.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectTransactionsByType } from 'redux/transactions/transactionsSelectors';\nimport Moment from 'react-moment';\nimport { removeTransaction } from 'redux/transactions/transactionsOperations';\n\nexport default function TransactionListMobile({ openTrForm }) {\n  const filteredTransactions = useSelector(selectTransactionsByType);\n  const dispatch = useDispatch();\n\n  return (\n    <ul>\n      {filteredTransactions.map(\n        ({ _id, date, description, category, sum, type }) => {\n          console.log(type === 'expenses');\n\n          return (\n            <TransactionItem key={_id}>\n              <div>\n                <TransactionDescription>{description}</TransactionDescription>\n                <TransactionInfoBox>\n                  <TransactionInfo>\n                    <Moment format=\"DD.MM.YYYY\">{date}</Moment>\n                  </TransactionInfo>\n                  <TransactionInfo>{category}</TransactionInfo>\n                </TransactionInfoBox>\n              </div>\n              <TransactionBox>\n                <TransactionSum isExpenses={type === 'expenses'}>\n                  {sum}\n                </TransactionSum>\n                <TransactionDeleteBtn\n                  onClick={() => dispatch(removeTransaction(_id))}\n                >\n                  <BsTrash width={15} height={18} />\n                </TransactionDeleteBtn>\n              </TransactionBox>\n            </TransactionItem>\n          );\n        }\n      )}\n    </ul>\n  );\n}\n","import COLORS from 'variables/colors/colors.js';\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\ndisplay:flex;\n  position: fixed;\n  flex-direction: row;\n  bottom: 0px;\n`;\n\nexport const Btn = styled.button`\n  width: calc(calc(100vw / 2) - 1px);\n  height: 53px;\n  border: none;\n\n  font-weight: 700;\n  font-size: 12px;\n  text-transform: uppercase;\n\n  color: ${COLORS.blackColor};\n  background-color: ${COLORS.bgTableTitle};\n  // background-color: ${props=> props.isActive ? COLORS.activeColor : COLORS.bgTableTitle}\n\n  transition: 0.2s ease-out;\n\n  &:first-child {\n    margin-right: 4px;\n  }\n\n  &:hover,\n  &:focus {\n    color: ${COLORS.whiteColor};\n    background-color: ${COLORS.activeColor};\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { toggleTransaction } from 'redux/transactions/transactionsSlice.js';\nimport { selectTypeTransactionMain } from 'redux/transactions/transactionsSelectors';\nimport { Btn, Container } from './MobileTypeBtn.styled.jsx';\nimport COLORS from 'variables/colors/colors.js';\n// import { useState } from 'react';\n\nexport default function MobileTypesBtn({openTrForm}) {\n  const transactions = useSelector(selectTypeTransactionMain);\n  const dispatch = useDispatch();\n  // const [isActive, setIsActive]=useState(true);\n\n  return (\n    <Container>\n      <Btn\n      isActive={transactions === 'expenses'}\n    \n      // className={transactions === 'expenses' ? COLORS.activeColor : ''}\n      // setActive={true}\n      onClick={() => {dispatch(toggleTransaction('expenses'));\n      openTrForm && openTrForm(true);\n    }}\n        name=\"expenses\"\n        type=\"submit\"\n      >\n        Expenses\n      </Btn>\n      <Btn\n      // isActive={transactions === 'incomes'}\n      // setActive={false}\n      className={transactions === 'incomes' ? COLORS.activeColor : ''}\n      onClick={() => { dispatch(toggleTransaction('incomes'));\n      \n      openTrForm && openTrForm(true);\n    }}\n        name=\"incomes\"\n        type=\"submit\"\n      >\n        Incomes\n      </Btn>\n    </Container>\n  );\n}\n","import COLORS from 'variables/colors/colors';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nimport { HiArrowNarrowLeft } from 'react-icons/hi';\nimport { RiBarChartFill } from 'react-icons/ri';\n\nexport const MobileContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  margin-left: auto;\n  margin-right: auto;\n  padding-top: 19px;\n\n  height: 296px;\n  background-color: ${COLORS.bgTableTitle};\n  border-bottom-left-radius: 100px 100px;\n`;\n\nexport const MobileInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: calc(100vh - 96px);\n  padding-left: 20px;\n  padding-right: 20px;\n`;\n\nexport const LinkToTransaction = styled(Link)`\n  display: flex;\n  align-items: center;\n  margin-bottom: 24px;\n\n  text-decoration: none;\n  font-family: 'Roboto';\n  text-transform: uppercase;\n\n  font-weight: 700;\n  font-size: 10px;\n  line-height: calc(14 / 12);\n  /* identical to box height */\n\n  letter-spacing: 0.02;\n\n  color: ${COLORS.blackColor};\n`;\n\nexport const LinkToReport = styled(Link)`\ndisplay: flex;\nalign-items: center;\nmargin-bottom: 35px;\nmargin-left: auto;\nmargin-right: auto;\n\ntext-decoration: none;\nfont-family: 'Roboto';\n\nfont-weight: 400;\nfont-size: 12px;\nline-height: calc(14 / 12);\n/* identical to box height */\n\nletter-spacing: 0.02;\n\ncolor: rgba(82, 85, 95, 0.7);`\n\nexport const IconLink = styled(HiArrowNarrowLeft)`\n  margin-right: 6px;\n  // margin-left: 22px;\n  color: ${COLORS.activeColor};\n`;\n\nexport const IconLinkReport = styled(RiBarChartFill)`\n  margin-left: 20px;\n`;\n\nexport const InputDate = styled.input`\n  margin-right: auto;\n  margin-left:auto;\n  margin-bottom:60px;\n  height: 44px;\n  // border: 2px solid white;\n  border:none;\n  outline: none;\n\n  background-color: transparent;\n  color: #52555f;\n  text-align: center;\n`;\n","import { useEffect, useState } from 'react';\n\nimport Balance from 'components/Balance';\nimport TransactionListMobile from 'components/TransactionListMobile';\nimport MobileTypeBtn from 'components/MobileTypeBtn';\n\nimport {\n  MobileContainer,\n  MobileInfo,\n  LinkToTransaction,\n  IconLink,\n  IconLinkReport,\n  LinkToReport,\n  InputDate,\n} from './Mobile.styled.jsx';\nimport { changeType } from 'redux/transactions/transactionsOperations.js';\nimport { useDispatch } from 'react-redux';\n\nexport default function Mobile() {\n  const [trForm, openTrForm] = useState(false);\n  const currentDate = new Date().toISOString().slice(0, 10);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(changeType('all'));\n  });\n\n  return (\n    <>\n      <MobileContainer>\n        <MobileInfo>\n          <LinkToTransaction to=\"/transaction\">\n            <IconLink size={18} />\n            TO TRANSACTION\n          </LinkToTransaction>\n          <LinkToReport to=\"/reports\">\n            Reports\n            <IconLinkReport size={14} color=\" #52555F\" />\n          </LinkToReport>\n          <Balance />\n          <InputDate\n            name=\"date\"\n            type=\"date\"\n            min=\"1920-01-01\"\n            max={currentDate}\n            // onChange={event =>\n            //   setFieldValue(\n            //     'date',\n            //     moment(event.target.value).format('YYYY-MM-DD')\n            //   )\n            // }\n          />\n\n          {trForm ? <TransactionListMobile openTrForm={openTrForm} /> : null}\n        </MobileInfo>\n      </MobileContainer>\n      <MobileTypeBtn openTrForm={openTrForm} />\n    </>\n  );\n}\n"],"names":["Wrapper","styled","Title","Section","InputContainer","Input","Label","Button","Wrapper2","Text","Styled","Link","Balance","dispatch","useDispatch","balance","useAuth","useState","value","setValue","tooltipOpen","setTooltipOpen","useEffect","autoComplete","onSubmit","e","preventDefault","updateBalance","target","elements","type","placeholder","name","readOnly","pattern","disabled","onChange","active","setActive","TransactionItem","COLORS","TransactionDescription","TransactionInfoBox","TransactionInfo","TransactionBox","TransactionSum","props","isExpenses","TransactionDeleteBtn","TransactionListMobile","openTrForm","filteredTransactions","useSelector","selectTransactionsByType","map","_id","date","description","category","sum","console","log","format","onClick","removeTransaction","width","height","Container","Btn","isActive","MobileTypesBtn","transactions","selectTypeTransactionMain","toggleTransaction","className","MobileContainer","MobileInfo","LinkToTransaction","LinkToReport","IconLink","HiArrowNarrowLeft","IconLinkReport","RiBarChartFill","InputDate","Mobile","trForm","currentDate","Date","toISOString","slice","changeType","to","size","color","min","max"],"sourceRoot":""}