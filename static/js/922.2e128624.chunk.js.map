{"version":3,"file":"static/js/922.2e128624.chunk.js","mappings":"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","sources":["components/Container/Container.styled.jsx","components/Container/Container.jsx","hooks/useMedia.js","components/LoginForm/LoginForm.styled.jsx","schema/shemaRegister.jsx","components/LoginForm/LoginForm.jsx","components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/Login/Login.styled.jsx","components/BackgroundLogInContainer/BackgroundLogInContainer.styled.jsx","components/BackgroundLogInContainer/BackgroundLogInContainer.jsx","components/LoginTitle/LoginTitle.styled.jsx","components/LoginTitle/LoginTitle.jsx","pages/Login/Login.jsx","variables/colors/colors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContainerBox = styled.div`\n  position: relative;\n  margin-left: auto;\n  margin-right: auto;\n  width: 320px;\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    min-width: 1200px;\n  }\n`;\n","import { ContainerBox } from './Container.styled';\n\nexport default function Container({ children }) {\n  return <ContainerBox>{children}</ContainerBox>;\n}\n","import { useMediaQuery } from 'react-responsive';\n\nexport const useMedia = () => {\n  const isDesktop = useMediaQuery({\n    query: '(min-width: 1200px)',\n  });\n  const isTabletAndDesktop = useMediaQuery({\n    query: '(min-width: 768px)',\n  });\n  const isMobile = useMediaQuery({ minWidth: 320, maxWidth: 767 });\n  const isTablet = useMediaQuery({ minWidth: 768, maxWidth: 1199 });\n\n  return {\n    isTablet,\n    isMobile,\n    isDesktop,\n    isTabletAndDesktop,\n  };\n};\n","import styled, { keyframes } from 'styled-components';\nimport COLORS from 'variables/colors/colors';\nimport { Field } from 'formik';\nimport { fadeInLeft, fadeInRight } from 'react-animations';\n\nconst animation2 = keyframes`${fadeInLeft}`;\nconst animation3 = keyframes`${fadeInRight}`;\n\nexport const FormBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 240px;\n  padding: 40px 20px;\n  background-color: #ffffff;\n  box-shadow: 5px 10px 20px rgba(170, 178, 197, 0.4);\n  border-radius: 30px;\n\n  @media screen and (min-width: 768px) {\n    width: 260px;\n    padding: 56px 83px;\n  }\n`;\n\nexport const Google = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 9px;\n  animation: 1s ${animation2};\n`;\n\nexport const TitleGoogle = styled.p`\n  font-weight: 400;\n  margin-bottom: 16px;\n  font-size: 12px;\n  line-height: 1.17;\n  text-align: center;\n  letter-spacing: 0.04em;\n  color: ${COLORS.textColor};\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 25px;\n  }\n`;\n\nexport const ButtonGoogle = styled.a`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 122px;\n  height: 40px;\n  margin-bottom: 32px;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 1.14x;\n  letter-spacing: 0.02em;\n  color: ${COLORS.blackColor};\n  background-color: ${COLORS.backgroungColor};\n  border-radius: 26px;\n  border: none;\n  box-shadow: 1px 3px 7px rgba(170, 178, 197, 0.4);\n  transition: box-shadow 400ms ease-in-out;\n  text-decoration: none;\n\n  :hover,\n  :focus {\n    box-shadow: 1px 3px 7px rgba(119, 125, 138, 0.466);\n  }\n`;\n\nexport const Title = styled.p`\n  font-weight: 400;\n  margin-bottom: 16px;\n  font-size: 12px;\n  line-height: 1.17;\n  letter-spacing: 0.04em;\n  color: ${COLORS.textColor};\n  animation: 1s ${animation3};\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 25px;\n  }\n`;\n\nexport const TextGoogle = styled.p`\n  margin-left: 10px;\n  text-decoration: none;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  animation: 1s ${animation3};\n`;\n\nexport const LabelText = styled.label`\n  margin-bottom: 16px;\n  font-size: 10px;\n  line-height: 1.2;\n  letter-spacing: 0.04em;\n  color: ${COLORS.blackColor};\n\n  @media screen and (min-width: 768px) {\n    font-size: 12px;\n  }\n`;\n\nexport const Input = styled(Field)`\n  padding: 17px 19px;\n  border: none;\n  outline: none;\n  border-radius: 30px;\n  background-color: ${COLORS.backgroungColor};\n`;\n\nexport const ButtonGroup = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: row;\n  margin-top: 20px;\n`;\n\nexport const Button = styled.button`\n  width: 116px;\n  height: 44px;\n  border: none;\n  border-radius: 16px;\n  box-shadow: 1px 3px 7px rgba(170, 178, 197, 0.4);\n  background-color: ${COLORS.backgroungColor};\n  color: ${COLORS.textColor};\n  font-weight: 700;\n  font-size: 12px;\n  line-height: 1.17;\n  letter-spacing: 0.02em;\n  text-transform: uppercase;\n  cursor: pointer;\n  transition: background-color 400ms ease-in-out, color 400ms ease-in-out,\n    box-shadow 400ms ease-in-out;\n  animation: 1s ${animation2};\n\n  :hover,\n  :focus {\n    background-color: ${COLORS.activeColor};\n    color: ${COLORS.whiteColor};\n    box-shadow: 1px 3px 7px rgba(255, 119, 8, 0.4);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 122px;\n  }\n`;\nexport const Error = styled.div`\n  position: relative;\n  margin-top: -15px;\n  margin-bottom: 16px;\n  margin-left: 20px;\n  font-size: 10px;\n  letter-spacing: 0.04em;\n  color: #eb5757;\n\n  ::before {\n    position: absolute;\n    top: -81px;\n    left: -25px;\n    content: '*';\n  }\n`;\n","import * as yup from 'yup';\n\nconst schemaRegister = yup.object().shape({\n  email: yup.string().required('This is a required field'),\n  password: yup\n    .string()\n    .required('This is a required field')\n    .min(6, 'min 6 symbols'),\n});\n\nexport default schemaRegister;\n","import { Formik, ErrorMessage, Form } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport {\n  ButtonGoogle,\n  ButtonGroup,\n  Button,\n  FormBox,\n  Google,\n  Input,\n  Label,\n  LabelText,\n  TextGoogle,\n  Title,\n  TitleGoogle,\n  Error,\n} from './LoginForm.styled';\nimport { FcGoogle } from 'react-icons/fc';\nimport { logIn } from 'redux/auth/authOperations';\nimport schemaRegister from 'schema/shemaRegister';\n\nexport const LoginForm = ({ onRegistrationClick }) => {\n  const dispatch = useDispatch();\n  const initialValues = { email: '', password: '' };\n\n  const handleSubmit = (initialValues, { resetForm }) => {\n    dispatch(logIn(initialValues));\n    resetForm();\n  };\n\n  return (\n    <>\n      <FormBox>\n        <Google>\n          <TitleGoogle>You can log in with your Google Account:</TitleGoogle>\n          <ButtonGoogle href=\"https://kapusta-deployment.onrender.com/api/users/google\">\n            <FcGoogle size={18} />\n            <TextGoogle>Google</TextGoogle>\n          </ButtonGoogle>\n        </Google>\n        <Formik\n          onSubmit={handleSubmit}\n          validationSchema={schemaRegister}\n          initialValues={initialValues}\n        >\n          <Form>\n            <Title>\n              Or log in using an email and password, after registering:\n            </Title>\n            <Label>\n              <LabelText>Email:</LabelText>\n              <Input type=\"email\" name=\"email\" placeholder=\"your@email.com\" />\n            </Label>\n            <ErrorMessage name=\"email\" render={msg => <Error>{msg}</Error>} />\n            <Label>\n              <LabelText>Password:</LabelText>\n              <Input type=\"password\" name=\"password\" placeholder=\"Password\" />\n            </Label>\n            <ErrorMessage\n              name=\"password\"\n              render={msg => <Error>{msg}</Error>}\n            />\n            <ButtonGroup>\n              <Button>Log in</Button>\n              <Button type=\"button\" onClick={onRegistrationClick}>\n                Registration\n              </Button>\n            </ButtonGroup>\n          </Form>\n        </Formik>\n      </FormBox>\n    </>\n  );\n};\n","import styled, { keyframes } from 'styled-components';\nimport COLORS from 'variables/colors/colors';\nimport { Field, Form } from 'formik';\nimport { fadeInLeft, fadeInRight } from 'react-animations';\n\nconst animation2 = keyframes`${fadeInLeft}`;\nconst animation3 = keyframes`${fadeInRight}`;\n\nexport const FormBox = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  width: 240px;\n  padding: 40px 20px;\n  background-color: #ffffff;\n  box-shadow: 5px 10px 20px rgba(170, 178, 197, 0.4);\n  border-radius: 30px;\n\n  @media screen and (min-width: 768px) {\n    width: 260px;\n    padding: 56px 83px;\n  }\n`;\n\nexport const Title = styled.p`\n  font-weight: 400;\n  margin-bottom: 16px;\n  font-size: 12px;\n  line-height: 1.17;\n  letter-spacing: 0.04em;\n  color: ${COLORS.textColor};\n  animation: 1s ${animation2};\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 25px;\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  animation: 1s ${animation3};\n`;\n\nexport const LabelText = styled.label`\n  margin-bottom: 16px;\n  font-size: 10px;\n  line-height: 1.2;\n  letter-spacing: 0.04em;\n  color: ${COLORS.blackColor};\n\n  @media screen and (min-width: 768px) {\n    font-size: 12px;\n  }\n`;\n\nexport const Input = styled(Field)`\n  padding: 17px 19px;\n  border: none;\n  outline: none;\n  border-radius: 30px;\n  background-color: ${COLORS.backgroungColor};\n`;\n\nexport const ButtonGroup = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: row;\n  margin-top: 20px;\n`;\n\nexport const Button = styled.button`\n  width: 116px;\n  height: 44px;\n  border: none;\n  border-radius: 16px;\n  box-shadow: 1px 3px 7px rgba(170, 178, 197, 0.4);\n  background-color: ${COLORS.backgroungColor};\n  color: ${COLORS.textColor};\n  font-weight: 700;\n  font-size: 12px;\n  line-height: 1.17;\n  letter-spacing: 0.02em;\n  text-transform: uppercase;\n  cursor: pointer;\n  transition: background-color 400ms ease-in-out, color 400ms ease-in-out,\n    box-shadow 400ms ease-in-out;\n  animation: 1s ${animation2};\n\n  :hover,\n  :focus {\n    background-color: ${COLORS.activeColor};\n    color: ${COLORS.whiteColor};\n    box-shadow: 1px 3px 7px rgba(255, 119, 8, 0.4);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 122px;\n  }\n`;\nexport const Error = styled.div`\n  position: relative;\n  margin-top: -15px;\n  margin-bottom: 16px;\n  margin-left: 20px;\n  font-size: 10px;\n  letter-spacing: 0.04em;\n  color: #eb5757;\n\n  ::before {\n    position: absolute;\n    top: -81px;\n    left: -25px;\n    content: '*';\n  }\n`;\n","import { Formik, ErrorMessage } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport {\n  ButtonGroup,\n  Button,\n  FormBox,\n  Input,\n  Label,\n  LabelText,\n  Title,\n  Error,\n} from './RegisterForm.styled';\nimport { register } from 'redux/auth/authOperations';\nimport schemaRegister from 'schema/shemaRegister';\n\nexport const RegisterForm = ({ onBackToLogin }) => {\n  const dispatch = useDispatch();\n  const initialValues = { email: '', password: '' };\n\n  const handleSubmit = (initialValues, { resetForm }) => {\n    dispatch(register(initialValues));\n    resetForm();\n  };\n\n  return (\n    <>\n      <Formik\n        onSubmit={handleSubmit}\n        validationSchema={schemaRegister}\n        initialValues={initialValues}\n      >\n        <FormBox>\n          <Title>\n            Please, enter your email and create a password OR back to login:\n          </Title>\n          <Label>\n            <LabelText>Email:</LabelText>\n            <Input type=\"email\" name=\"email\" placeholder=\"your@email.com\" />\n          </Label>\n          <ErrorMessage name=\"email\" render={msg => <Error>{msg}</Error>} />\n          <Label>\n            <LabelText>Password:</LabelText>\n            <Input type=\"password\" name=\"password\" placeholder=\"Password\" />\n          </Label>\n          <ErrorMessage name=\"password\" render={msg => <Error>{msg}</Error>} />\n          <ButtonGroup>\n            <Button>Sign up</Button>\n            <Button type=\"button\" onClick={onBackToLogin}>\n              Back to login\n            </Button>\n          </ButtonGroup>\n        </FormBox>\n      </Formik>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Box = styled.div`\n  display: flex;\n  justify-content: flex-start;\n\n  @media screen and (min-width: 320px) {\n    margin-top: 50px;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-top: 80px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    margin-top: 0;\n    position: absolute;\n    top: 117px;\n    right: 0;\n    justify-content: flex-end;\n  }\n`;\n","import styled from 'styled-components';\nimport COLORS from 'variables/colors/colors';\n\nexport const Container = styled.div`\n  padding-bottom: 514px;\n  background-color: ${COLORS.whiteColor};\n  background-repeat: no-repeat;\n\n  @media screen and (max-width: 767px) {\n    background-image: url(${props => props.img});\n    background-position: bottom left calc((100% - 320px) / 2 + 40px);\n  }\n\n  @media screen and (min-width: 768px) {\n    padding-bottom: 442px;\n\n    background-image: url(${props => props.groupImg});\n\n    background-position: bottom 90px left calc(((100% - 678px) / 2) - 30px);\n  }\n\n  @media screen and (min-width: 1200px) {\n    padding-bottom: 268px;\n    background-position: bottom 50px left calc((((1200px - 100%) / 2)) + 189px);\n  }\n`;\n\nexport const ContainerTop = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n\n  height: 320px;\n  background-color: #f5f6fb;\n\n  border-bottom-left-radius: 100px 100px;\n\n  @media screen and (max-width: 767px) {\n    background-image: url(${props => props.cabbage});\n    background-position: top 104px right calc((100% - 320px) / 4);\n    background-repeat: no-repeat;\n  }\n\n  @media screen and (min-width: 768px) {\n    height: 582px;\n    background-image: url(${props => props.img});\n    background-size: cover;\n    background-repeat: no-repeat;\n    background-position: top 28px left 10px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    height: 583px;\n    background-size: contain;\n  }\n`;\n\nexport const ContainerUnder = styled.div``;\n","import { ContainerTop, Container } from './BackgroundLogInContainer.styled';\n\nexport default function BackgroundLogInContainer({ children }) {\n  return (\n    <Container\n      groupImg={process.env.PUBLIC_URL + '/images/groupCabbage.png'}\n      img={process.env.PUBLIC_URL + '/images/cabbage.png'}\n    >\n      <ContainerTop\n        img={process.env.PUBLIC_URL + '/images/background.png'}\n        cabbage={process.env.PUBLIC_URL + '/images/cabbage.png'}\n      >\n        {children}\n      </ContainerTop>\n    </Container>\n  );\n}\n","import styled from 'styled-components';\nimport COLORS from 'variables/colors/colors';\n\nexport const TitleBox = styled.div`\n  @media screen and (min-width: 320px) {\n    width: 183px;\n    padding-top: 86px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 306px;\n    padding-top: 80px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    width: 377px;\n    position: absolute;\n    top: 308px;\n    left: 189px;\n  }\n`;\n\nexport const Title = styled.h1`\n  display: flex;\n\n  color: ${COLORS.blackColor};\n\n  font-weight: 900;\n  font-size: 102px;\n  line-height: calc(120 / 102);\n  letter-spacing: 0.18;\n`;\n\nexport const SpanTitle = styled.span`\n  position: relative;\n\n  ::before {\n    content: '';\n    width: 8px;\n    height: 13px;\n\n    position: absolute;\n    right: calc((100% - 8px) / 2);\n    top: 29px;\n\n    background-color: ${COLORS.blackColor};\n  }\n\n  ::after {\n    content: '';\n    width: 8px;\n    height: 13px;\n\n    position: absolute;\n    bottom: 0;\n    right: calc((100% - 8px) / 2);\n    bottom: 8px;\n\n    background-color: ${COLORS.blackColor};\n  }\n`;\n\nexport const SubTitle = styled.p`\n  font-family: 'Roboto';\n  font-weight: 700;\n  font-size: 16px;\n  line-height: calc(19 / 16);\n  /* identical to box height */\n\n  letter-spacing: 0.18;\n  text-align: center;\n  text-transform: uppercase;\n\n  color: ${COLORS.textColor};\n\n  @media screen and (min-width: 767px) {\n    font-size: 13px;\n    letter-spacing: 0.15;\n  }\n`;\n","import { useMedia } from 'hooks/useMedia';\nimport { SpanTitle, SubTitle, Title, TitleBox } from './LoginTitle.styled';\n\nexport default function LoginTitle() {\n  const { isMobile, isTablet, isDesktop } = useMedia();\n\n  return (\n    <TitleBox>\n      {isDesktop && (\n        <Title>\n          Kapu<SpanTitle>s</SpanTitle>ta\n        </Title>\n      )}\n      {isTablet && (\n        <img\n          src={process.env.PUBLIC_URL + '/images/title/KapustaTablet.png'}\n          alt=\"title Kapusta\"\n        />\n      )}\n      {isMobile && (\n        <img\n          src={process.env.PUBLIC_URL + '/images/title/KapustaMobile.png'}\n          alt=\"title Kapusta\"\n        />\n      )}\n      <SubTitle>Smart Finance</SubTitle>\n    </TitleBox>\n  );\n}\n","import { useState } from 'react';\nimport Container from 'components/Container';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { Box } from './Login.styled';\nimport BackgroundLogInContainer from 'components/BackgroundLogInContainer/BackgroundLogInContainer';\nimport LoginTitle from 'components/LoginTitle';\n\nexport default function Login() {\n  const [loginFormNeeded, setLoginFormNeeded] = useState(true);\n  const onRegistrationClick = () => {\n    setLoginFormNeeded(false);\n  };\n\n  const onBackToLogin = () => {\n    setLoginFormNeeded(true);\n  };\n  return (\n    <BackgroundLogInContainer>\n      <Container>\n        <LoginTitle />\n        <Box>\n          {loginFormNeeded ? (\n            <LoginForm onRegistrationClick={onRegistrationClick} />\n          ) : (\n            <RegisterForm onBackToLogin={onBackToLogin} />\n          )}\n        </Box>\n      </Container>\n    </BackgroundLogInContainer>\n  );\n}\n","const COLORS = Object.freeze({\n  textColor: '#52555f',\n  borderColor: '#e0e5eb',\n  bgTableTitle: '#F5F6FB',\n  activeColor: '#FF751D',\n  greenColor: '#407946',\n  backgroungColor: '#F6F7FB',\n  blackColor: '#000000',\n  whiteColor: '#FFFFFF',\n  barColor: '#FFDAC0',\n  redColor: '#E7192E',\n});\n\nexport default COLORS;\n"],"names":["ContainerBox","styled","Container","children","useMedia","isDesktop","useMediaQuery","query","isTabletAndDesktop","isMobile","minWidth","maxWidth","isTablet","animation2","keyframes","fadeInLeft","animation3","fadeInRight","FormBox","Google","TitleGoogle","COLORS","ButtonGoogle","Title","TextGoogle","Label","LabelText","Input","Field","ButtonGroup","Button","Error","yup","shape","email","required","password","min","LoginForm","onRegistrationClick","dispatch","useDispatch","href","size","onSubmit","initialValues","resetForm","logIn","validationSchema","schemaRegister","type","name","placeholder","render","msg","onClick","Form","RegisterForm","onBackToLogin","register","Box","props","img","groupImg","ContainerTop","cabbage","BackgroundLogInContainer","process","TitleBox","SpanTitle","SubTitle","LoginTitle","src","alt","Login","useState","loginFormNeeded","setLoginFormNeeded","Object","freeze","textColor","borderColor","bgTableTitle","activeColor","greenColor","backgroungColor","blackColor","whiteColor","barColor","redColor"],"sourceRoot":""}