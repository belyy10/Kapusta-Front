{"version":3,"file":"static/js/356.04c6c7c8.chunk.js","mappings":"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","sources":["components/Container/Container.styled.jsx","components/Container/Container.jsx","components/Graphic/Graphic.styled.jsx","components/Graphic/Graphic.jsx","pages/Reports/Reports.jsx","variables/colors/colors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContainerBox = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  width: 320px;\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    min-width: 1200px;\n  }\n`;\n","import { ContainerBox } from './Container.styled';\n\nexport default function Container({ children }) {\n  return <ContainerBox>{children}</ContainerBox>;\n}\n","import styled from 'styled-components';\nexport const GraphicBox = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  margin-left: auto;\n  margin-right: auto;\n\n  width: 1034px;\n  height: 422px;\n\n  box-shadow: 0px 10px 60px rgba(170, 178, 197, 0.2);\n  border-radius: 30px;\n\n  /* outline: 1px solid tomato; */\n`;\n","import {\n  BarChart,\n  Bar,\n  XAxis,\n  Tooltip,\n  CartesianGrid,\n  ResponsiveContainer,\n  YAxis,\n  Cell,\n  Text,\n} from 'recharts';\nimport COLORS from 'variables/colors/colors';\nimport { GraphicBox } from './Graphic.styled';\n\nconst monthTransaction = [\n  {\n    id: 1,\n    date: '21.09.2019',\n    description: 'salary',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: 31242142354235234525234523,\n    date: '21.09.2019',\n    description: 'ali',\n    category: 'car',\n    sum: 20300,\n  },\n  {\n    id: 31242142354235234525234523,\n    date: '21.09.2019',\n    description: 'alic',\n    category: 'car',\n    sum: 11433,\n  },\n  {\n    id: 12,\n    date: '21.09.2019',\n    description: 'salary',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: 13321,\n    date: '21.09.2019',\n    description: 'salary',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: 14,\n    date: '21.09.2019',\n    description: 'salary',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: 41,\n    date: '21.09.2019',\n    description: 'salary',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: 13,\n    date: '21.09.2019',\n    description: 'brakes',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: 133,\n    date: '21.09.2019',\n    description: 'brakes',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: 132,\n    date: '21.09.2019',\n    description: 'salary',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: 1432423,\n    date: '21.09.2019',\n    description: 'salary',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: 142,\n    date: '21.09.2019',\n    description: 'optics',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: Math.random(),\n    date: '21.09.2019',\n    description: 'optics',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: Math.random(),\n    date: '21.09.2019',\n    description: 'optics',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: Math.random(),\n    date: '21.09.2019',\n    description: 'optics',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: Math.random(),\n    date: '21.09.2019',\n    description: 'salary',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: Math.random(),\n    date: '21.09.2019',\n    description: 'salary',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: Math.random(),\n    date: '21.09.2019',\n    description: 'salary',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: Math.random(),\n    date: '21.09.2019',\n    description: 'salary',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: Math.random(),\n    date: '21.09.2019',\n    description: 'weels',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: Math.random(),\n    date: '21.09.2019',\n    description: 'weels',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: Math.random(),\n    date: '21.09.2019',\n    description: 'weels',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: Math.random(),\n    date: '21.09.2019',\n    description: 'weels',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: Math.random(),\n    date: '21.09.2019',\n    description: 'weels',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: Math.random(),\n    date: '21.09.2019',\n    description: 'weels',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: Math.random(),\n    date: '21.09.2019',\n    description: 'salary',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: Math.random(),\n    date: '21.09.2019',\n    description: 'disk',\n    category: 'car',\n    sum: 2000,\n  },\n  {\n    id: Math.random(),\n    date: '21.09.2019',\n    description: 'plastic',\n    category: 'car',\n    sum: 3000,\n  },\n  {\n    id: Math.random(),\n    date: '21.09.2019',\n    description: 'mirror',\n    category: 'car',\n    sum: 5000,\n  },\n  {\n    id: Math.random(),\n    date: '21.09.2019',\n    description: 'driver',\n    category: 'car',\n    sum: 7775,\n  },\n];\n\nconst CustomizedLabel = ({ x, y, _, value }) => {\n  return (\n    <text\n      x={x}\n      y={y}\n      dy={-8}\n      dx={20}\n      fontSize=\"12\"\n      fontFamily=\"Roboto\"\n      fill={COLORS.textColor}\n      textAnchor=\"middle\"\n    >\n      {value} UAH.\n    </text>\n  );\n};\n\nconst CustomizedTickLabel = ({ x, y, payload }) => {\n  return (\n    <Text\n      x={x}\n      y={y}\n      dy={4}\n      dx={-15}\n      fill={COLORS.textColor}\n      fontSize={12}\n      fontFamily={'Roboto'}\n    >\n      {payload.value}\n    </Text>\n  );\n};\n\nexport default function Graphic() {\n  const graphicTransact = monthTransaction.reduce(\n    (prev, { description, sum }) => {\n      const index = prev.findIndex(option => option.name === description);\n\n      if (index !== -1) {\n        prev[index].sum += sum;\n        return prev;\n      }\n\n      prev.push({ name: description, sum: sum });\n      return prev;\n    },\n    []\n  );\n\n  const sortGriphicTransact = graphicTransact.sort(\n    (firstEl, secondEl) => secondEl.sum - firstEl.sum\n  );\n\n  return (\n    <GraphicBox>\n      <ResponsiveContainer>\n        <BarChart\n          data={sortGriphicTransact}\n          stackOffset={'expand'}\n          margin={{\n            top: 50,\n            right: 150,\n            left: 150,\n            bottom: 5,\n          }}\n          barGap={25}\n        >\n          <CartesianGrid vertical={false} stroke={COLORS.bgTableTitle} />\n          <XAxis\n            dataKey=\"name\"\n            padding={{ left: 77, right: 77 }}\n            axisLine={false}\n            tickLine={false}\n            tick={<CustomizedTickLabel />}\n          />\n          <YAxis tickCount={9} hide={true} />\n          <Tooltip />\n\n          <Bar\n            dataKey=\"sum\"\n            fill={COLORS.activeColor}\n            minPointSize={5}\n            radius={[10, 10, 0, 0]}\n            label={<CustomizedLabel />}\n            barSize={35}\n          >\n            {/* <LabelList dataKey=\"sum\" position=\"top\" /> */}\n            {monthTransaction.map((_, index) => (\n              <Cell fill={index % 3 ? COLORS.barColor : COLORS.activeColor} />\n            ))}\n          </Bar>\n        </BarChart>\n      </ResponsiveContainer>\n    </GraphicBox>\n  );\n}\n","import Container from 'components/Container';\nimport Graphic from 'components/Graphic';\n\nexport default function Reports() {\n  return (\n    <Container>\n      <h2>REPORTS</h2>\n      <Graphic />\n    </Container>\n  );\n}\n","const COLORS = Object.freeze({\n  textColor: '#52555f',\n  borderColor: '#e0e5eb',\n  bgTableTitle: '#F5F6FB',\n  activeColor: '#FF751D',\n  greenColor: '#407946',\n  backgroungColor: '#F6F7FB',\n  blackColor: '#000000',\n  whiteColor: '#FFFFFF',\n  barColor: '#FFDAC0',\n});\n\nexport default COLORS;\n"],"names":["ContainerBox","styled","Container","children","GraphicBox","monthTransaction","id","date","description","category","sum","Math","random","CustomizedLabel","x","y","value","_","dy","dx","fontSize","fontFamily","fill","COLORS","textAnchor","CustomizedTickLabel","payload","Text","Graphic","sortGriphicTransact","reduce","prev","index","findIndex","option","name","push","sort","firstEl","secondEl","ResponsiveContainer","BarChart","data","stackOffset","margin","top","right","left","bottom","barGap","CartesianGrid","vertical","stroke","XAxis","dataKey","padding","axisLine","tickLine","tick","YAxis","tickCount","hide","Tooltip","Bar","minPointSize","radius","label","barSize","map","Cell","Reports","Object","freeze","textColor","borderColor","bgTableTitle","activeColor","greenColor","backgroungColor","blackColor","whiteColor","barColor"],"sourceRoot":""}