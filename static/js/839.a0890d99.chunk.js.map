{"version":3,"file":"static/js/839.a0890d99.chunk.js","mappings":"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","sources":["components/BackgroundPrivateContainer/BackgroundPrivateContainer.styled.jsx","components/BackgroundPrivateContainer/BackgroundPrivateContainer.jsx","components/Balance/Balance.styled.jsx","components/Balance/Balance.jsx","components/Modal/Modal.styled.jsx","components/Button/Button.styled.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx","components/Summary/SummaryList.jsx","pages/Main/Main.styled.jsx","components/TransactionsContainer/TransactionsContainer.styled.jsx","components/Summary/Summary.styled.jsx","components/Summary/Summary.jsx","components/TableBody/TableBody.styled.jsx","components/TableBody/TableBody.jsx","components/Table/Table.styled.jsx","components/Table/Table.jsx","components/TransactionsContainer/TransactionsContainer.jsx","pages/Main/Main.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport COLORS from 'variables/colors/colors';\n\nexport const Container = styled.div`\n  padding-bottom: 514px;\n  background-color: ${COLORS.whiteColor};\n\n  @media screen and (min-width: 768px) {\n    padding-bottom: 442px;\n\n    background-image: url(${props => props.groupImg});\n    background-repeat: no-repeat;\n    background-position: bottom 59px right calc(((100% - 678px)));\n  }\n\n  @media screen and (min-width: 1200px) {\n    background-image: url(${props => props.img});\n    padding-bottom: 268px;\n    background-position: bottom right;\n    \n  }\n`;\n\nexport const ContainerTop = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  padding-left:20px;\n  padding-right:20px;\n\n  height: 286px;\n  background-color: ${COLORS.bgTableTitle};\n\n  border-bottom-left-radius: 100px 100px;\n\n  @media screen and (min-width: 768px) {\n    height: 582px;\n    padding-left:0;\n    padding-right:0px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    height: 583px;\n    padding-left:0;\n    padding-right:0px;\n    \n  }\n`;\n\nexport const ContainerUnder = styled.div``;\n","import { Container, ContainerTop } from './BackgroundPrivateContainer.styled';\n\nexport default function BackgroundPrivateContainer({ children }) {\n  return (\n    <Container\n      groupImg={process.env.PUBLIC_URL + '/images/groupCabbage.png'}\n      img={process.env.PUBLIC_URL + '/images/background.png'}\n    >\n      <ContainerTop>{children}</ContainerTop>\n    </Container>\n  );\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport COLORS from 'variables/colors/colors';\n\nexport const Wrapper = styled.div`\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin: 0 auto 32px auto;\n\n  @media (min-width: 768px) {\n    display: flex;\n    align-items: center;\n    justify-content: space-evenly;\n    width: fit-content;\n    margin: 0px auto;\n    padding-top: 52px; \n    flex-direction: row;\n    align-self: center;\n   \n  }\n  @media (min-width: 1200px) {\n    margin-left: auto;\n    margin-right:auto;\n  }\n`;\nexport const Title = styled.p`\n  font-size: 12px;\n  line-height: 14px;\n  font-weight: 500;\n  text-align: center;\n  letter-spacing: 0.02em;\n  color: ${COLORS.textColorOpacity};\n\n  @media screen and (max-width: 767px) {\n      padding-top: 15px;\n      padding-bottom: 8px;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-right: 21px;\n    padding-bottom: 0px;\n  }\n`;\nexport const Section = styled.form`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;\n\nexport const InputContainer = styled.div`\n  display: flex;\n  align-items: baseline;\n  justify-content: center;\n  position: relative;\n`;\n\nexport const Input = styled.input`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  align-content: center;\n  border: 2px solid ${COLORS.whiteColor};\n  border-radius: 16px;\n  background-color: transparent;\n  font: inherit;\n  font-weight: 700;\n  font-size: 12px;\n  text-align: center;\n  color: ${COLORS.blackColor};\n  width: 140px;\n  height: 44px;\n  border-radius: 22px 0px 0px 22px;\n\n  @media screen and (min-width: 768px) {\n    margin-right: 15px;\n    border-radius: 16px;\n  }\n  @media (min-width: 1200px) {\n    margin-right: 0;\n    border-radius: 16px;\n    margin-right: 15px;\n    border-right: 1px solid ${COLORS.whiteColor};\n  }\n\n   &::placeholder {\n    color: ${COLORS.blackColor};\n  }\n`;\nexport const Label = styled.label`\n  position: absolute;\n  top: 19px;\n  right: 14px;\n  font-weight: 700;\n  color: black;\n  /* font: inherit; */\n  font-size: 12px;\n  @media screen and (min-width: 768px) {\n    top: 19px;\n    right: 27px;\n  }\n`;\n\nexport const Button = styled.button`\n  background-color: transparent;\n  border: 2px solid #ffffff;\n  color: rgba(82, 85, 95, 0.7);\n  font-weight: 400;\n  border-radius: 0px 22px 22px 0px;\n  display: inline-block;\n  height: 50px;\n  width: 156px;\n\n  font-size: 12px;\n  line-height: 1.17;\n  letter-spacing: 0.02em;\n\n  text-transform: uppercase;\n  text-align: center;\n\n  @media screen and (min-width: 768px) {\n    border-radius: 16px;\n  }\n\n  :hover:enabled {\n    background-color: #ff751d;\n  }\n\n  ::placeholder {\n    font-weight: 700;\n    font-size: 12px;\n    line-height: 14px;\n    display: flex;\n    align-items: center;\n    letter-spacing: 0.02em;\n    text-transform: uppercase;\n    color: #000000;\n  }\n`;\nexport const Wrapper2 = styled.div`\n  position: absolute;\n  top:54px;\n\n  /* bottom: 42px; */\n  transform: translateY(calc(100% + 18px)) translateX(16%);\n  width: 200px;\n  background: linear-gradient(117.84deg, #1d346a 2.84%, #031634 67.28%);\n  box-shadow: 0px 10px 60px rgba(170, 178, 197, 0.2);\n  padding: 30px;\n  border-radius: 30px;\n  z-index: 10;\n\n  ::before {\n    content: '';\n    position: absolute;\n    left: 16%;\n    top: -11px;\n    width: 0;\n    height: 0;\n    border-left: 11px solid transparent;\n    border-right: 11px solid transparent;\n    border-bottom: 11px solid #172d5d;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 292px;\n    top: 2px;\n  }\n`;\n\nexport const Text = styled.p`\n  font-size: 14px;\n  line-height: 20px;\n  color: ${COLORS.whiteColor};\n  margin: 0px 0px 20px 0px;\n`;\nexport const Styled = styled.p`\n  font-size: 12px;\n  line-height: 16px;\n  color: ${COLORS.whiteColor};\n  margin: 0;\n`;\n\nexport const LinkReport = styled(Link)`\n  display: flex;\n  align-items: center;\n\n  text-decoration: none;\n  font-family: 'Roboto';\n\n  font-weight: 400;\n  font-size: 12px;\n  line-height: calc(14 / 12);\n\n  letter-spacing: 0.04;\n\n  color: rgba(82, 85, 95, 0.7);\n\n  @media screen and (min-width: 768px) {\n    position: absolute;\n    top: 57px;\n    right: 0;\n    z-index: 20;\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { updateBalance } from 'redux/auth/authOperations';\nimport {\n  Wrapper,\n  Button,\n  Title,\n  Section,\n  Input,\n  Wrapper2,\n  Text,\n  Styled,\n  InputContainer,\n  Label,\n} from './Balance.styled';\nimport { useAuth } from 'hooks/useAuth';\n// import Container from 'components/Container';\n\nexport default function Balance() {\n  const dispatch = useDispatch();\n  const { balance } = useAuth();\n\n  const [value, setValue] = useState({ balance } ?? 0);\n  const [tooltipOpen, setTooltipOpen] = useState(true);\n\n  useEffect(() => {\n    setValue(balance);\n  }, [balance]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    dispatch(updateBalance({ balance: e.target.elements.balance.value }));\n  };\n\n  const onChange = e => {\n    if (e.target.value < 0) {\n      return;\n    }\n    setValue(e.target.value);\n  };\n\n  return (\n    <Wrapper>\n      <Title>Balance:</Title>\n      <Section autoComplete=\"off\" onSubmit={onSubmit}>\n        <InputContainer>\n          <Input\n            type=\"number\"\n            placeholder={`0.00 UAH`}\n            name=\"balance\"\n            value={value}\n            readOnly={balance}\n            pattern=\"[0-9, UAH]\"\n            disabled={balance > 0 ? true : false}\n            onChange={onChange}\n          />\n          <Label>UAH</Label>\n        </InputContainer>\n        <Button type=\"submit\" disabled={balance > 0 ? true : false}>\n          Confirm\n        </Button>\n      </Section>\n      {!balance > 0 && (\n        <Wrapper2 active={tooltipOpen} setActive={setTooltipOpen}>\n          <Text>\n            Hello! To get started, enter the current balance of your account!\n          </Text>\n          <Styled>You can't spend money until you have it :{' ) '}</Styled>\n        </Wrapper2>\n      )}\n    </Wrapper>\n  );\n}\n","import styled from 'styled-components';\nimport COLORS from 'variables/colors/colors';\n\nexport const Modal = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  z-index: 100;\n  transform: translate(-50%, -50%);\n  color: ${COLORS.textColor};\n  background-color: ${COLORS.whiteColor};\n  border-radius: 30px;\n  box-shadow: 10px 10px 30px rgba(82, 85, 95, 0.4);\n`;\n\nexport const Wrapper = styled.div`\n  padding: 50px 20px 60px;\n  @media screen and (min-width: 768px) {\n    padding: 50px 58px 60px;\n  }\n`;\n\nexport const Text = styled.p`\n  margin-bottom: 20px;\n  text-align: center;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 1.14;\n  letter-spacing: 0.02em;\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  gap: 15px;\n`;\n\nexport const CloseButton = styled.button`\n  border: none;\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  background: transparent;\n  cursor: pointer;\n`;\n\nexport const Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  z-index: 100;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  background-color: rgba(0, 0, 0, 0.2);\n`;\n","import styled from 'styled-components';\nimport COLORS from 'variables/colors/colors';\n\nexport const Button = styled.button`\n  width: 125px;\n  height: 44px;\n  background: ${COLORS.whiteColor};\n  border-radius: 16px;\n  font-size: 12px;\n  line-height: 14px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  letter-spacing: 0.02em;\n  text-transform: uppercase;\n  color: ${COLORS.textColor};\n  border: 2px solid #f6f7fc;\n  text-align: center;\n  transition: background 400ms ease-in-out, color 400ms ease-in-out;\n\n  &:not(:last-child) {\n    margin-right: 15px;\n  }\n\n  :hover,\n  :focus {\n    background: ${COLORS.activeColor};\n    color: ${COLORS.whiteColor};\n  }\n`;\n","import { Button } from './Button.styled';\n\nexport const BtnLogOut = ({ children, dispatch, closeModal }) => {\n  const handleClick = () => {\n    if (children === 'Yes') {\n      dispatch();\n      closeModal();\n    }\n  };\n\n  return <Button onClick={handleClick}>{children}</Button>;\n};\n\nexport const BtnDismiss = ({ children, closeModal }) => {\n  return <Button onClick={closeModal}>{children}</Button>;\n};\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport {\n  Modal,\n  Wrapper,\n  Text,\n  ButtonWrapper,\n  CloseButton,\n  Backdrop,\n} from './Modal.styled';\nimport { FiX } from 'react-icons/fi';\nimport { BtnDismiss, BtnLogOut } from 'components/Button/Button';\n\nconst modalRoot = document.getElementById('modal-root');\nconst body = document.querySelector('body');\n\nexport const ModalWindow = ({ children, closeModal, dispatch }) => {\n  useEffect(() => {\n    window.addEventListener('keydown', handleEscapeClose);\n    return () => {\n      window.removeEventListener('keydown', handleEscapeClose);\n      body.classList.toggle('no-scroll');\n    };\n  });\n\n  const handleEscapeClose = event => {\n    if (event.code === 'Escape') {\n      closeModal();\n    }\n  };\n\n  const handleBackdropClose = event => {\n    if (event.target === event.currentTarget) {\n      closeModal();\n    }\n  };\n\n  return createPortal(\n    <Backdrop className=\"modal-backdrop\" onClick={handleBackdropClose}>\n      <Modal>\n        <CloseButton onClick={closeModal}>\n          <FiX size={20} />\n        </CloseButton>\n\n        <Wrapper>\n          <Text>{children}</Text>\n          <ButtonWrapper>\n            <BtnLogOut\n              type=\"button\"\n              dispatch={dispatch}\n              closeModal={closeModal}\n            >\n              Yes\n            </BtnLogOut>\n            <BtnDismiss type=\"button\" closeModal={closeModal}>\n              No\n            </BtnDismiss>\n          </ButtonWrapper>\n        </Wrapper>\n      </Modal>\n    </Backdrop>,\n    modalRoot\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { selectTypeTransactionMain } from 'redux/transactions/transactionsSelectors';\nimport { SummaryList, SummaryItemSpan } from './Summary.styled';\nlet nameMon;\n\n\nexport default function SummaryBodyList({ item }) {\n    const type = useSelector(selectTypeTransactionMain);\n    // console.log(type);\n    const numMonth = item._id.slice(item._id.length - 2);\n\n    switch (numMonth) {\n        case '01': nameMon = 'January';\n            break;\n        case '02': nameMon = 'February';\n            break;\n        case '03': nameMon = 'March';\n            break;\n        case '04': nameMon = 'April';\n            break;\n        case '05': nameMon = 'May';\n            break;\n        case '06': nameMon = 'June';\n            break;\n        case '07': nameMon = 'July';\n            break;\n        case '08': nameMon = 'August';\n            break;\n        case '09': nameMon = 'september';\n            break;\n        case '10': nameMon = 'october';\n            break;\n        case '11': nameMon = 'november';\n            break;\n        case '12': nameMon = 'december';\n            break;\n        default: nameMon = 'Month';\n            \n    }\n    // console.log('nameMon', nameMon);\n    if (type === 'incomes') {\n    return (\n            <SummaryList>\n             {nameMon}\n                <SummaryItemSpan> {item.incomes}.00 </SummaryItemSpan>\n            {/* </SummaryItem> */}\n               \n            </SummaryList>\n        );\n    } else {\n        return (\n            <SummaryList>\n                {/* <SummaryItem> */}\n                    {nameMon}\n                    <SummaryItemSpan> {item.expenses}.00 </SummaryItemSpan>\n                {/* </SummaryItem> */}\n            </SummaryList>\n        );\n    }\n}","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { RiBarChartFill } from 'react-icons/ri';\nimport { HiArrowNarrowLeft } from 'react-icons/hi';\nimport COLORS from 'variables/colors/colors';\n\nexport const MainInfo = styled.div`\ndisplay: flex;\njustify-content: space-between;\nmargin: 40px 32px 60px;\n\n@media screen and (min-width: 768px) {\nmax-width: 704px;\nmargin: 0px auto 0px;}\n\n@media screen and (min-width: 1200px) {\nmax-width: 1098px;}\nmargin: 0px auto 0px;\n`\n\nexport const LinkReport = styled(Link)`\n  display: flex;\n  align-items: center;\n  padding-top: 10px;\n  padding-left: 10px;\n\n  text-decoration: none;\n  font-family: 'Roboto';\n\n  font-weight: 400;\n  font-size: 12px;\n  line-height: calc(14 / 12);\n\n  letter-spacing: 0.04;\n\n  color: rgba(82, 85, 95, 0.7);\n\n  :hover,\n  :focus {\n    color: ${COLORS.activeColor};\n\n  }\n`;\n\nexport const IconLink = styled(RiBarChartFill)`\n  margin-left: 20px;\n  color: ' #52555F';\n  :hover,\n  :focus {\n    color: ${COLORS.activeColor};\n  }\n`;\n\nexport const LinkToMain = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const IconLinkMain = styled(HiArrowNarrowLeft)`\n  margin-left: 20px;\n  margin-bottom: 10px;\n  margin-top: 15px;\n\n  color: ${COLORS.activeColor};\n`;\n","import styled from 'styled-components';\nimport COLORS from 'variables/colors/colors';\n\nexport const TransactionsWrapper = styled.section`\n  padding: 0 20px;\n  @media screen and (min-width: 768px) {\n    margin-top: 100px;\n    width: 640px;\n    padding: 24px 40px 42px 40px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    margin-left: auto;\n    margin-right: auto;\n    position: relative;\n    background-color: ${COLORS.whiteColor};\n    box-shadow: 0px 10px 60px rgba(170, 178, W197, 0.2);\n    border-top-right-radius: 30px;\n    border-bottom-right-radius: 30px;\n    border-bottom-left-radius: 30px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    width: 1098px;\n    padding: 32px 32px;\n    margin-top: 48px;\n  }\n`;\n\nexport const Expenses = styled.button`\nfont-family:  Roboto, sans-serif;\ntext-transform: uppercase;\nfont-size: 12px;\nline-height: 1.167;\nfont-weight: 700;\n  @media screen and (max-width: 767px) {\n    display: none;\n  }\n  @media screen and (min-width: 768px) {\n    width: 138px;\n    height: 40px;\n    display: inline-block;\n    position: absolute;\n    top: -38px;\n    left: 0px;\n    padding: 10px 20px;\n    background-color: #fefefe;\n    color: ${props =>\n      props.isActive ? COLORS.activeColor : COLORS.blackColor};\n    font-weight: bold;\n    text-align: center;\n    border-top-left-radius: 16px;\n    border-top-right-radius: 16px;\n    border: transparent;\n    text-decoration: none;\n    transition: all 0.2s ease-in-out;\n    cursor: pointer;\n    outline: none;\n  }\n`;\n\nexport const Incomes = styled.button`\n\nfont-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\ntext-transform: uppercase;\nfont-size: 12px;\nline-height: 1.167;\nfont-weight: 700;\n  @media screen and (max-width: 767px) {\n    display: none;\n  }\n  @media screen and (min-width: 768px) {\n    width: 138px;\n    height: 40px;\n    display: inline-block;\n    position: absolute;\n    top: -38px;\n    left: 138px;\n    padding: 10px 20px;\n    background-color: #fefefe;\n    color: ${props =>\n      props.isActive ? COLORS.activeColor : COLORS.blackColor};\n    font-weight: bold;\n    text-align: center;\n    border-top-left-radius: 16px;\n    border-top-right-radius: 16px;\n    text-decoration: none;\n    transition: all 0.2s ease-in-out;\n    cursor: pointer;\n    outline: none;\n    border: transparent;\n  }\n`;\n","import styled from 'styled-components';\nimport COLORS from 'variables/colors/colors';\n\nexport const SummaryBox = styled.div`\n  display: none;\n\n  @media screen and (min-width: 768px) {\n    width: 230px;\n    height: 280px;\n    margin-top: 40px;\n\n    display: inline-flex;\n    flex-direction: column;\n    text-align: center;\n\n    border-top-left-radius: 16px;\n    border-top-right-radius: 16px;\n    border-bottom-right-radius: 16px;\n\n    background-color: ${COLORS.bgTableTitle};\n\n    text-transform: uppercase;\n  }\n\n  @media screen and (min-width: 1200px) {\n    margin-top: 0px;\n    width: 213px;\n  }\n`;\n\nexport const SummaryTitle = styled.h4`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 38px;\n\n  box-sizing: 4px;\n  align-content: center;\n  text-align: center;\n  list-style: none;\n\n  font-style: 'Roboto';\n  font-weight: 700;\n  font-size: 12px;\n  line-height: 1.167;\n  letter-spacing: 0.04em;\n\n  font-style: 'Roboto';\n  font-weight: 700;\n  font-size: 12px;\n  line-height: 1.167;\n  letter-spacing: 0.04em;\n\n  border-bottom: 4px solid ${COLORS.whiteColor};\n`;\n\nexport const SummaryBody = styled.ul`\n  list-style: none;\n`;\n\nexport const SummaryList = styled.li`\n  height: 38px;\n  border-bottom: 2px solid ${COLORS.whiteColor};\n\n  padding-left: 22px;\n  padding-right: 20px;\n\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 38px;\n\n  font-style: 'Roboto';\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.167;\n  letter-spacing: 0.04em;\n\n  color: ${COLORS.textColor};\n`;\n\nexport const SummaryItem = styled.p`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 38px;\n\n  font-style: 'Roboto';\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.167;\n  letter-spacing: 0.04em;\n\n  color: ${COLORS.textColor};\n`;\n\nexport const SummaryItemSpan = styled.p``;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchSummaryExpenses } from 'redux/transactions/transactionsOperations';\n// import { selectSummaryExpenses } from 'redux/transactions/transactionsSelectors';\nimport { SummaryBox, SummaryTitle, SummaryBody } from './Summary.styled';\n\nimport SummaryBodyList from './SummaryList';\n\nexport default function Summary({ monthSumm }) {\n  // console.log('sum_mont', monthSumm);\n  const dispatch = useDispatch();\n  \n  useEffect(() => {\n    dispatch(fetchSummaryExpenses());\n  }, [dispatch]);\n  // const monthSummary = useSelector(selectSummaryExpenses);\n  // console.log('monthSummary',monthSummary);\n  // console.log('type', type);\n\n  return (\n    <SummaryBox>\n      <SummaryTitle>Summary</SummaryTitle>\n   \n      <SummaryBody>\n         {monthSumm && \n          monthSumm.map(item => (\n            <SummaryBodyList key={item._id} item={item} />\n          ))}\n       </SummaryBody>\n    </SummaryBox>\n  );\n}\n","import styled from 'styled-components';\nimport COLORS from 'variables/colors/colors';\n\nexport const TableBodyList = styled.tr`\n  height: 40px;\n  border: 2px solid ${COLORS.bgTableTitle};\n\n  @media screen and (min-width: 768px) {\n    width: 624px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    width: 746px;\n\n    height: 40px;\n\n  }\n`;\n\nexport const TableBodyItem = styled.td`\n  height: 100%;\n  width: calc(724px / 5);\n\n  @media screen and (min-width: 1200px) {\n    width: calc(746px / 5);\n  }\n\n  text-align: center;\n\n  font-style: 'Roboto';\n  font-weight: 400;\n  font-size: 12px;\n  line-height: calc(14 / 12);\n  letter-spacing: 0.04em;\n\n  color: ${COLORS.textColor};\n\n  :nth-child(4) {\n    font-weight: 700;\n    color: ${props =>\n      props.isExpenses ? COLORS.redColorExpenses : COLORS.greenColor};\n  }\n  :nth-child(5) {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n   @media screen and (min-width: 768px) {\n    width: calc (624px / 5);\n    }\n\n       @media screen and (min-width: 1200px) {\n    width: calc (746px / 5);\n    }\n`;\n\nexport const DeleteBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 32px;\n  height: 32px;\n\n  border: none;\n  border-radius: 50%;\n\n  background-color: ${COLORS.bgTableTitle};\n  cursor: pointer;\n\n  :hover,\n  :focus {\n    background-color: ${COLORS.activeColor};\n  }\n`;\n","import { BsTrash } from 'react-icons/bs';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { removeTransaction } from 'redux/transactions/transactionsOperations';\nimport { DeleteBtn, TableBodyItem, TableBodyList } from './TableBody.styled';\nimport Moment from 'react-moment';\nimport { deleteStranBalanseChange } from 'redux/auth/authSlice';\nimport { changesSummaryDelete } from 'redux/transactions/transactionsSlice';\nimport { selectTypeTransactionMain } from 'redux/transactions/transactionsSelectors';\nimport { ModalWindow } from 'components/Modal';\nimport { useState } from 'react';\n\nexport default function TableBody({ transaction }) {\n  const [modalOpen, setModalOpen] = useState(false);\n  const dispatch = useDispatch();\n  const type = useSelector(selectTypeTransactionMain);\n\n  function handleDelete() {\n    dispatch(removeTransaction(transaction._id));\n    dispatch(deleteStranBalanseChange(transaction.sum));\n\n    const bal = type === 'expenses' ? transaction.sum * -1 : transaction.sum;\n\n    dispatch(changesSummaryDelete({ date: transaction.date, sum: bal }));\n    setModalOpen(false);\n  }\n\n  const handleModalOpen = () => {\n    setModalOpen(true);\n  };\n\n  const handleModalClose = () => {\n    setModalOpen(false);\n  };\n\n  return (\n    <TableBodyList>\n      <TableBodyItem>\n        <Moment format=\"DD.MM.YYYY\">{transaction.date}</Moment>\n      </TableBodyItem>\n      <TableBodyItem>{transaction.description}</TableBodyItem>\n      <TableBodyItem>{transaction.category}</TableBodyItem>\n      <TableBodyItem isExpenses={transaction.type.toLowerCase() === 'expenses'}>\n        {transaction.sum} UAH.\n      </TableBodyItem>\n      <TableBodyItem>\n        <DeleteBtn onClick={handleModalOpen}>\n          <BsTrash />\n        </DeleteBtn>\n        {modalOpen && (\n          <ModalWindow closeModal={handleModalClose} dispatch={handleDelete}>\n            Are you sure?\n          </ModalWindow>\n        )}\n      </TableBodyItem>\n    </TableBodyList>\n  );\n}\n\n// onClick={() =>\n//   handleDelete(transaction._id, transaction.sum, transaction.date)\n// }\n// >\n","import styled from 'styled-components';\nimport COLORS from 'variables/colors/colors';\n\nexport const TransactionBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  overflow: hidden;\n  border-top-left-radius: 16px;\n  border-top-right-radius: 16px;\n\n  @media screen and (min-width: 768px) {\n    width: 624px;\n    flex-direction: column;\n  }\n\n  @media screen and (min-width: 1200px) {\n    flex-direction: row;\n    width: 1079px;\n    height: 400px;\n  }\n`;\n\nexport const TableBox = styled.table`\n  width: 100%;\n\n  border: none;\n\n  border-spacing: 0;\n  border-collapse: collapse;\n\n  table-layout: fixed;\n\n  background-color: ${COLORS.whiteColor};\n\n  @media screen and (min-width: 1200px) {\n    width: 746px;\n    height: 400px;\n  }\n`;\n\nexport const TableTitle = styled.tr``;\n\nexport const TableTitleItem = styled.th`\n  width: calc(100% / 4);\n  height: 40px;\n\n  border-spacing: 0;\n\n  background-color: ${COLORS.bgTableTitle};\n  text-transform: uppercase;\n`;\n\nexport const TableBodys = styled.tbody`\n  display: block;\n  overflow-y: auto;\n  width: 746px;\n  max-height: 400px;\n\n  ::-webkit-scrollbar {\n    width: 6px;\n    background-color: ${COLORS.bgTableTitle};\n  }\n\n  ::-webkit-scrollbar-thumb {\n    border-radius: 2px;\n\n    background-color: ${COLORS.activeColor};\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 624px;\n    height: 400px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    width: 746px;\n    height: 400px;\n  }\n`;\n","import Summary from 'components/Summary';\nimport TableBody from 'components/TableBody';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchSummaryExpenses } from 'redux/transactions/transactionsOperations';\nimport { selectSummaryExpenses, selectTransactionsByTypeAndDate } from 'redux/transactions/transactionsSelectors';\nimport {\n  TableBox,\n  TableTitle,\n  TableTitleItem,\n  TransactionBox,\n  TableBodys,\n} from './Table.styled';\nimport { useEffect } from 'react';\n\nexport default function Table() {\n  const filteredTransactions = useSelector(selectTransactionsByTypeAndDate);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n      dispatch(fetchSummaryExpenses());\n   }, [dispatch])\n  const monthSumm = useSelector(selectSummaryExpenses);\n\n  // console.log('filteredTransactions', filteredTransactions);\n  // console.log('summary', monthSumm);\n\n  return (\n    <TransactionBox>\n      <TableBox>\n        <thead>\n          <TableTitle>\n            <TableTitleItem>DATE</TableTitleItem>\n            <TableTitleItem>DESCRIPTION</TableTitleItem>\n            <TableTitleItem>category</TableTitleItem>\n            <TableTitleItem>sum</TableTitleItem>\n            <TableTitleItem></TableTitleItem>\n          </TableTitle>\n        </thead>\n        <TableBodys>\n          {filteredTransactions &&\n            filteredTransactions.map(transaction => (\n              <TableBody key={transaction._id} transaction={transaction} />\n            ))}\n        </TableBodys>\n      </TableBox>\n      <Summary key={monthSumm._id} monthSumm={monthSumm} />\n    </TransactionBox>\n  );\n}\n","import CreateExpenses from 'components/CreateTransaction/CreateTransaction';\nimport {\n  TransactionsWrapper,\n  Incomes,\n  Expenses,\n} from './TransactionsContainer.styled';\n\nimport { useMedia } from 'hooks/useMedia';\nimport Table from 'components/Table';\n// import TransactionListMobile from 'components/TransactionListMobile';\n\n// import Summary from 'components/Summary';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toggleTransaction } from 'redux/transactions/transactionsSlice';\nimport { selectTypeTransactionMain } from 'redux/transactions/transactionsSelectors';\n\nexport default function TransactionsContainer() {\n  const dispatch = useDispatch();\n  const transactions = useSelector(selectTypeTransactionMain);\n\n  const { isTabletAndDesktop } = useMedia();\n\n  return (\n    <TransactionsWrapper>\n      <Incomes\n        isActive={transactions === 'incomes'}\n        onClick={() => dispatch(toggleTransaction('incomes'))}\n      >\n        Income\n      </Incomes>\n      <Expenses\n        isActive={transactions === 'expenses'}\n        onClick={() => dispatch(toggleTransaction('expenses'))}\n      >\n        Expenses\n      </Expenses>\n\n      <CreateExpenses transactions={transactions} />\n      {isTabletAndDesktop && <Table />}\n      {/* {isMobile && <TransactionListMobile />}  */}\n    </TransactionsWrapper>\n  );\n}\n","import BackgroundPrivateContainer from 'components/BackgroundPrivateContainer';\nimport Balance from 'components/Balance';\nimport { IconLink, LinkReport, LinkToMain, IconLinkMain, MainInfo } from './Main.styled';\n\nimport TransactionsContainer from 'components/TransactionsContainer/TransactionsContainer';\nimport { useMedia } from 'hooks/useMedia';\n\nexport default function Main() {\n  const { isMobile } = useMedia();\n\n  return (\n    <BackgroundPrivateContainer>\n      {isMobile ? (\n        <>\n          <LinkToMain to=\"/main\">\n            <IconLinkMain size={18} />\n          </LinkToMain>\n        </>\n      ) : null}\n\n      {!isMobile && (\n        <MainInfo >\n          <Balance />\n          <LinkReport to=\"/reports\">\n            Reports\n            <IconLink size={14} />\n          </LinkReport>\n        </MainInfo>\n      )}\n      <TransactionsContainer />\n    </BackgroundPrivateContainer>\n  );\n}\n"],"names":["Container","styled","COLORS","props","groupImg","img","ContainerTop","BackgroundPrivateContainer","children","Wrapper","Title","Section","InputContainer","Input","Label","Button","Wrapper2","Text","Styled","Link","Balance","dispatch","useDispatch","balance","useAuth","useState","value","setValue","tooltipOpen","setTooltipOpen","useEffect","autoComplete","onSubmit","e","preventDefault","updateBalance","target","elements","type","placeholder","name","readOnly","pattern","disabled","onChange","active","setActive","Modal","ButtonWrapper","CloseButton","Backdrop","BtnLogOut","closeModal","onClick","BtnDismiss","modalRoot","document","getElementById","body","querySelector","ModalWindow","window","addEventListener","handleEscapeClose","removeEventListener","classList","toggle","event","code","createPortal","className","currentTarget","size","nameMon","MainInfo","LinkReport","IconLink","RiBarChartFill","LinkToMain","IconLinkMain","HiArrowNarrowLeft","TransactionsWrapper","Expenses","isActive","Incomes","SummaryBox","SummaryTitle","SummaryBody","SummaryList","SummaryItemSpan","SummaryBodyList","item","useSelector","selectTypeTransactionMain","_id","slice","length","incomes","expenses","Summary","monthSumm","fetchSummaryExpenses","map","TableBodyList","TableBodyItem","isExpenses","DeleteBtn","TableBody","transaction","modalOpen","setModalOpen","format","date","description","category","toLowerCase","sum","removeTransaction","deleteStranBalanseChange","bal","changesSummaryDelete","TransactionBox","TableBox","TableTitle","TableTitleItem","TableBodys","Table","filteredTransactions","selectTransactionsByTypeAndDate","selectSummaryExpenses","TransactionsContainer","transactions","isTabletAndDesktop","useMedia","toggleTransaction","Main","isMobile","to"],"sourceRoot":""}