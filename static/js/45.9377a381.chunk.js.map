{"version":3,"file":"static/js/45.9377a381.chunk.js","mappings":"uQAEaA,EAAUC,EAAAA,GAAAA,IAAH,8gBAuBPC,EAAQD,EAAAA,GAAAA,EAAH,iVAcLE,EAAUF,EAAAA,GAAAA,KAAH,sFAKPG,EAAQH,EAAAA,GAAAA,MAAH,4eAsBLI,EAASJ,EAAAA,GAAAA,OAAH,0sBAoCNK,EAAWL,EAAAA,GAAAA,IAAH,skBAwBRM,EAAON,EAAAA,GAAAA,EAAH,kHAMJO,EAASP,EAAAA,GAAAA,EAAH,mG,sBCnHJ,SAASQ,IAAW,IAAD,EAC1BC,GAAWC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,KAAZD,QAER,GAA0BE,EAAAA,EAAAA,UAAQ,UAAC,CAAEF,QAAAA,UAAH,QAAgB,GAAlD,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAsCF,EAAAA,EAAAA,WAAS,GAA/C,eAAOG,EAAP,KAAoBC,EAApB,MAEAC,EAAAA,EAAAA,YAAU,WACRH,EAASJ,EACV,GAAE,CAACA,IAcJ,OACE,SAACQ,EAAA,EAAD,WACE,UAACpB,EAAD,YACE,SAACE,EAAD,wBACA,UAACC,EAAD,CAASkB,aAAa,MAAMC,SAhBjB,SAAAC,GACfA,EAAEC,iBACFd,GAASe,EAAAA,EAAAA,IAAc,CAAEb,QAASW,EAAEG,OAAOC,SAASf,QAAQG,QAC7D,EAaK,WACE,SAACX,EAAD,CACEwB,KAAK,SACLC,YAAW,WACXC,KAAK,UACLf,MAAOA,EACPgB,SAAUnB,EACVoB,QAAQ,cACRC,SAAUrB,EAAU,EACpBsB,SApBO,SAAAX,GACXA,EAAEG,OAAOX,MAAQ,GAGrBC,EAASO,EAAEG,OAAOX,MACnB,KAkBO,SAACV,EAAD,CAAQuB,KAAK,SAASK,SAAUrB,EAAU,EAA1C,yBAIAA,EAAU,IACV,UAACN,EAAD,CAAU6B,OAAQlB,EAAamB,UAAWlB,EAA1C,WACE,SAACX,EAAD,iFAGA,UAACC,EAAD,uDAAkD,gBAM7D,C,yECrEY6B,E,SAAepC,GAAAA,IAAH,2X,WCAV,SAASmB,EAAT,GAAkC,IAAbkB,EAAY,EAAZA,SAClC,OAAO,SAACD,EAAD,UAAeC,GACvB,C,sHCDYC,EAAkBtC,EAAAA,GAAAA,GAAH,0JAMCuC,EAAAA,EAAAA,cAGhBC,EAAyBxC,EAAAA,GAAAA,EAAH,qKAOxBuC,EAAAA,EAAAA,WAGEE,EAAqBzC,EAAAA,GAAAA,IAAH,4EAMlB0C,EAAkB1C,EAAAA,GAAAA,EAAH,kKAOjBuC,EAAAA,EAAAA,WAGEI,EAAiB3C,EAAAA,GAAAA,IAAH,wDAKd4C,EAAiB5C,EAAAA,GAAAA,EAAH,wKAQhB,SAAA6C,GAAK,OAAKA,EAAMC,WAAaP,EAAAA,EAAAA,SAAkBA,EAAAA,EAAAA,UAA1C,IAGHQ,EAAuB/C,EAAAA,GAAAA,OAAH,yK,qDCxClB,SAASgD,IACtB,IAAMC,GAAuBC,EAAAA,EAAAA,IAAYC,EAAAA,IAEzC,OACE,wBACGF,EAAqBG,KACpB,YAAsD,IAAnDC,EAAkD,EAAlDA,IAAKC,EAA6C,EAA7CA,KAAMC,EAAuC,EAAvCA,YAAaC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,IAAK9B,EAAW,EAAXA,KAGxC,OAFA+B,QAAQC,IAAa,aAAThC,IAGV,UAACW,EAAD,YACE,4BACE,SAACE,EAAD,UAAyBe,KACzB,UAACd,EAAD,YACE,SAACC,EAAD,WACE,SAAC,IAAD,CAAQkB,OAAO,aAAf,SAA6BN,OAE/B,SAACZ,EAAD,UAAkBc,WAGtB,UAACb,EAAD,YACE,SAACC,EAAD,CAAgBE,WAAqB,aAATnB,EAA5B,SACG8B,KAEH,SAACV,EAAD,WACE,SAAC,MAAD,CAASc,MAAO,GAAIC,OAAQ,YAfZT,EAoBzB,KAIR,C,oHC7CYU,EAAsB/D,EAAAA,GAAAA,QAAH,mgBAQRuC,EAAAA,EAAAA,YAaXyB,EAAWhE,EAAAA,GAAAA,OAAH,8kBAaR,SAAA6C,GAAK,OACZA,EAAMoB,SAAW1B,EAAAA,EAAAA,YAAqBA,EAAAA,EAAAA,UAD1B,IAcL2B,EAAUlE,EAAAA,GAAAA,OAAH,glBAaP,SAAA6C,GAAK,OACZA,EAAMoB,SAAW1B,EAAAA,EAAAA,YAAqBA,EAAAA,EAAAA,UAD1B,I,4CC7DL4B,EAAgBnE,EAAAA,GAAAA,GAAH,kEAEJuC,EAAAA,EAAAA,cAGT6B,EAAgBpE,EAAAA,GAAAA,GAAH,kZAYfuC,EAAAA,EAAAA,WAIE,SAAAM,GAAK,OACZA,EAAMC,WAAaP,EAAAA,EAAAA,iBAA0BA,EAAAA,EAAAA,UADjC,IAUL8B,EAAYrE,EAAAA,GAAAA,OAAH,oRAWAuC,EAAAA,EAAAA,aAKEA,EAAAA,EAAAA,a,+BC5CT,SAAS+B,EAAT,GAAqC,IAAhBC,EAAe,EAAfA,YAC5B9D,GAAWC,EAAAA,EAAAA,MAEjB,OACE,UAACyD,EAAD,YACE,SAACC,EAAD,WACE,SAAC,IAAD,CAAQR,OAAO,aAAf,SAA6BW,EAAYjB,UAE3C,SAACc,EAAD,UAAgBG,EAAYhB,eAC5B,SAACa,EAAD,UAAgBG,EAAYf,YAC5B,UAACY,EAAD,CAAetB,WAA+C,aAAnCyB,EAAY5C,KAAK6C,cAA5C,UACGD,EAAYd,IADf,YAGA,SAACW,EAAD,WACE,SAACC,EAAD,CAAWI,QAAS,kBAAMhE,GAASiE,EAAAA,EAAAA,IAAkBH,EAAYlB,KAA7C,EAApB,UACE,SAAC,MAAD,UAKT,C,yBCvBYV,EAAiB3C,EAAAA,GAAAA,IAAH,gRAgBd2E,EAAW3E,EAAAA,GAAAA,MAAH,+PAUCuC,EAAAA,EAAAA,YAQTqC,EAAa5E,EAAAA,GAAAA,GAAH,sBAEV6E,EAAiB7E,EAAAA,GAAAA,GAAH,oJAMLuC,EAAAA,EAAAA,cAITuC,EAAa9E,EAAAA,GAAAA,MAAH,gRAQCuC,EAAAA,EAAAA,aAMAA,EAAAA,EAAAA,aCpDT,SAASwC,IACtB,IAAM9B,GAAuBC,EAAAA,EAAAA,IAAYC,EAAAA,IAEzC,OACE,SAACR,EAAD,WACE,UAACgC,EAAD,YACE,4BACE,UAACC,EAAD,YACE,SAACC,EAAD,oBACA,SAACA,EAAD,2BACA,SAACA,EAAD,wBACA,SAACA,EAAD,mBACA,SAACA,EAAD,UAGJ,SAACC,EAAD,UACG7B,GACCA,EAAqBG,KAAI,SAAAmB,GAAW,OAClC,SAACD,EAAD,CAAiCC,YAAaA,GAA9BA,EAAYlB,IADM,UAO/C,C,0BCnBc,SAAS2B,IACtB,IAAMvE,GAAWC,EAAAA,EAAAA,MACXuE,GAAe/B,EAAAA,EAAAA,IAAYgC,EAAAA,IACjC,GAAyCC,EAAAA,EAAAA,KAAjCC,EAAR,EAAQA,mBAAoBC,EAA5B,EAA4BA,SAC5B,OACE,UAACtB,EAAD,YACE,SAACG,EAAD,CACED,SAA2B,YAAjBgB,EACVR,QAAS,kBAAMhE,GAAS6E,EAAAA,EAAAA,IAAkB,WAAjC,EAFX,sBAMA,SAACtB,EAAD,CACEC,SAA2B,aAAjBgB,EACVR,QAAS,kBAAMhE,GAAS6E,EAAAA,EAAAA,IAAkB,YAAjC,EAFX,uBAMA,SAAC,IAAD,CAAgBL,aAAcA,IAE7BG,IAAsB,SAACL,EAAD,IACtBM,IAAY,SAACrC,EAAA,EAAD,MAIlB,C,oKCtCY7B,EAAYnB,EAAAA,GAAAA,IAAH,4DAKTuF,EAAMvF,EAAAA,GAAAA,OAAH,gYASLuC,EAAAA,EAAAA,WACWA,EAAAA,EAAAA,aAWTA,EAAAA,EAAAA,WACWA,EAAAA,EAAAA,a,WC1BT,SAASiD,IAItB,OACE,UAACrE,EAAD,YACE,SAACoE,EAAD,CACEd,QAAS,WAER,EAED5C,KAAK,WACLF,KAAK,SANP,uBAUA,SAAC4D,EAAD,CACEd,QAAS,WAER,EAED5C,KAAK,UACLF,KAAK,SANP,uBAYL,C,mDCzBY8D,EAAkBzF,EAAAA,GAAAA,IAAH,kKAUf0F,EAAa1F,EAAAA,GAAAA,IAAH,oGAMV2F,GAAoB3F,EAAAA,EAAAA,IAAO4F,EAAAA,GAAP5F,CAAH,oUAgBnBuC,EAAAA,EAAAA,YAGEsD,GAAe7F,EAAAA,EAAAA,IAAO4F,EAAAA,GAAP5F,CAAH,0UAmBZ8F,GAAW9F,EAAAA,EAAAA,IAAO+F,EAAAA,IAAP/F,CAAH,qFAGVuC,EAAAA,EAAAA,aAGEyD,GAAiBhG,EAAAA,EAAAA,IAAOiG,EAAAA,IAAPjG,CAAH,8CAIdkG,EAAYlG,EAAAA,GAAAA,MAAH,uMAOAuC,EAAAA,EAAAA,YCvDP,SAAS4D,IACtB,OAA6BtF,EAAAA,EAAAA,WAAS,GAAtC,eAAOuF,EAAP,KAAeC,EAAf,KACMC,GAAc,IAAIC,MAAOC,cAAcC,MAAM,EAAG,IAQtD,OACE,iCACE,UAAChB,EAAD,WACGW,GACC,SAACpD,EAAA,EAAD,CAAuBqD,WAAYA,KAEnC,UAACX,EAAD,YACE,UAACC,EAAD,CAAmBe,GAAG,eAAtB,WACE,SAACZ,EAAD,CAAUa,KAAM,KADlB,qBAIA,UAACd,EAAD,CAAca,GAAG,WAAjB,qBAEF,SAACV,EAAD,CAAgBW,KAAM,GAAIC,MAAM,iBAG9B,SAACpG,EAAA,EAAD,KAGI,SAAC0F,EAAD,CACErE,KAAK,OACLF,KAAK,OACLkF,IAAI,aACJC,IAAKR,QAYf,SAACtB,EAAA,EAAD,QAEF,SAAC,EAAD,CAAeqB,WAAYA,MAGhC,C","sources":["components/Balance/Balance.styled.jsx","components/Balance/Balance.jsx","components/Container/Container.styled.jsx","components/Container/Container.jsx","components/TransactionListMobile/TransactionListMobile.styled.jsx","components/TransactionListMobile/TransactionListMobile.jsx","components/TransactionsContainer/TransactionsContainer.styled.jsx","components/TableBody/TableBody.styled.jsx","components/TableBody/TableBody.jsx","components/Table/Table.styled.jsx","components/Table/Table.jsx","components/TransactionsContainer/TransactionsContainer.jsx","components/MobileTypeBtn/MobileTypeBtn.styled.jsx","components/MobileTypeBtn/MobileTypeBtn.jsx","pages/Mobile/Mobile.styled.jsx","pages/Mobile/Mobile.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  flex-direction: column;\n  justify-content: center;\n  margin: 0 auto;\n  padding-top: 104px;\n  @media (min-width: 768px) {\n    display: flex;\n    align-items: center;\n    justify-content: space-around;\n    position: relative;\n    width: fit-content;\n    margin: 0 auto;\n    flex-direction: row;\n    align-self: center;\n    padding-bottom: 40px;\n    padding-top: 40px;\n    padding-right: 367px;\n  }\n  @media (min-width: 1200px) {\n    margin-bottom: 48px;\n    padding-top: 40px;\n  }\n`;\nexport const Title = styled.p`\n  font-size: 12px;\n  line-height: 14px;\n  font-weight: 500;\n  text-align: center;\n  letter-spacing: 0.02em;\n  color: rgba(82, 85, 95, 0.7);\n  margin-right: 20px;\n  margin-bottom: 8px;\n  @media screen and (min-width: 768px) and (max-width: 1280px) {\n    margin-right: 21px;\n    margin-bottom: 0px;\n  }\n`;\nexport const Section = styled.form`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;\nexport const Input = styled.input`\n  border: 2px solid #ffffff;\n  border-radius: 16px;\n  background-color: transparent;\n  font-weight: 700;\n  text-align: center;\n  color: black;\n  width: 140px;\n  height: 44px;\n  border-radius: 22px 0px 0px 22px;\n\n  @media screen and (min-width: 768px) {\n    margin-right: 15px;\n    border-radius: 16px;\n  }\n  @media (min-width: 1200px) {\n    margin-right: 0;\n    border-radius: 16px;\n    margin-right: 15px;\n    border-right: 1px solid #ffffff;\n  }\n`;\nexport const Button = styled.button`\n  background-color: transparent;\n  border: 2px solid #ffffff;\n  color: rgba(82, 85, 95, 0.7);\n  font-weight: 400;\n  border-radius: 0px 22px 22px 0px;\n  display: inline-block;\n  height: 50px;\n  width: 156px;\n\n  font-size: 12px;\n  line-height: 1.17;\n  letter-spacing: 0.02em;\n\n  text-transform: uppercase;\n  text-align: center;\n\n  @media screen and (min-width: 768px) {\n    border-radius: 16px;\n  }\n\n  :hover {\n    background-color: #ff751d;\n  }\n\n  ::placeholder {\n    font-weight: 700;\n    font-size: 12px;\n    line-height: 14px;\n    display: flex;\n    align-items: center;\n    letter-spacing: 0.02em;\n    text-transform: uppercase;\n    color: #000000;\n  }\n`;\nexport const Wrapper2 = styled.div`\n  position: absolute;\n  bottom: 42px;\n  transform: translateY(calc(100% + 18px)) translateX(16%);\n  width: 292px;\n  background: linear-gradient(117.84deg, #1d346a 2.84%, #031634 67.28%);\n  box-shadow: 0px 10px 60px rgba(170, 178, 197, 0.2);\n  padding: 30px;\n  border-radius: 30px;\n  z-index: 10;\n\n  ::before {\n    content: '';\n    position: absolute;\n    left: 16%;\n    top: -11px;\n    width: 0;\n    height: 0;\n    border-left: 11px solid transparent;\n    border-right: 11px solid transparent;\n    border-bottom: 11px solid #172d5d;\n  }\n`;\n\nexport const Text = styled.p`\n  font-size: 14px;\n  line-height: 20px;\n  color: #ffffff;\n  margin: 0px 0px 20px 0px;\n`;\nexport const Styled = styled.p`\n  font-size: 12px;\n  line-height: 16px;\n  color: #ffffff;\n  margin: 0;\n`;\n","import Container from 'components/Container';\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { updateBalance } from 'redux/auth/authOperations';\n\nimport {\n  Wrapper,\n  Button,\n  Title,\n  Section,\n  Input,\n  Wrapper2,\n  Text,\n  Styled,\n} from './Balance.styled';\nimport { useAuth } from 'hooks/useAuth';\n\nexport default function Balance() {\n  const dispatch = useDispatch();\n  const { balance } = useAuth();\n\n  const [value, setValue] = useState({ balance } ?? 0);\n  const [tooltipOpen, setTooltipOpen] = useState(true);\n\n  useEffect(() => {\n    setValue(balance);\n  }, [balance]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    dispatch(updateBalance({ balance: e.target.elements.balance.value }));\n  };\n\n  const onChange = e => {\n    if (e.target.value < 0) {\n      return;\n    }\n    setValue(e.target.value);\n  };\n\n  return (\n    <Container>\n      <Wrapper>\n        <Title>Balance:</Title>\n        <Section autoComplete=\"off\" onSubmit={onSubmit}>\n          <Input\n            type=\"number\"\n            placeholder={`0.00 UAH`}\n            name=\"balance\"\n            value={value}\n            readOnly={balance}\n            pattern=\"[0-9, UAH]*\"\n            disabled={balance > 0 ? true : false}\n            onChange={onChange}\n          />\n\n          <Button type=\"submit\" disabled={balance > 0 ? true : false}>\n            Confirm\n          </Button>\n        </Section>\n        {!balance > 0 && (\n          <Wrapper2 active={tooltipOpen} setActive={setTooltipOpen}>\n            <Text>\n              Hello! To get started, enter the current balance of your account!\n            </Text>\n            <Styled>You can't spend money until you have it :{' ) '}</Styled>\n          </Wrapper2>\n        )}\n      </Wrapper>\n    </Container>\n  );\n}\n","import styled from 'styled-components';\n\nexport const ContainerBox = styled.div`\n  position: relative;\n  margin-left: auto;\n  margin-right: auto;\n  width: 320px;\n  background: #f2f5fc;\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n    padding-right: 32px;\n    padding-left: 32px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    min-width: 1200px;\n    padding-right: 123px;\n    padding-left: 123px;\n  }\n`;\n","import { ContainerBox } from './Container.styled';\n\nexport default function Container({ children }) {\n  return <ContainerBox>{children}</ContainerBox>;\n}\n","import styled from 'styled-components';\nimport COLORS from '../../variables/colors/colors';\n\nexport const TransactionItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  padding: 8px 0;\n  border-bottom: 1px solid ${COLORS.bgTableTitle};\n`;\n\nexport const TransactionDescription = styled.p`\n  font-family: 'Roboto';\n  font-weight: 700;\n  font-size: 12px;\n  line-height: calc(14 / 12);\n  letter-spacing: 0.04em;\n\n  color: ${COLORS.textColor};\n`;\n\nexport const TransactionInfoBox = styled.div`\n  display: flex;\n  gap: 20px;\n  margin-top: 4px;\n`;\n\nexport const TransactionInfo = styled.p`\n  font-family: 'Roboto';\n  font-weight: 400;\n  font-size: 8px;\n  line-height: calc(9 / 8);\n  letter-spacing: 0.04em;\n\n  color: ${COLORS.textColor};\n`;\n\nexport const TransactionBox = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const TransactionSum = styled.p`\n  font-family: 'Roboto';\n\n  font-weight: 700;\n  font-size: 12px;\n  line-height: calc(14 / 12);\n  letter-spacing: 0.04em;\n\n  color: ${props => (props.isExpenses ? COLORS.redColor : COLORS.greenColor)};\n`;\n\nexport const TransactionDeleteBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  border: none;\n  background-color: transparent;\n\n  cursor: pointer;\n`;\n","import { BsTrash } from 'react-icons/bs';\nimport {\n  TransactionBox,\n  TransactionDeleteBtn,\n  TransactionDescription,\n  TransactionInfo,\n  TransactionInfoBox,\n  TransactionItem,\n  TransactionSum,\n} from './TransactionListMobile.styled';\nimport { useSelector } from 'react-redux';\nimport { selectTransactionsByType } from 'redux/transactions/transactionsSelectors';\nimport Moment from 'react-moment';\n\nexport default function TransactionListMobile() {\n  const filteredTransactions = useSelector(selectTransactionsByType);\n\n  return (\n    <ul>\n      {filteredTransactions.map(\n        ({ _id, date, description, category, sum, type }) => {\n          console.log(type === 'expenses');\n\n          return (\n            <TransactionItem key={_id}>\n              <div>\n                <TransactionDescription>{description}</TransactionDescription>\n                <TransactionInfoBox>\n                  <TransactionInfo>\n                    <Moment format=\"DD.MM.YYYY\">{date}</Moment>\n                  </TransactionInfo>\n                  <TransactionInfo>{category}</TransactionInfo>\n                </TransactionInfoBox>\n              </div>\n              <TransactionBox>\n                <TransactionSum isExpenses={type === 'expenses'}>\n                  {sum}\n                </TransactionSum>\n                <TransactionDeleteBtn>\n                  <BsTrash width={15} height={18} />\n                </TransactionDeleteBtn>\n              </TransactionBox>\n            </TransactionItem>\n          );\n        }\n      )}\n    </ul>\n  );\n}\n","import styled from 'styled-components';\nimport COLORS from 'variables/colors/colors';\n\nexport const TransactionsWrapper = styled.section`\n  @media screen and (min-width: 768px) {\n    margin-top: 60px;\n    width: 704px;\n    padding: 24px 40px 42px 40px;\n    display: flex;\n    flex-direction: column;\n    position: relative;\n    background-color: ${COLORS.whiteColor};\n    box-shadow: 0px 10px 60px rgba(170, 178, W197, 0.2);\n    border-top-right-radius: 30px;\n    border-bottom-right-radius: 30px;\n    border-bottom-left-radius: 30px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    width: 1098px;\n    padding: 32px 32px;\n  }\n`;\n\nexport const Expenses = styled.button`\n  @media screen and (max-width: 767px) {\n    display: none;\n  }\n  @media screen and (min-width: 768px) {\n    width: 138px;\n    higth: 40px;\n    display: inline-block;\n    position: absolute;\n    top: -38px;\n    left: 0px;\n    padding: 10px 20px;\n    background-color: #fefefe;\n    color: ${props =>\n      props.isActive ? COLORS.activeColor : COLORS.blackColor};\n    font-weight: bold;\n    text-align: center;\n    border-top-left-radius: 16px;\n    border-top-right-radius: 16px;\n    border: transparent;\n    text-decoration: none;\n    transition: all 0.2s ease-in-out;\n    cursor: pointer;\n    outline: none;\n  }\n`;\n\nexport const Incomes = styled.button`\n  @media screen and (max-width: 767px) {\n    display: none;\n  }\n  @media screen and (min-width: 768px) {\n    width: 138px;\n    higth: 40px;\n    display: inline-block;\n    position: absolute;\n    top: -38px;\n    left: 138px;\n    padding: 10px 20px;\n    background-color: #fefefe;\n    color: ${props =>\n      props.isActive ? COLORS.activeColor : COLORS.blackColor};\n    font-weight: bold;\n    text-align: center;\n    border-top-left-radius: 16px;\n    border-top-right-radius: 16px;\n    text-decoration: none;\n    transition: all 0.2s ease-in-out;\n    cursor: pointer;\n    outline: none;\n    border: transparent;\n  }\n`;\n","import styled from 'styled-components';\nimport COLORS from 'variables/colors/colors';\n\nexport const TableBodyList = styled.tr`\n  height: 40px;\n  border: 2px solid ${COLORS.bgTableTitle};\n`;\n\nexport const TableBodyItem = styled.td`\n  height: 100%;\n  width: calc(746px / 5);\n\n  text-align: center;\n\n  font-family: 'Roboto';\n  font-weight: 400;\n  font-size: 12px;\n  line-height: calc(14 / 12);\n  letter-spacing: 0.04em;\n\n  color: ${COLORS.textColor};\n\n  :nth-child(4) {\n    font-weight: 700;\n    color: ${props =>\n      props.isExpenses ? COLORS.redColorExpenses : COLORS.greenColor};\n  }\n  :nth-child(5) {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nexport const DeleteBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 32px;\n  height: 32px;\n\n  border: none;\n  border-radius: 50%;\n\n  background-color: ${COLORS.bgTableTitle};\n  cursor: pointer;\n\n  :hover,\n  :focus {\n    background-color: ${COLORS.activeColor};\n  }\n`;\n","import { BsTrash } from 'react-icons/bs';\nimport { useDispatch } from 'react-redux';\nimport { removeTransaction } from 'redux/transactions/transactionsOperations';\nimport { DeleteBtn, TableBodyItem, TableBodyList } from './TableBody.styled';\nimport Moment from 'react-moment';\n\nexport default function TableBody({ transaction }) {\n  const dispatch = useDispatch();\n\n  return (\n    <TableBodyList>\n      <TableBodyItem>\n        <Moment format=\"DD.MM.YYYY\">{transaction.date}</Moment>\n      </TableBodyItem>\n      <TableBodyItem>{transaction.description}</TableBodyItem>\n      <TableBodyItem>{transaction.category}</TableBodyItem>\n      <TableBodyItem isExpenses={transaction.type.toLowerCase() === 'expenses'}>\n        {transaction.sum} UAH.\n      </TableBodyItem>\n      <TableBodyItem>\n        <DeleteBtn onClick={() => dispatch(removeTransaction(transaction._id))}>\n          <BsTrash />\n        </DeleteBtn>\n      </TableBodyItem>\n    </TableBodyList>\n  );\n}\n","import styled from 'styled-components';\nimport COLORS from 'variables/colors/colors';\n\nexport const TransactionBox = styled.div`\n  overflow: hidden;\n\n  border-top-left-radius: 16px;\n  border-top-right-radius: 16px;\n\n  @media screen and (min-width: 1200px) {\n    width: 624px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    width: 746px;\n    height: 400px;\n  }\n`;\n\nexport const TableBox = styled.table`\n  width: 100%;\n\n  border: none;\n\n  border-spacing: 0;\n  border-collapse: collapse;\n\n  table-layout: fixed;\n\n  background-color: ${COLORS.whiteColor};\n\n  @media screen and (min-width: 1200px) {\n    width: 746px;\n    height: 400px;\n  }\n`;\n\nexport const TableTitle = styled.tr``;\n\nexport const TableTitleItem = styled.th`\n  width: calc(100% / 5);\n  height: 40px;\n\n  border-spacing: 0;\n\n  background-color: ${COLORS.bgTableTitle};\n  text-transform: uppercase;\n`;\n\nexport const TableBodys = styled.tbody`\n  display: block;\n  overflow-y: auto;\n  width: 746px;\n  max-height: 400px;\n\n  ::-webkit-scrollbar {\n    width: 6px;\n    background-color: ${COLORS.bgTableTitle};\n  }\n\n  ::-webkit-scrollbar-thumb {\n    border-radius: 2px;\n\n    background-color: ${COLORS.activeColor};\n  }\n`;\n","import TableBody from 'components/TableBody';\nimport { useSelector } from 'react-redux';\nimport { selectTransactionsByType } from 'redux/transactions/transactionsSelectors';\nimport {\n  TableBox,\n  TableTitle,\n  TableTitleItem,\n  TransactionBox,\n  TableBodys,\n} from './Table.styled';\n\nexport default function Table() {\n  const filteredTransactions = useSelector(selectTransactionsByType);\n\n  return (\n    <TransactionBox>\n      <TableBox>\n        <thead>\n          <TableTitle>\n            <TableTitleItem>DATE</TableTitleItem>\n            <TableTitleItem>DESCRIPTION</TableTitleItem>\n            <TableTitleItem>category</TableTitleItem>\n            <TableTitleItem>sum</TableTitleItem>\n            <TableTitleItem></TableTitleItem>\n          </TableTitle>\n        </thead>\n        <TableBodys>\n          {filteredTransactions &&\n            filteredTransactions.map(transaction => (\n              <TableBody key={transaction._id} transaction={transaction} />\n            ))}\n        </TableBodys>\n      </TableBox>\n    </TransactionBox>\n  );\n}\n","import CreateExpenses from 'components/CreateTransaction/CreateTransaction';\nimport {\n  TransactionsWrapper,\n  Incomes,\n  Expenses,\n} from './TransactionsContainer.styled';\nimport { useMedia } from 'hooks/useMedia';\nimport Table from 'components/Table';\nimport TransactionListMobile from 'components/TransactionListMobile';\n\n// import Summary from 'components/Summary';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toggleTransaction } from 'redux/transactions/transactionsSlice';\nimport { selectTypeTransactionMain } from 'redux/transactions/transactionsSelectors';\n\nexport default function TransactionsContainer() {\n  const dispatch = useDispatch();\n  const transactions = useSelector(selectTypeTransactionMain);\n  const { isTabletAndDesktop, isMobile } = useMedia();\n  return (\n    <TransactionsWrapper>\n      <Incomes\n        isActive={transactions === 'incomes'}\n        onClick={() => dispatch(toggleTransaction('incomes'))}\n      >\n        Incomes\n      </Incomes>\n      <Expenses\n        isActive={transactions === 'expenses'}\n        onClick={() => dispatch(toggleTransaction('expenses'))}\n      >\n        Expenses\n      </Expenses>\n      <CreateExpenses transactions={transactions} />\n\n      {isTabletAndDesktop && <Table />}\n      {isMobile && <TransactionListMobile />}\n      {/* {!isMobile && <Summary/>} */}\n    </TransactionsWrapper>\n  );\n}\n","import COLORS from 'variables/colors/colors.js';\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  position: fixed;\n  bottom: 0px;\n`;\n\nexport const Btn = styled.button`\n  width: calc(calc(100vw / 2) - 1px);\n  height: 53px;\n  border: none;\n\n  font-weight: 700;\n  font-size: 12px;\n  text-transform: uppercase;\n\n  color: ${COLORS.blackColor};\n  background-color: ${COLORS.bgTableTitle};\n\n  transition: 0.2s ease-out;\n\n  &:first-child {\n    margin-right: 4px;\n  }\n\n  &:hover,\n  &:focus,\n  &.active {\n    color: ${COLORS.whiteColor};\n    background-color: ${COLORS.activeColor};\n  }\n`;\n","// import { useDispatch, useSelector } from 'react-redux';\n// import { changeType, getType } from 'redux/transactions';\nimport { Btn, Container } from './MobileTypeBtn.styled.jsx';\n\nexport default function MobileTypesBtn() {\n  //   const transactionType = useSelector(getType);\n  //   const dispatch = useDispatch();\n\n  return (\n    <Container>\n      <Btn\n        onClick={() => {\n          //   dispatch(changeType('expenses'));\n        }}\n        // className={transactionType === 'expenses' ? 'active' : ''}\n        name=\"expenses\"\n        type=\"submit\"\n      >\n        Expenses\n      </Btn>\n      <Btn\n        onClick={() => {\n          //   dispatch(changeType('income'));\n        }}\n        // className={transactionType === 'income' ? 'active' : ''}\n        name=\"incomes\"\n        type=\"submit\"\n      >\n        Incomes\n      </Btn>\n    </Container>\n  );\n}\n","import COLORS from 'variables/colors/colors';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nimport { HiArrowNarrowLeft } from 'react-icons/hi';\nimport { RiBarChartFill } from 'react-icons/ri';\n\nexport const MobileContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  margin-left: auto;\n  margin-right: auto;\n  padding-top: 19px;\n`;\n\nexport const MobileInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: calc(100vh - 96px);\n`;\n\nexport const LinkToTransaction = styled(Link)`\n  display: flex;\n  align-items: center;\n  margin-bottom: 24px;\n\n  text-decoration: none;\n  font-family: 'Roboto';\n  text-transform: uppercase;\n\n  font-weight: 700;\n  font-size: 10px;\n  line-height: calc(14 / 12);\n  /* identical to box height */\n\n  letter-spacing: 0.02;\n\n  color: ${COLORS.blackColor};\n`;\n\nexport const LinkToReport = styled(Link)`\ndisplay: flex;\nalign-items: center;\nmargin-bottom: 35px;\nmargin-left: auto;\nmargin-right: auto;\n\ntext-decoration: none;\nfont-family: 'Roboto';\n\nfont-weight: 400;\nfont-size: 12px;\nline-height: calc(14 / 12);\n/* identical to box height */\n\nletter-spacing: 0.02;\n\ncolor: rgba(82, 85, 95, 0.7);`\n\nexport const IconLink = styled(HiArrowNarrowLeft)`\n  margin-right: 6px;\n  // margin-left: 22px;\n  color: ${COLORS.activeColor};\n`;\n\nexport const IconLinkReport = styled(RiBarChartFill)`\n  margin-left: 20px;\n`;\n\nexport const InputDate = styled.input`\n  // margin-right: 16px;\n  height: 44px;\n  width: 119px;\n  border: 2px solid white;\n  outline: none;\n\n  background-color: ${COLORS.whiteColor};\n  color: #52555f;\n  text-align: center;\n`;\n","\nimport { \n  // useEffect,\n   useState } from 'react';\n\nimport Balance from 'components/Balance';\nimport TransactionsContainer from 'components/TransactionsContainer';\nimport TransactionListMobile from 'components/TransactionListMobile';\nimport  MobileTypeBtn from 'components/MobileTypeBtn';\n\nimport {\n  MobileContainer,\n  MobileInfo,\n  LinkToTransaction,\n  IconLink,\nIconLinkReport,\nLinkToReport,\nInputDate,\n  \n} from './Mobile.styled.jsx';\n// import { changeType } from 'redux/transactions';\n// import { useDispatch } from 'react-redux';\n\nexport default function Mobile() {\n  const [trForm, openTrForm] = useState(false);\n  const currentDate = new Date().toISOString().slice(0, 10);\n\n  // const dispatch = useDispatch();\n\n  // useEffect(() => {\n  //   dispatch(changeType('all'));\n  // }, []);\n\n  return (\n    <>\n      <MobileContainer>\n        {trForm ? (\n          <TransactionListMobile openTrForm={openTrForm} />\n        ) : (\n          <MobileInfo>\n            <LinkToTransaction to=\"/transaction\">\n              <IconLink size={18} />\n              TO TRANSACTION\n            </LinkToTransaction>\n            <LinkToReport to=\"/reports\">\n          Reports\n          <IconLinkReport size={14} color=\" #52555F\" />\n        </LinkToReport>\n\n            <Balance />\n            {/* календарь */}\n            \n                <InputDate\n                  name=\"date\"\n                  type=\"date\"\n                  min=\"1920-01-01\"\n                  max={currentDate}\n                  // onChange={event =>\n                  //   setFieldValue(\n                  //     'date',\n                  //     moment(event.target.value).format('YYYY-MM-DD')\n                  //   )\n                  // }\n                />\n          \n             \n          </MobileInfo>\n        )}\n        <TransactionsContainer />\n      </MobileContainer>\n      <MobileTypeBtn openTrForm={openTrForm} />\n    </>\n  );\n}\n\n"],"names":["Wrapper","styled","Title","Section","Input","Button","Wrapper2","Text","Styled","Balance","dispatch","useDispatch","balance","useAuth","useState","value","setValue","tooltipOpen","setTooltipOpen","useEffect","Container","autoComplete","onSubmit","e","preventDefault","updateBalance","target","elements","type","placeholder","name","readOnly","pattern","disabled","onChange","active","setActive","ContainerBox","children","TransactionItem","COLORS","TransactionDescription","TransactionInfoBox","TransactionInfo","TransactionBox","TransactionSum","props","isExpenses","TransactionDeleteBtn","TransactionListMobile","filteredTransactions","useSelector","selectTransactionsByType","map","_id","date","description","category","sum","console","log","format","width","height","TransactionsWrapper","Expenses","isActive","Incomes","TableBodyList","TableBodyItem","DeleteBtn","TableBody","transaction","toLowerCase","onClick","removeTransaction","TableBox","TableTitle","TableTitleItem","TableBodys","Table","TransactionsContainer","transactions","selectTypeTransactionMain","useMedia","isTabletAndDesktop","isMobile","toggleTransaction","Btn","MobileTypesBtn","MobileContainer","MobileInfo","LinkToTransaction","Link","LinkToReport","IconLink","HiArrowNarrowLeft","IconLinkReport","RiBarChartFill","InputDate","Mobile","trForm","openTrForm","currentDate","Date","toISOString","slice","to","size","color","min","max"],"sourceRoot":""}