{"version":3,"file":"static/js/250.facdb55e.chunk.js","mappings":"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","sources":["components/BackgroundPrivateContainer/BackgroundPrivateContainer.styled.jsx","components/BackgroundPrivateContainer/BackgroundPrivateContainer.jsx","components/Balance/Balance.styled.jsx","components/Balance/Balance.jsx","components/Container/Container.styled.jsx","components/Container/Container.jsx","hooks/useMedia.js","components/CategoryContainer/CategoryContainer.styled.jsx","variables/category/category.js","components/IconMaker/IconMaker.jsx","components/CategoryContainer/CategoryContainer.jsx","components/GraphicBar/GraphicBar.jsx","components/Graphic/Graphic.styled.jsx","components/GraphicMobileBar/GraphicMobileBar.jsx","components/Graphic/Graphic.jsx","components/Swager/Swager.styled.jsx","components/Swager/Swager.jsx","pages/Reports/Reports.styled.jsx","components/ReportInfo/ReportInfo.styled.jsx","components/ReportInfo/ReportInfo.jsx","pages/Reports/Reports.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport COLORS from 'variables/colors/colors';\n\nexport const Container = styled.div`\n  padding-bottom: 514px;\n  background-color: ${COLORS.whiteColor};\n\n  @media screen and (min-width: 768px) {\n    padding-bottom: 442px;\n\n    background-image: url(${props => props.groupImg});\n    background-repeat: no-repeat;\n    background-position: bottom 59px right calc(((100% - 678px)));\n  }\n\n  @media screen and (min-width: 1200px) {\n    background-image: url(${props => props.img});\n    padding-bottom: 268px;\n    background-position: bottom right;\n  }\n`;\n\nexport const ContainerTop = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n\n  height: 320px;\n  background-color: #f5f6fb;\n\n  border-bottom-left-radius: 100px 100px;\n\n  @media screen and (min-width: 768px) {\n    height: 582px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    height: 583px;\n  }\n`;\n\nexport const ContainerUnder = styled.div``;\n","import { Container, ContainerTop } from './BackgroundPrivateContainer.styled';\n\nexport default function BackgroundPrivateContainer({ children }) {\n  return (\n    <Container\n      groupImg={process.env.PUBLIC_URL + '/images/groupCabbage.png'}\n      img={process.env.PUBLIC_URL + '/images/background.png'}\n    >\n      <ContainerTop>{children}</ContainerTop>\n    </Container>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  flex-direction: column;\n  justify-content: center;\n  margin: 0 auto;\n\n  @media (min-width: 768px) {\n    display: flex;\n    align-items: center;\n    justify-content: space-around;\n    position: relative;\n    width: fit-content;\n    margin: 0 auto;\n    flex-direction: row;\n    align-self: center;\n    margin-bottom: 60px;\n  }\n  @media (min-width: 1200px) {\n    margin-bottom: 48px;\n    padding-top: 40px;\n  }\n`;\nexport const Title = styled.p`\n  font-size: 12px;\n  line-height: 14px;\n  font-weight: 500;\n  text-align: center;\n  letter-spacing: 0.02em;\n  color: rgba(82, 85, 95, 0.7);\n  margin-right: 20px;\n  margin-bottom: 8px;\n  @media screen and (min-width: 768px) and (max-width: 1280px) {\n    margin-right: 21px;\n    margin-bottom: 0px;\n  }\n`;\nexport const Section = styled.form`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;\nexport const Input = styled.input`\n  border: 2px solid #ffffff;\n  border-radius: 16px;\n  background-color: transparent;\n  font-weight: 700;\n  text-align: center;\n  color: black;\n  width: 140px;\n  height: 44px;\n  border-radius: 22px 0px 0px 22px;\n\n  @media screen and (min-width: 768px) {\n    margin-right: 15px;\n    border-radius: 16px;\n  }\n  @media (min-width: 1200px) {\n    margin-right: 0;\n    border-radius: 16px;\n    margin-right: 15px;\n    border-right: 1px solid #ffffff;\n  }\n`;\nexport const Button = styled.button`\n  background-color: transparent;\n  border: 2px solid #ffffff;\n  color: rgba(82, 85, 95, 0.7);\n  font-weight: 400;\n  border-radius: 0px 22px 22px 0px;\n  display: inline-block;\n  height: 50px;\n  width: 156px;\n\n  font-size: 12px;\n  line-height: 1.17;\n  letter-spacing: 0.02em;\n\n  text-transform: uppercase;\n  text-align: center;\n\n  @media screen and (min-width: 768px) {\n    border-radius: 16px;\n  }\n\n  :hover {\n    background-color: #ff751d;\n  }\n\n  ::placeholder {\n    font-weight: 700;\n    font-size: 12px;\n    line-height: 14px;\n    display: flex;\n    align-items: center;\n    letter-spacing: 0.02em;\n    text-transform: uppercase;\n    color: #000000;\n  }\n`;\nexport const Wrapper2 = styled.div`\n  position: absolute;\n  bottom: 0;\n  transform: translateY(calc(100% + 18px)) translateX(16%);\n  width: 292px;\n  background: linear-gradient(117.84deg, #1d346a 2.84%, #031634 67.28%);\n  box-shadow: 0px 10px 60px rgba(170, 178, 197, 0.2);\n  padding: 30px;\n  border-radius: 30px;\n  z-index: 10;\n\n  ::before {\n    content: '';\n    position: absolute;\n    left: 16%;\n    top: -11px;\n    width: 0;\n    height: 0;\n    border-left: 11px solid transparent;\n    border-right: 11px solid transparent;\n    border-bottom: 11px solid #172d5d;\n  }\n`;\n\nexport const Text = styled.p`\n  font-size: 14px;\n  line-height: 20px;\n  color: #ffffff;\n  margin: 0px 0px 20px 0px;\n`;\nexport const Styled = styled.p`\n  font-size: 12px;\n  line-height: 16px;\n  color: #ffffff;\n  margin: 0;\n`;\n","import Container from 'components/Container';\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { updateBalance } from 'redux/auth/authOperations';\n\nimport {\n  Wrapper,\n  Button,\n  Title,\n  Section,\n  Input,\n  Wrapper2,\n  Text,\n  Styled,\n} from './Balance.styled';\nimport { useAuth } from 'hooks/useAuth';\n\nexport default function Balance() {\n  const dispatch = useDispatch();\n  const { balance } = useAuth();\n\n  const [value, setValue] = useState({ balance } ?? 0);\n  const [tooltipOpen, setTooltipOpen] = useState(true);\n\n  useEffect(() => {\n    setValue(balance);\n  }, [balance]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    dispatch(updateBalance({ balance: e.target.elements.balance.value }));\n  };\n\n  const onChange = e => {\n    if (e.target.value < 0) {\n      return;\n    }\n    setValue(e.target.value);\n  };\n\n  return (\n    <Container>\n      <Wrapper>\n        <Title>Balance:</Title>\n        <Section autoComplete=\"off\" onSubmit={onSubmit}>\n          <Input\n            type=\"number\"\n            placeholder={`0.00 UAH`}\n            name=\"balance\"\n            value={value}\n            readOnly={balance}\n            pattern=\"[0-9, UAH]*\"\n            disabled={balance > 0 ? true : false}\n            onChange={onChange}\n          />\n\n          <Button type=\"submit\" disabled={balance > 0 ? true : false}>\n            Confirm\n          </Button>\n        </Section>\n        {!balance > 0 && (\n          <Wrapper2 active={tooltipOpen} setActive={setTooltipOpen}>\n            <Text>\n              Hello! To get started, enter the current balance of your account!\n            </Text>\n            <Styled>You can't spend money until you have it :{' ) '}</Styled>\n          </Wrapper2>\n        )}\n      </Wrapper>\n    </Container>\n  );\n}\n","import styled from 'styled-components';\n\nexport const ContainerBox = styled.div`\n  position: relative;\n  margin-left: auto;\n  margin-right: auto;\n  width: 320px;\n  background: #f2f5fc;\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n    padding-right: 32px;\n    padding-left: 32px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    min-width: 1200px;\n    padding-right: 123px;\n    padding-left: 123px;\n  }\n`;\n","import { ContainerBox } from './Container.styled';\n\nexport default function Container({ children }) {\n  return <ContainerBox>{children}</ContainerBox>;\n}\n","import { useMediaQuery } from 'react-responsive';\n\nexport const useMedia = () => {\n  const isDesktop = useMediaQuery({\n    query: '(min-width: 1200px)',\n  });\n  const isTabletAndDesktop = useMediaQuery({\n    query: '(min-width: 768px)',\n  });\n  const isMobile = useMediaQuery({ minWidth: 320, maxWidth: 767 });\n  const isTablet = useMediaQuery({ minWidth: 768, maxWidth: 1199 });\n\n  return {\n    isTablet,\n    isMobile,\n    isDesktop,\n    isTabletAndDesktop,\n  };\n};\n","import styled from 'styled-components';\nimport COLORS from 'variables/colors/colors';\n\nexport const Container = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 40px;\n\n  padding: 20px 0;\n\n  width: 1034px;\n  background-color: ${COLORS.whiteColor};\n`;\n\nexport const ChoseBox = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  margin-bottom: 20px;\n`;\n\nexport const ChosenTitle = styled.p`\n  padding: 0 16px;\n\n  font-family: 'Roboto';\n\n  font-weight: 700;\n  font-size: 14px;\n  line-height: calc(16 / 14);\n\n  letter-spacing: 0.02;\n  text-transform: uppercase;\n\n  color: ${COLORS.blackColor};\n`;\n\nexport const ChoseBtn = styled.button`\n  border: none;\n  background-color: transparent;\n`;\n\nexport const BtnList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 52px;\n\n  list-style: none;\n  padding: 20px 224px;\n`;\n\nexport const Btn = styled.button`\n  position: relative;\n  border: none;\n  background-color: transparent;\n`;\n\nexport const BtnTitle = styled.span`\n  display: block;\n`;\n","export const categoryList = [\n  {\n    name: 'Products',\n    type: 'Expenses',\n  },\n  {\n    name: 'Alcohol',\n    type: 'Expenses',\n  },\n  {\n    name: 'Entertainment',\n    type: 'Expenses',\n  },\n  {\n    name: 'Health',\n    type: 'Expenses',\n  },\n  {\n    name: 'Transport',\n    type: 'Expenses',\n  },\n  {\n    name: 'Housing',\n    type: 'Expenses',\n  },\n  {\n    name: 'Technique',\n    type: 'Expenses',\n  },\n  {\n    name: 'Communal, communication',\n    type: 'Expenses',\n  },\n  {\n    name: 'Sports, hobbies',\n    type: 'Expenses',\n  },\n  {\n    name: 'Education',\n    type: 'Expenses',\n  },\n  {\n    name: 'Other',\n    type: 'Expenses',\n  },\n  {\n    name: 'Salary',\n    type: 'Incomes',\n  },\n  {\n    name: 'Add. income',\n    type: 'Incomes',\n  },\n];\n","import { GiFamilyHouse } from 'react-icons/gi';\nimport { BsTools } from 'react-icons/bs';\nimport { MdSportsHandball } from 'react-icons/md';\nimport { BsBookHalf } from 'react-icons/bs';\nimport { MdDevicesOther } from 'react-icons/md';\nimport { FiMeh } from 'react-icons/fi';\nimport { SiJusteat } from 'react-icons/si';\nimport { BiDrink, BiJoystick } from 'react-icons/bi';\nimport { GiHealing } from 'react-icons/gi';\nimport { MdEmojiTransportation } from 'react-icons/md';\nimport { FcMoneyTransfer } from 'react-icons/fc';\nimport { GrMoney } from 'react-icons/gr';\n\nexport default function IconMaker({ category, size, color }) {\n  if (category === 'Products') {\n    return <SiJusteat size={size} color={color} />;\n  }\n  if (category === 'Alcohol') {\n    return <BiDrink size={size} color={color} />;\n  }\n  if (category === 'Entertainment') {\n    return <BiJoystick size={size} color={color} />;\n  }\n  if (category === 'Health') {\n    return <GiHealing size={size} color={color} />;\n  }\n  if (category === 'Transport') {\n    return <MdEmojiTransportation size={size} color={color} />;\n  }\n  if (category === 'Housing') {\n    return <GiFamilyHouse size={size} color={color} />;\n  }\n  if (category === 'Technique') {\n    return <BsTools size={size} color={color} />;\n  }\n  if (category === 'Communal, communication') {\n    return <MdDevicesOther size={size} color={color} />;\n  }\n  if (category === 'Sports, hobbies') {\n    return <MdSportsHandball size={size} color={color} />;\n  }\n  if (category === 'Education') {\n    return <BsBookHalf size={size} color={color} />;\n  }\n  if (category === 'Other') {\n    return <FiMeh size={size} color={color} />;\n  }\n  if (category === 'Salary') {\n    return <GrMoney size={size} color={color} />;\n  }\n  if (category === 'Add. income') {\n    return <FcMoneyTransfer size={size} color={color} />;\n  }\n}\n","import {\n  BtnList,\n  Container,\n  Btn,\n  BtnTitle,\n  ChoseBox,\n  ChosenTitle,\n  ChoseBtn,\n} from './CategoryContainer.styled';\nimport { MdKeyboardArrowLeft, MdKeyboardArrowRight } from 'react-icons/md';\nimport COLORS from 'variables/colors/colors';\nimport { categoryList } from 'variables/category/category';\nimport IconMaker from 'components/IconMaker';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  changeCategoryExpenses,\n  changeCategoryIncomes,\n  toggleReportType,\n} from 'redux/transactions/transactionsSlice';\nimport {\n  selectReportsCategoryExpenses,\n  selectReportsCategoryIncomes,\n  selectSummaryByCategory,\n  selectTypeTransactionReports,\n} from 'redux/transactions/transactionsSelectors';\n\nexport default function CategoryContainer() {\n  const dispatch = useDispatch();\n  const type = useSelector(selectTypeTransactionReports);\n  const categoryExpenses = useSelector(selectReportsCategoryExpenses);\n  const categoryIncomes = useSelector(selectReportsCategoryIncomes);\n  const fileredCategory = categoryList.filter(\n    category => category.type === type\n  );\n\n  const summary = useSelector(selectSummaryByCategory);\n  console.log(summary);\n\n  function handleSetCategory(name) {\n    if (type === 'Expenses') {\n      dispatch(changeCategoryExpenses(name));\n      return;\n    }\n    dispatch(changeCategoryIncomes(name));\n  }\n\n  function summaryCategory(name) {\n    if (summary.length === 0) {\n      return 0;\n    }\n\n    const index = summary.findIndex(\n      el => el.name.toLowerCase() === name.toLowerCase()\n    );\n    if (index === -1) {\n      return 0;\n    }\n\n    return summary[index].sum;\n  }\n\n  return (\n    <Container>\n      <ChoseBox>\n        <ChoseBtn onClick={() => dispatch(toggleReportType())}>\n          <MdKeyboardArrowLeft size={20} color={COLORS.activeColor} />\n        </ChoseBtn>\n        <ChosenTitle>{type}</ChosenTitle>\n        <ChoseBtn onClick={() => dispatch(toggleReportType())}>\n          <MdKeyboardArrowRight size={20} color={COLORS.activeColor} />\n        </ChoseBtn>\n      </ChoseBox>\n\n      <BtnList>\n        {fileredCategory.map(element => {\n          return (\n            <li key={element.name}>\n              <Btn onClick={() => handleSetCategory(element.name)}>\n                <BtnTitle>{summaryCategory(element.name)}</BtnTitle>\n                <IconMaker\n                  category={element.name}\n                  size={56}\n                  color={\n                    categoryExpenses === element.name ||\n                    categoryIncomes === element.name\n                      ? COLORS.activeColor\n                      : '#071F41'\n                  }\n                />\n                <BtnTitle>{element.name}</BtnTitle>\n              </Btn>\n            </li>\n          );\n        })}\n      </BtnList>\n    </Container>\n  );\n}\n","import { useMedia } from 'hooks/useMedia';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  CartesianGrid,\n  ResponsiveContainer,\n  YAxis,\n  Cell,\n  Text,\n} from 'recharts';\nimport COLORS from 'variables/colors/colors';\nimport { selectDescriptionsByCategory } from 'redux/transactions/transactionsSelectors';\nimport { useSelector } from 'react-redux';\n\nconst CustomizedLabel = ({ x, y, _, value }) => {\n  return (\n    <text\n      x={x}\n      y={y}\n      dy={-8}\n      dx={20}\n      fontSize=\"12\"\n      fontFamily=\"Roboto\"\n      fill={COLORS.textColor}\n      textAnchor=\"middle\"\n    >\n      {value} UAH.\n    </text>\n  );\n};\n\nconst CustomizedTickLabel = ({ x, y, payload }) => {\n  return (\n    <Text\n      x={x}\n      y={y}\n      dy={4}\n      dx={-15}\n      fill={COLORS.textColor}\n      fontSize={12}\n      fontFamily={'Roboto'}\n    >\n      {payload.value}\n    </Text>\n  );\n};\n\nexport default function GraphicBar({ transaction }) {\n  const { isDesktop } = useMedia();\n  const desriptions = useSelector(selectDescriptionsByCategory);\n\n  const padding = isDesktop ? 77 : 5;\n  const margin = isDesktop ? 150 : 50;\n\n  return (\n    <ResponsiveContainer>\n      <BarChart\n        data={desriptions}\n        stackOffset={'expand'}\n        margin={{\n          top: 50,\n          right: margin,\n          left: margin,\n          bottom: 5,\n        }}\n        barGap={25}\n      >\n        <CartesianGrid vertical={false} stroke={COLORS.bgTableTitle} />\n        <XAxis\n          dataKey=\"name\"\n          padding={{ left: padding, right: padding }}\n          axisLine={false}\n          tickLine={false}\n          tick={<CustomizedTickLabel />}\n        />\n        <YAxis tickCount={9} hide={true} />\n\n        <Bar\n          dataKey=\"sum\"\n          fill={COLORS.activeColor}\n          minPointSize={5}\n          radius={[10, 10, 0, 0]}\n          label={<CustomizedLabel />}\n          barSize={35}\n        >\n          {desriptions.map((element, index) => (\n            <Cell\n              fill={index % 3 ? COLORS.barColor : COLORS.activeColor}\n              key={element.id}\n            />\n          ))}\n        </Bar>\n      </BarChart>\n    </ResponsiveContainer>\n  );\n}\n","import { ResponsiveContainer } from 'recharts';\nimport styled from 'styled-components';\nimport COLORS from 'variables/colors/colors';\n\nexport const GraphicBox = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  margin-left: auto;\n  margin-right: auto;\n\n  width: 704px;\n  height: 422px;\n  box-shadow: 0px 10px 60px rgba(170, 178, 197, 0.2);\n  border-radius: 30px;\n\n  background-color: ${COLORS.whiteColor};\n\n  @media screen and (min-width: 1200px) {\n    width: 1034px;\n  }\n`;\n\nexport const GraphicMobileBox = styled(ResponsiveContainer)`\n  display: flex;\n\n  padding: 20px 0;\n  width: 320px;\n\n  @media (min-width: 481px) and (max-width: 767px) {\n    width: 480px;\n  }\n`;\n","import { BarChart, Bar, YAxis, Cell, Text, XAxis } from 'recharts';\nimport COLORS from 'variables/colors/colors';\n\nconst CustomizedLabel = ({ x, y, width, value }) => {\n  return (\n    <text\n      x={x + 60 > x + width ? x + 60 : x + width}\n      y={y}\n      fontSize=\"10\"\n      fontFamily=\"Roboto\"\n      fill={COLORS.textColor}\n      textAnchor=\"middle\"\n      dy={-4}\n    >\n      {value} UAH.\n    </text>\n  );\n};\n\n//x + width\n\nconst CustomizedTickLabel = ({ x, y, payload }) => {\n  return (\n    <Text\n      x={x}\n      y={y}\n      dy={-12}\n      dx={7}\n      fill={COLORS.textColor}\n      fontSize={10}\n      fontFamily={'Roboto'}\n    >\n      {payload.value}\n    </Text>\n  );\n};\n\nexport default function GraphicMobileBar({ transaction }) {\n  console.log(transaction);\n\n  return (\n    <BarChart\n      width={320}\n      height={540}\n      data={transaction}\n      layout=\"vertical\"\n      barCategoryGap={36}\n      margin={{ left: 0, right: 25 }}\n    >\n      <XAxis type=\"number\" hide />\n      <YAxis\n        dataKey=\"name\"\n        type=\"category\"\n        axisLine={false}\n        tickLine={false}\n        tick={<CustomizedTickLabel />}\n        width={1}\n      />\n      <Bar\n        dataKey={'sum'}\n        fill={COLORS.activeColor}\n        radius={[0, 10, 10, 0]}\n        label={<CustomizedLabel />}\n        barSize={15}\n      >\n        {transaction.map((_, index) => (\n          <Cell fill={index % 3 ? COLORS.barColor : COLORS.activeColor} />\n        ))}\n      </Bar>\n    </BarChart>\n  );\n}\n","import GraphicBar from 'components/GraphicBar';\nimport { GraphicBox, GraphicMobileBox } from './Graphic.styled';\nimport { useMedia } from 'hooks/useMedia';\nimport GraphicMobileBar from 'components/GraphicMobileBar';\nimport { selectDescriptionsByCategory } from 'redux/transactions/transactionsSelectors';\nimport { useSelector } from 'react-redux';\n\nexport default function Graphic() {\n  const { isTabletAndDesktop, isMobile } = useMedia();\n  const desriptions = useSelector(selectDescriptionsByCategory);\n\n  return (\n    <>\n      {isTabletAndDesktop && (\n        <GraphicBox>\n          <GraphicBar transaction={desriptions} />\n        </GraphicBox>\n      )}\n      {isMobile && (\n        <GraphicMobileBox>\n          <GraphicMobileBar transaction={desriptions} />\n        </GraphicMobileBox>\n      )}\n    </>\n  );\n}\n","import styled from 'styled-components';\nimport { SwiperSlide } from 'swiper/react';\nimport COLORS from 'variables/colors/colors';\n\nexport const SwagerBox = styled.div`\n  width: 180px;\n  position: absolute;\n  right: calc((100% - 704px) / 2);\n  top: 42px;\n\n  @media screen and (min-width: 1200px) {\n    right: calc((100% - 1034px) / 2);\n  }\n`;\n\nexport const SwagerTitle = styled.p`\n  padding-bottom: 5px;\n\n  font-family: 'Roboto';\n  font-weight: 400;\n  font-size: 12px;\n  line-height: calc(14 / 12);\n  /* identical to box height */\n\n  text-align: center;\n  letter-spacing: 0.04;\n\n  color: rgba(82, 85, 95, 0.7);\n`;\n\nexport const Slide = styled(SwiperSlide)`\n  font-family: 'Roboto';\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 16px;\n  letter-spacing: 0.02;\n  text-transform: uppercase;\n\n  text-align: center;\n\n  color: ${COLORS.blackColor};\n`;\n","import 'swiper/css';\nimport 'swiper/css/navigation';\n\nimport { Slide, SwagerBox, SwagerTitle } from './Swager.styled';\nimport { Navigation } from 'swiper';\nimport { Swiper } from 'swiper/react';\nimport { useDispatch } from 'react-redux';\nimport { setCurrentPeriod } from 'redux/transactions/transactionsSlice';\nimport { nanoid } from '@reduxjs/toolkit';\n\nconst periods = [\n  {\n    id: nanoid(),\n    month: 'September',\n    year: 2022,\n    mm: 9,\n  },\n  {\n    id: nanoid(),\n    month: 'October',\n    year: 2022,\n    mm: 10,\n  },\n  { id: nanoid(), month: 'November', year: 2022, mm: 11 },\n  { id: nanoid(), month: 'December', year: 2022, mm: 12 },\n  { id: nanoid(), month: 'January', year: 2023, mm: 1 },\n  { id: nanoid(), month: 'February', year: 2023, mm: 2 },\n];\n\nexport default function Swager() {\n  const dispatch = useDispatch();\n\n  return (\n    <SwagerBox>\n      <SwagerTitle>Current period: </SwagerTitle>\n      <Swiper\n        navigation\n        modules={[Navigation]}\n        className=\"mySwiper\"\n        style={{\n          '--swiper-pagination-color': '#FF751D',\n          '--swiper-navigation-color': '#FF751D',\n        }}\n        onSlideChange={swiperCore => {\n          const { activeIndex } = swiperCore;\n\n          dispatch(setCurrentPeriod(periods[activeIndex]));\n        }}\n      >\n        {periods.map(period => (\n          <Slide key={period.id}>\n            {period.month}\n            <span> {period.year}</span>\n          </Slide>\n        ))}\n      </Swiper>\n    </SwagerBox>\n  );\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nimport { HiArrowNarrowLeft } from 'react-icons/hi';\nimport COLORS from 'variables/colors/colors';\n\nexport const LinkToMain = styled(Link)`\n  display: flex;\n  align-items: center;\n\n  text-decoration: none;\n  font-family: 'Roboto';\n\n  font-weight: 400;\n  font-size: 12px;\n  line-height: calc(14 / 12);\n  /* identical to box height */\n\n  letter-spacing: 0.04;\n\n  color: rgba(82, 85, 95, 0.7);\n\n  @media screen and (min-width: 678px) {\n    position: absolute;\n    top: 57px;\n    left: calc((100% - 704px) / 2);\n    z-index: 20;\n  }\n\n  @media screen and (min-width: 1200px) {\n    left: calc((100% - 1034px) / 2);\n  }\n`;\n\nexport const IconLink = styled(HiArrowNarrowLeft)`\n  margin-right: 20px;\n  color: ${COLORS.activeColor};\n`;\n","import COLORS from 'variables/colors/colors.js';\nimport styled from 'styled-components';\n\nexport const Wraper = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: row;\n  width: 100%;\n  height: 85px;\n  border-radius: 20px;\n  margin-bottom: 32px;\n  margin-right: 20px;\n  margin-left: 20px;\n  background: ${COLORS.whiteColor};\n  box-shadow: 5px 10px 20px rgba(170, 178, 197, 0.4);\n\n  @media screen and (min-width: 772px) {\n    height: 50px;\n    border-radius: 30px;\n    box-shadow: 0px 10px 60px rgba(170, 178, 197, 0.2);\n    margin-left: auto;\n    margin-right: auto;\n  }\n\n  div {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    width: calc(100% / 2);\n    height: 100%;\n\n    :first-child {\n      padding-right: 20px;\n      border-right: 1px solid #e0e5eb;\n    }\n\n    @media screen and (min-width: 772px) {\n      flex-direction: row;\n      justify-content: flex-start;\n      padding-left: 20px;\n\n      :first-child {\n        justify-content: flex-end;\n        padding-right: 20px;\n      }\n    }\n  }\n`;\n\nexport const ItemText = styled.p`\n  font-weight: 700;\n  font-size: 14px;\n  margin-bottom: 4px;\n\n  color: ${COLORS.textColor};\n\n  @media screen and (min-width: 772px) {\n    margin-right: 15px;\n    margin-bottom: 0;\n  }\n`;\n\nexport const Sum = styled.p`\n  display: block;\n  font-weight: 700;\n  font-size: 14px;\n  color: ${({ type }) =>\n    type === 'expenses' ? COLORS.redColorExpenses : COLORS.greenColorIncoms};\n`;\n","import { useSelector } from 'react-redux';\nimport { selectSummary } from 'redux/transactions/transactionsSelectors.js';\nimport { Sum, ItemText, Wraper } from './ReportInfo.styled.jsx';\n\nexport default function ReportInfo() {\n  const { incomes, expenses } = useSelector(selectSummary);\n\n  return (\n    <Wraper>\n      <div>\n        <ItemText>Expenses:</ItemText>\n        <Sum type={'expenses'}> {expenses}.00 UAH.</Sum>\n      </div>\n      <div>\n        <ItemText>Incomes:</ItemText>\n        <Sum type={'incomes'}>+ {incomes}.00 UAH.</Sum>\n      </div>\n    </Wraper>\n  );\n}\n","import BackgroundPrivateContainer from 'components/BackgroundPrivateContainer';\nimport Balance from 'components/Balance';\nimport CategoryContainer from 'components/CategoryContainer';\nimport Container from 'components/Container';\nimport Graphic from 'components/Graphic';\nimport Swager from 'components/Swager';\nimport { IconLink, LinkToMain } from './Reports.styled';\nimport ReportInfo from 'components/ReportInfo';\n\nexport default function Reports() {\n  return (\n    <BackgroundPrivateContainer>\n      <Container>\n        <LinkToMain to=\"/main\">\n          <IconLink size={18} />\n          Main Page\n        </LinkToMain>\n\n        <Balance />\n        <Swager />\n\n        <ReportInfo />\n        <CategoryContainer />\n        <Graphic />\n      </Container>\n    </BackgroundPrivateContainer>\n  );\n}\n"],"names":["Container","styled","COLORS","props","groupImg","img","ContainerTop","BackgroundPrivateContainer","children","process","Wrapper","Title","Section","Input","Button","Wrapper2","Text","Styled","Balance","dispatch","useDispatch","balance","useAuth","useState","value","setValue","tooltipOpen","setTooltipOpen","useEffect","autoComplete","onSubmit","e","preventDefault","updateBalance","target","elements","type","placeholder","name","readOnly","pattern","disabled","onChange","active","setActive","ContainerBox","useMedia","isDesktop","useMediaQuery","query","isTabletAndDesktop","isMobile","minWidth","maxWidth","isTablet","ChoseBox","ChosenTitle","ChoseBtn","BtnList","Btn","BtnTitle","categoryList","IconMaker","category","size","color","CategoryContainer","useSelector","selectTypeTransactionReports","categoryExpenses","selectReportsCategoryExpenses","categoryIncomes","selectReportsCategoryIncomes","fileredCategory","filter","summary","selectSummaryByCategory","summaryCategory","length","index","findIndex","el","toLowerCase","sum","console","log","onClick","toggleReportType","map","element","changeCategoryIncomes","changeCategoryExpenses","CustomizedLabel","x","y","_","dy","dx","fontSize","fontFamily","fill","textAnchor","CustomizedTickLabel","payload","GraphicBar","transaction","desriptions","selectDescriptionsByCategory","padding","margin","ResponsiveContainer","BarChart","data","stackOffset","top","right","left","bottom","barGap","CartesianGrid","vertical","stroke","XAxis","dataKey","axisLine","tickLine","tick","YAxis","tickCount","hide","Bar","minPointSize","radius","label","barSize","Cell","id","GraphicBox","GraphicMobileBox","width","GraphicMobileBar","height","layout","barCategoryGap","Graphic","SwagerBox","SwagerTitle","Slide","SwiperSlide","periods","nanoid","month","year","mm","Swager","navigation","modules","Navigation","className","style","onSlideChange","swiperCore","activeIndex","setCurrentPeriod","period","LinkToMain","Link","IconLink","HiArrowNarrowLeft","Wraper","ItemText","Sum","ReportInfo","selectSummary","incomes","expenses","Reports","to"],"sourceRoot":""}